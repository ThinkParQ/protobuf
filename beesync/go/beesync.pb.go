// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: beesync.proto

package _go

import (
	_go "github.com/thinkparq/protobuf/beegfs/go"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigUpdateResponse_Result int32

const (
	ConfigUpdateResponse_UNKNOWN ConfigUpdateResponse_Result = 0 // Should not be used. Exists only as the default if there is a programming error.
	ConfigUpdateResponse_SUCCESS ConfigUpdateResponse_Result = 1 // The configuration was succesfully updated.
	ConfigUpdateResponse_PARTIAL ConfigUpdateResponse_Result = 2 // The configuration was partially updated (see the message for details).
	ConfigUpdateResponse_FAILURE ConfigUpdateResponse_Result = 3 // The configuration was not updated.
)

// Enum value maps for ConfigUpdateResponse_Result.
var (
	ConfigUpdateResponse_Result_name = map[int32]string{
		0: "UNKNOWN",
		1: "SUCCESS",
		2: "PARTIAL",
		3: "FAILURE",
	}
	ConfigUpdateResponse_Result_value = map[string]int32{
		"UNKNOWN": 0,
		"SUCCESS": 1,
		"PARTIAL": 2,
		"FAILURE": 3,
	}
)

func (x ConfigUpdateResponse_Result) Enum() *ConfigUpdateResponse_Result {
	p := new(ConfigUpdateResponse_Result)
	*p = x
	return p
}

func (x ConfigUpdateResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigUpdateResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_beesync_proto_enumTypes[0].Descriptor()
}

func (ConfigUpdateResponse_Result) Type() protoreflect.EnumType {
	return &file_beesync_proto_enumTypes[0]
}

func (x ConfigUpdateResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigUpdateResponse_Result.Descriptor instead.
func (ConfigUpdateResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{1, 0}
}

type SyncRequest_Operation int32

const (
	SyncRequest_UNKNOWN  SyncRequest_Operation = 0
	SyncRequest_UPLOAD   SyncRequest_Operation = 1
	SyncRequest_DOWNLOAD SyncRequest_Operation = 2
)

// Enum value maps for SyncRequest_Operation.
var (
	SyncRequest_Operation_name = map[int32]string{
		0: "UNKNOWN",
		1: "UPLOAD",
		2: "DOWNLOAD",
	}
	SyncRequest_Operation_value = map[string]int32{
		"UNKNOWN":  0,
		"UPLOAD":   1,
		"DOWNLOAD": 2,
	}
)

func (x SyncRequest_Operation) Enum() *SyncRequest_Operation {
	p := new(SyncRequest_Operation)
	*p = x
	return p
}

func (x SyncRequest_Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncRequest_Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_beesync_proto_enumTypes[1].Descriptor()
}

func (SyncRequest_Operation) Type() protoreflect.EnumType {
	return &file_beesync_proto_enumTypes[1]
}

func (x SyncRequest_Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncRequest_Operation.Descriptor instead.
func (SyncRequest_Operation) EnumDescriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{3, 0}
}

// All RemoteStorageTarget(s) that should be configured need to be included in
// each message. Any that are not included will be deleted.
type ConfigUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rsts []*_go.RemoteStorageTarget `protobuf:"bytes,1,rep,name=rsts,proto3" json:"rsts,omitempty"`
}

func (x *ConfigUpdateRequest) Reset() {
	*x = ConfigUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beesync_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdateRequest) ProtoMessage() {}

func (x *ConfigUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beesync_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdateRequest.ProtoReflect.Descriptor instead.
func (*ConfigUpdateRequest) Descriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigUpdateRequest) GetRsts() []*_go.RemoteStorageTarget {
	if x != nil {
		return x.Rsts
	}
	return nil
}

type ConfigUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result ConfigUpdateResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=beesync.ConfigUpdateResponse_Result" json:"result,omitempty"`
	// Message should be used to return any additional details, particuarly to aid in troubleshooting.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ConfigUpdateResponse) Reset() {
	*x = ConfigUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beesync_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdateResponse) ProtoMessage() {}

func (x *ConfigUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beesync_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdateResponse.ProtoReflect.Descriptor instead.
func (*ConfigUpdateResponse) Descriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigUpdateResponse) GetResult() ConfigUpdateResponse_Result {
	if x != nil {
		return x.Result
	}
	return ConfigUpdateResponse_UNKNOWN
}

func (x *ConfigUpdateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// A JobRequest encapsulates the details of a particular SyncRequest along with
// its state including the auto generated ID, segment, and status fields. It is
// expected the fields in a SyncJob will be populated over time as the job
// progresses. For example when BeeRemote initially starts a job Segment will
// not be set so BeeSync can determine if it should determine this (based on
// file size and autostart_max_size), or if it needs to send the job back to
// BeeRemote so it can determine if the job should be distributed across
// multiple nodes. Therefore it is critical to understand the concept of field
// presence in proto3: https://protobuf.dev/programming-guides/field_presence/
// TL;DR - Generally expect fields to default to the language specific default
// values for each type for any fields that were not set by the server.
type JobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status  *_go.JobStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Request *SyncRequest   `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	Segment *Segment       `protobuf:"bytes,4,opt,name=segment,proto3" json:"segment,omitempty"`
}

func (x *JobRequest) Reset() {
	*x = JobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beesync_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobRequest) ProtoMessage() {}

func (x *JobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beesync_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobRequest.ProtoReflect.Descriptor instead.
func (*JobRequest) Descriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{2}
}

func (x *JobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobRequest) GetStatus() *_go.JobStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *JobRequest) GetRequest() *SyncRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *JobRequest) GetSegment() *Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

type SyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry     *_go.BeeGFSEntry      `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	Operation SyncRequest_Operation `protobuf:"varint,2,opt,name=operation,proto3,enum=beesync.SyncRequest_Operation" json:"operation,omitempty"`
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beesync_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beesync_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{3}
}

func (x *SyncRequest) GetEntry() *_go.BeeGFSEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *SyncRequest) GetOperation() SyncRequest_Operation {
	if x != nil {
		return x.Operation
	}
	return SyncRequest_UNKNOWN
}

type JobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status *_go.JobStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *JobResponse) Reset() {
	*x = JobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beesync_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResponse) ProtoMessage() {}

func (x *JobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beesync_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResponse.ProtoReflect.Descriptor instead.
func (*JobResponse) Descriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{4}
}

func (x *JobResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobResponse) GetStatus() *_go.JobStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// A segment indicates what portion of a file transfer a particular BeeSync node should work on.
type Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OffsetStart int64           `protobuf:"varint,1,opt,name=offset_start,json=offsetStart,proto3" json:"offset_start,omitempty"`
	OffsetStop  int64           `protobuf:"varint,2,opt,name=offset_stop,json=offsetStop,proto3" json:"offset_stop,omitempty"`
	FileSize    uint64          `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"` // This won't be a problem until we support ~18 exabytes files.
	Config      *Segment_Config `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	// Method defines fields required to figure out "what" and "how" to transfer content.
	//
	// Types that are assignable to Method:
	//
	//	*Segment_Default
	//	*Segment_S3_
	Method isSegment_Method `protobuf_oneof:"method"`
}

func (x *Segment) Reset() {
	*x = Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beesync_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_beesync_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{5}
}

func (x *Segment) GetOffsetStart() int64 {
	if x != nil {
		return x.OffsetStart
	}
	return 0
}

func (x *Segment) GetOffsetStop() int64 {
	if x != nil {
		return x.OffsetStop
	}
	return 0
}

func (x *Segment) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *Segment) GetConfig() *Segment_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (m *Segment) GetMethod() isSegment_Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (x *Segment) GetDefault() bool {
	if x, ok := x.GetMethod().(*Segment_Default); ok {
		return x.Default
	}
	return false
}

func (x *Segment) GetS3() *Segment_S3 {
	if x, ok := x.GetMethod().(*Segment_S3_); ok {
		return x.S3
	}
	return nil
}

type isSegment_Method interface {
	isSegment_Method()
}

type Segment_Default struct {
	Default bool `protobuf:"varint,5,opt,name=default,proto3,oneof"`
}

type Segment_S3_ struct {
	S3 *Segment_S3 `protobuf:"bytes,6,opt,name=s3,proto3,oneof"`
}

func (*Segment_Default) isSegment_Method() {}

func (*Segment_S3_) isSegment_Method() {}

type Segment_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutostartMaxSize uint32 `protobuf:"varint,1,opt,name=autostart_max_size,json=autostartMaxSize,proto3" json:"autostart_max_size,omitempty"` // If the file is smaller than this, we will start the job automatically.
}

func (x *Segment_Config) Reset() {
	*x = Segment_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beesync_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment_Config) ProtoMessage() {}

func (x *Segment_Config) ProtoReflect() protoreflect.Message {
	mi := &file_beesync_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment_Config.ProtoReflect.Descriptor instead.
func (*Segment_Config) Descriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Segment_Config) GetAutostartMaxSize() uint32 {
	if x != nil {
		return x.AutostartMaxSize
	}
	return 0
}

// BeeSync calculates the amount of data to write in each part based on offset_start and offset_stop.
type Segment_S3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultipartId    string                       `protobuf:"bytes,1,opt,name=multipart_id,json=multipartId,proto3" json:"multipart_id,omitempty"`
	PartsStart     int32                        `protobuf:"varint,2,opt,name=parts_start,json=partsStart,proto3" json:"parts_start,omitempty"`
	PartsStop      int32                        `protobuf:"varint,3,opt,name=parts_stop,json=partsStop,proto3" json:"parts_stop,omitempty"`
	CompletedParts []*Segment_S3_CompletedParts `protobuf:"bytes,4,rep,name=completed_parts,json=completedParts,proto3" json:"completed_parts,omitempty"`
}

func (x *Segment_S3) Reset() {
	*x = Segment_S3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beesync_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment_S3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment_S3) ProtoMessage() {}

func (x *Segment_S3) ProtoReflect() protoreflect.Message {
	mi := &file_beesync_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment_S3.ProtoReflect.Descriptor instead.
func (*Segment_S3) Descriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Segment_S3) GetMultipartId() string {
	if x != nil {
		return x.MultipartId
	}
	return ""
}

func (x *Segment_S3) GetPartsStart() int32 {
	if x != nil {
		return x.PartsStart
	}
	return 0
}

func (x *Segment_S3) GetPartsStop() int32 {
	if x != nil {
		return x.PartsStop
	}
	return 0
}

func (x *Segment_S3) GetCompletedParts() []*Segment_S3_CompletedParts {
	if x != nil {
		return x.CompletedParts
	}
	return nil
}

type Segment_S3_CompletedParts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartNumber int32  `protobuf:"varint,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	EntityTag  string `protobuf:"bytes,2,opt,name=entity_tag,json=entityTag,proto3" json:"entity_tag,omitempty"`
	Checksum   string `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
}

func (x *Segment_S3_CompletedParts) Reset() {
	*x = Segment_S3_CompletedParts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beesync_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment_S3_CompletedParts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment_S3_CompletedParts) ProtoMessage() {}

func (x *Segment_S3_CompletedParts) ProtoReflect() protoreflect.Message {
	mi := &file_beesync_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment_S3_CompletedParts.ProtoReflect.Descriptor instead.
func (*Segment_S3_CompletedParts) Descriptor() ([]byte, []int) {
	return file_beesync_proto_rawDescGZIP(), []int{5, 1, 0}
}

func (x *Segment_S3_CompletedParts) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *Segment_S3_CompletedParts) GetEntityTag() string {
	if x != nil {
		return x.EntityTag
	}
	return ""
}

func (x *Segment_S3_CompletedParts) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

var File_beesync_proto protoreflect.FileDescriptor

var file_beesync_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x1a, 0x13, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73,
	0x2f, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a,
	0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x72, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x04, 0x72, 0x73, 0x74, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41,
	0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55,
	0x52, 0x45, 0x10, 0x03, 0x22, 0xa3, 0x01, 0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65, 0x65, 0x67,
	0x66, 0x73, 0x2e, 0x42, 0x65, 0x65, 0x47, 0x46, 0x53, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x4f, 0x57,
	0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x02, 0x22, 0x48, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xc5, 0x04, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1a, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x02, 0x73,
	0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e,
	0x63, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x33, 0x48, 0x00, 0x52, 0x02,
	0x73, 0x33, 0x1a, 0x36, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x75, 0x74, 0x6f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0xa2, 0x02, 0x0a, 0x02, 0x53,
	0x33, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x61,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x73, 0x5f, 0x73,
	0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x73,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x4b, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x73, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x73, 0x1a, 0x6c, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x42,
	0x08, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x32, 0x94, 0x01, 0x0a, 0x07, 0x42, 0x65,
	0x65, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x4b, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x13, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x68, 0x69, 0x6e, 0x6b, 0x70, 0x61, 0x72, 0x71, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x62, 0x65, 0x65, 0x73, 0x79, 0x6e, 0x63, 0x2f, 0x67, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_beesync_proto_rawDescOnce sync.Once
	file_beesync_proto_rawDescData = file_beesync_proto_rawDesc
)

func file_beesync_proto_rawDescGZIP() []byte {
	file_beesync_proto_rawDescOnce.Do(func() {
		file_beesync_proto_rawDescData = protoimpl.X.CompressGZIP(file_beesync_proto_rawDescData)
	})
	return file_beesync_proto_rawDescData
}

var file_beesync_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_beesync_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_beesync_proto_goTypes = []interface{}{
	(ConfigUpdateResponse_Result)(0),  // 0: beesync.ConfigUpdateResponse.Result
	(SyncRequest_Operation)(0),        // 1: beesync.SyncRequest.Operation
	(*ConfigUpdateRequest)(nil),       // 2: beesync.ConfigUpdateRequest
	(*ConfigUpdateResponse)(nil),      // 3: beesync.ConfigUpdateResponse
	(*JobRequest)(nil),                // 4: beesync.JobRequest
	(*SyncRequest)(nil),               // 5: beesync.SyncRequest
	(*JobResponse)(nil),               // 6: beesync.JobResponse
	(*Segment)(nil),                   // 7: beesync.Segment
	(*Segment_Config)(nil),            // 8: beesync.Segment.Config
	(*Segment_S3)(nil),                // 9: beesync.Segment.S3
	(*Segment_S3_CompletedParts)(nil), // 10: beesync.Segment.S3.CompletedParts
	(*_go.RemoteStorageTarget)(nil),   // 11: beegfs.RemoteStorageTarget
	(*_go.JobStatus)(nil),             // 12: beegfs.JobStatus
	(*_go.BeeGFSEntry)(nil),           // 13: beegfs.BeeGFSEntry
}
var file_beesync_proto_depIdxs = []int32{
	11, // 0: beesync.ConfigUpdateRequest.rsts:type_name -> beegfs.RemoteStorageTarget
	0,  // 1: beesync.ConfigUpdateResponse.result:type_name -> beesync.ConfigUpdateResponse.Result
	12, // 2: beesync.JobRequest.status:type_name -> beegfs.JobStatus
	5,  // 3: beesync.JobRequest.request:type_name -> beesync.SyncRequest
	7,  // 4: beesync.JobRequest.segment:type_name -> beesync.Segment
	13, // 5: beesync.SyncRequest.entry:type_name -> beegfs.BeeGFSEntry
	1,  // 6: beesync.SyncRequest.operation:type_name -> beesync.SyncRequest.Operation
	12, // 7: beesync.JobResponse.status:type_name -> beegfs.JobStatus
	8,  // 8: beesync.Segment.config:type_name -> beesync.Segment.Config
	9,  // 9: beesync.Segment.s3:type_name -> beesync.Segment.S3
	10, // 10: beesync.Segment.S3.completed_parts:type_name -> beesync.Segment.S3.CompletedParts
	2,  // 11: beesync.BeeSync.UpdateConfig:input_type -> beesync.ConfigUpdateRequest
	4,  // 12: beesync.BeeSync.JobRequests:input_type -> beesync.JobRequest
	3,  // 13: beesync.BeeSync.UpdateConfig:output_type -> beesync.ConfigUpdateResponse
	6,  // 14: beesync.BeeSync.JobRequests:output_type -> beesync.JobResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_beesync_proto_init() }
func file_beesync_proto_init() {
	if File_beesync_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_beesync_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beesync_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beesync_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beesync_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beesync_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beesync_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beesync_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beesync_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment_S3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beesync_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment_S3_CompletedParts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_beesync_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Segment_Default)(nil),
		(*Segment_S3_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beesync_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_beesync_proto_goTypes,
		DependencyIndexes: file_beesync_proto_depIdxs,
		EnumInfos:         file_beesync_proto_enumTypes,
		MessageInfos:      file_beesync_proto_msgTypes,
	}.Build()
	File_beesync_proto = out.File
	file_beesync_proto_rawDesc = nil
	file_beesync_proto_goTypes = nil
	file_beesync_proto_depIdxs = nil
}

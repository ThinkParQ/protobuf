// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: beewatch.proto

package beewatch

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type V1Event_Type int32

const (
	V1Event_FLUSH       V1Event_Type = 0
	V1Event_TRUNCATE    V1Event_Type = 1
	V1Event_SETATTR     V1Event_Type = 2
	V1Event_CLOSE_WRITE V1Event_Type = 3
	V1Event_CREATE      V1Event_Type = 4
	V1Event_MKDIR       V1Event_Type = 5
	V1Event_MKNOD       V1Event_Type = 6
	V1Event_SYMLINK     V1Event_Type = 7
	V1Event_RMDIR       V1Event_Type = 8
	V1Event_UNLINK      V1Event_Type = 9
	V1Event_HARDLINK    V1Event_Type = 10
	V1Event_RENAME      V1Event_Type = 11
	V1Event_READ        V1Event_Type = 12
)

// Enum value maps for V1Event_Type.
var (
	V1Event_Type_name = map[int32]string{
		0:  "FLUSH",
		1:  "TRUNCATE",
		2:  "SETATTR",
		3:  "CLOSE_WRITE",
		4:  "CREATE",
		5:  "MKDIR",
		6:  "MKNOD",
		7:  "SYMLINK",
		8:  "RMDIR",
		9:  "UNLINK",
		10: "HARDLINK",
		11: "RENAME",
		12: "READ",
	}
	V1Event_Type_value = map[string]int32{
		"FLUSH":       0,
		"TRUNCATE":    1,
		"SETATTR":     2,
		"CLOSE_WRITE": 3,
		"CREATE":      4,
		"MKDIR":       5,
		"MKNOD":       6,
		"SYMLINK":     7,
		"RMDIR":       8,
		"UNLINK":      9,
		"HARDLINK":    10,
		"RENAME":      11,
		"READ":        12,
	}
)

func (x V1Event_Type) Enum() *V1Event_Type {
	p := new(V1Event_Type)
	*p = x
	return p
}

func (x V1Event_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (V1Event_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_beewatch_proto_enumTypes[0].Descriptor()
}

func (V1Event_Type) Type() protoreflect.EnumType {
	return &file_beewatch_proto_enumTypes[0]
}

func (x V1Event_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use V1Event_Type.Descriptor instead.
func (V1Event_Type) EnumDescriptor() ([]byte, []int) {
	return file_beewatch_proto_rawDescGZIP(), []int{1, 0}
}

type V2Event_Type int32

const (
	V2Event_INVALID            V2Event_Type = 0
	V2Event_FLUSH              V2Event_Type = 1
	V2Event_TRUNCATE           V2Event_Type = 2
	V2Event_SETATTR            V2Event_Type = 3
	V2Event_CLOSE_WRITE        V2Event_Type = 4
	V2Event_CREATE             V2Event_Type = 5
	V2Event_MKDIR              V2Event_Type = 6
	V2Event_MKNOD              V2Event_Type = 7
	V2Event_SYMLINK            V2Event_Type = 8
	V2Event_RMDIR              V2Event_Type = 9
	V2Event_UNLINK             V2Event_Type = 10
	V2Event_HARDLINK           V2Event_Type = 11
	V2Event_RENAME             V2Event_Type = 12
	V2Event_OPEN_READ          V2Event_Type = 13
	V2Event_OPEN_WRITE         V2Event_Type = 14
	V2Event_OPEN_READ_WRITE    V2Event_Type = 15
	V2Event_LAST_WRITER_CLOSED V2Event_Type = 16
)

// Enum value maps for V2Event_Type.
var (
	V2Event_Type_name = map[int32]string{
		0:  "INVALID",
		1:  "FLUSH",
		2:  "TRUNCATE",
		3:  "SETATTR",
		4:  "CLOSE_WRITE",
		5:  "CREATE",
		6:  "MKDIR",
		7:  "MKNOD",
		8:  "SYMLINK",
		9:  "RMDIR",
		10: "UNLINK",
		11: "HARDLINK",
		12: "RENAME",
		13: "OPEN_READ",
		14: "OPEN_WRITE",
		15: "OPEN_READ_WRITE",
		16: "LAST_WRITER_CLOSED",
	}
	V2Event_Type_value = map[string]int32{
		"INVALID":            0,
		"FLUSH":              1,
		"TRUNCATE":           2,
		"SETATTR":            3,
		"CLOSE_WRITE":        4,
		"CREATE":             5,
		"MKDIR":              6,
		"MKNOD":              7,
		"SYMLINK":            8,
		"RMDIR":              9,
		"UNLINK":             10,
		"HARDLINK":           11,
		"RENAME":             12,
		"OPEN_READ":          13,
		"OPEN_WRITE":         14,
		"OPEN_READ_WRITE":    15,
		"LAST_WRITER_CLOSED": 16,
	}
)

func (x V2Event_Type) Enum() *V2Event_Type {
	p := new(V2Event_Type)
	*p = x
	return p
}

func (x V2Event_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (V2Event_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_beewatch_proto_enumTypes[1].Descriptor()
}

func (V2Event_Type) Type() protoreflect.EnumType {
	return &file_beewatch_proto_enumTypes[1]
}

func (x V2Event_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use V2Event_Type.Descriptor instead.
func (V2Event_Type) EnumDescriptor() ([]byte, []int) {
	return file_beewatch_proto_rawDescGZIP(), []int{2, 0}
}

// The event message provides common header fields and wraps all event versions that can be handled
// by BeeGFS Watch. It notably does not provide a way to differentiate between minor versions of the
// API. Those should only affect the serialization format between the meta and watch services, and
// should adhere to standard protocol buffer best practices. Notably minor updates should be
// additive and not remove or change the meaning of existing fields.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeqId  uint64 `protobuf:"varint,1,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	MetaId uint32 `protobuf:"varint,2,opt,name=meta_id,json=metaId,proto3" json:"meta_id,omitempty"`
	// Types that are assignable to EventData:
	//
	//	*Event_V1
	//	*Event_V2
	EventData isEvent_EventData `protobuf_oneof:"event_data"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beewatch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_beewatch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_beewatch_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetSeqId() uint64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Event) GetMetaId() uint32 {
	if x != nil {
		return x.MetaId
	}
	return 0
}

func (m *Event) GetEventData() isEvent_EventData {
	if m != nil {
		return m.EventData
	}
	return nil
}

func (x *Event) GetV1() *V1Event {
	if x, ok := x.GetEventData().(*Event_V1); ok {
		return x.V1
	}
	return nil
}

func (x *Event) GetV2() *V2Event {
	if x, ok := x.GetEventData().(*Event_V2); ok {
		return x.V2
	}
	return nil
}

type isEvent_EventData interface {
	isEvent_EventData()
}

type Event_V1 struct {
	V1 *V1Event `protobuf:"bytes,11,opt,name=v1,proto3,oneof"`
}

type Event_V2 struct {
	V2 *V2Event `protobuf:"bytes,12,opt,name=v2,proto3,oneof"`
}

func (*Event_V1) isEvent_EventData() {}

func (*Event_V2) isEvent_EventData() {}

// The v1 event format is the legacy format from BeeGFS v7.
type V1Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           V1Event_Type `protobuf:"varint,1,opt,name=type,proto3,enum=beewatch.V1Event_Type" json:"type,omitempty"`
	DroppedSeq     uint64       `protobuf:"varint,2,opt,name=dropped_seq,json=droppedSeq,proto3" json:"dropped_seq,omitempty"`
	MissedSeq      uint64       `protobuf:"varint,3,opt,name=missed_seq,json=missedSeq,proto3" json:"missed_seq,omitempty"`
	Path           string       `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	EntryId        string       `protobuf:"bytes,5,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	ParentEntryId  string       `protobuf:"bytes,6,opt,name=parent_entry_id,json=parentEntryId,proto3" json:"parent_entry_id,omitempty"`
	TargetPath     string       `protobuf:"bytes,7,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`
	TargetParentId string       `protobuf:"bytes,8,opt,name=target_parent_id,json=targetParentId,proto3" json:"target_parent_id,omitempty"`
}

func (x *V1Event) Reset() {
	*x = V1Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beewatch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V1Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V1Event) ProtoMessage() {}

func (x *V1Event) ProtoReflect() protoreflect.Message {
	mi := &file_beewatch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V1Event.ProtoReflect.Descriptor instead.
func (*V1Event) Descriptor() ([]byte, []int) {
	return file_beewatch_proto_rawDescGZIP(), []int{1}
}

func (x *V1Event) GetType() V1Event_Type {
	if x != nil {
		return x.Type
	}
	return V1Event_FLUSH
}

func (x *V1Event) GetDroppedSeq() uint64 {
	if x != nil {
		return x.DroppedSeq
	}
	return 0
}

func (x *V1Event) GetMissedSeq() uint64 {
	if x != nil {
		return x.MissedSeq
	}
	return 0
}

func (x *V1Event) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *V1Event) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

func (x *V1Event) GetParentEntryId() string {
	if x != nil {
		return x.ParentEntryId
	}
	return ""
}

func (x *V1Event) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *V1Event) GetTargetParentId() string {
	if x != nil {
		return x.TargetParentId
	}
	return ""
}

// The v2 event format was introduced in BeeGFS v8.
type V2Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type           V2Event_Type `protobuf:"varint,1,opt,name=type,proto3,enum=beewatch.V2Event_Type" json:"type,omitempty"`
	NumLinks       uint64       `protobuf:"varint,2,opt,name=num_links,json=numLinks,proto3" json:"num_links,omitempty"`
	Path           string       `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	EntryId        string       `protobuf:"bytes,4,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	ParentEntryId  string       `protobuf:"bytes,5,opt,name=parent_entry_id,json=parentEntryId,proto3" json:"parent_entry_id,omitempty"`
	TargetPath     string       `protobuf:"bytes,6,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`
	TargetParentId string       `protobuf:"bytes,7,opt,name=target_parent_id,json=targetParentId,proto3" json:"target_parent_id,omitempty"`
	MsgUserId      uint32       `protobuf:"varint,8,opt,name=msg_user_id,json=msgUserId,proto3" json:"msg_user_id,omitempty"`
	Timestamp      int64        `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *V2Event) Reset() {
	*x = V2Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beewatch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V2Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V2Event) ProtoMessage() {}

func (x *V2Event) ProtoReflect() protoreflect.Message {
	mi := &file_beewatch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V2Event.ProtoReflect.Descriptor instead.
func (*V2Event) Descriptor() ([]byte, []int) {
	return file_beewatch_proto_rawDescGZIP(), []int{2}
}

func (x *V2Event) GetType() V2Event_Type {
	if x != nil {
		return x.Type
	}
	return V2Event_INVALID
}

func (x *V2Event) GetNumLinks() uint64 {
	if x != nil {
		return x.NumLinks
	}
	return 0
}

func (x *V2Event) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *V2Event) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

func (x *V2Event) GetParentEntryId() string {
	if x != nil {
		return x.ParentEntryId
	}
	return ""
}

func (x *V2Event) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *V2Event) GetTargetParentId() string {
	if x != nil {
		return x.TargetParentId
	}
	return ""
}

func (x *V2Event) GetMsgUserId() uint32 {
	if x != nil {
		return x.MsgUserId
	}
	return 0
}

func (x *V2Event) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Response messages allow the subscribers to acknowledge events they have processed and request a graceful shutdown.
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompletedSeq uint64 `protobuf:"varint,1,opt,name=completed_seq,json=completedSeq,proto3" json:"completed_seq,omitempty"`
	ShuttingDown bool   `protobuf:"varint,2,opt,name=shutting_down,json=shuttingDown,proto3" json:"shutting_down,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beewatch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_beewatch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_beewatch_proto_rawDescGZIP(), []int{3}
}

func (x *Response) GetCompletedSeq() uint64 {
	if x != nil {
		return x.CompletedSeq
	}
	return 0
}

func (x *Response) GetShuttingDown() bool {
	if x != nil {
		return x.ShuttingDown
	}
	return false
}

var File_beewatch_proto protoreflect.FileDescriptor

var file_beewatch_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x22, 0x8f, 0x01, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x65,
	0x74, 0x61, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x56, 0x31, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x02, 0x76, 0x31, 0x12, 0x23, 0x0a, 0x02, 0x76, 0x32, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x2e, 0x56, 0x32, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x02, 0x76, 0x32, 0x42, 0x0c,
	0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc1, 0x03, 0x0a,
	0x07, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x2e, 0x56, 0x31, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f,
	0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x70,
	0x65, 0x64, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x5f,
	0x73, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x65,
	0x64, 0x53, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x46, 0x4c, 0x55, 0x53, 0x48, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52,
	0x55, 0x4e, 0x43, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x54, 0x41,
	0x54, 0x54, 0x52, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x57,
	0x52, 0x49, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4b, 0x44, 0x49, 0x52, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x4d, 0x4b, 0x4e, 0x4f, 0x44, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4d, 0x4c,
	0x49, 0x4e, 0x4b, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x4d, 0x44, 0x49, 0x52, 0x10, 0x08,
	0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08,
	0x48, 0x41, 0x52, 0x44, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x0a, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x0c,
	0x22, 0xab, 0x04, 0x0a, 0x07, 0x56, 0x32, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x65,
	0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x56, 0x32, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x75, 0x6d,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a,
	0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x73, 0x67, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x73,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xf6, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46,
	0x4c, 0x55, 0x53, 0x48, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x55, 0x4e, 0x43, 0x41,
	0x54, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x54, 0x41, 0x54, 0x54, 0x52, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45,
	0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x09,
	0x0a, 0x05, 0x4d, 0x4b, 0x44, 0x49, 0x52, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4b, 0x4e,
	0x4f, 0x44, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4d, 0x4c, 0x49, 0x4e, 0x4b, 0x10,
	0x08, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x4d, 0x44, 0x49, 0x52, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x4e, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x41, 0x52, 0x44,
	0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45,
	0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10,
	0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10,
	0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x57,
	0x52, 0x49, 0x54, 0x45, 0x10, 0x0f, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x57,
	0x52, 0x49, 0x54, 0x45, 0x52, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x10, 0x22, 0x54,
	0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x65, 0x71, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x68, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x77, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x44, 0x6f, 0x77, 0x6e, 0x32, 0x46, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x12, 0x38, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x1a, 0x12, 0x2e, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x2b, 0x5a, 0x29,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x69, 0x6e, 0x6b,
	0x70, 0x61, 0x72, 0x71, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f,
	0x2f, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_beewatch_proto_rawDescOnce sync.Once
	file_beewatch_proto_rawDescData = file_beewatch_proto_rawDesc
)

func file_beewatch_proto_rawDescGZIP() []byte {
	file_beewatch_proto_rawDescOnce.Do(func() {
		file_beewatch_proto_rawDescData = protoimpl.X.CompressGZIP(file_beewatch_proto_rawDescData)
	})
	return file_beewatch_proto_rawDescData
}

var file_beewatch_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_beewatch_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_beewatch_proto_goTypes = []any{
	(V1Event_Type)(0), // 0: beewatch.V1Event.Type
	(V2Event_Type)(0), // 1: beewatch.V2Event.Type
	(*Event)(nil),     // 2: beewatch.Event
	(*V1Event)(nil),   // 3: beewatch.V1Event
	(*V2Event)(nil),   // 4: beewatch.V2Event
	(*Response)(nil),  // 5: beewatch.Response
}
var file_beewatch_proto_depIdxs = []int32{
	3, // 0: beewatch.Event.v1:type_name -> beewatch.V1Event
	4, // 1: beewatch.Event.v2:type_name -> beewatch.V2Event
	0, // 2: beewatch.V1Event.type:type_name -> beewatch.V1Event.Type
	1, // 3: beewatch.V2Event.type:type_name -> beewatch.V2Event.Type
	2, // 4: beewatch.Subscriber.ReceiveEvents:input_type -> beewatch.Event
	5, // 5: beewatch.Subscriber.ReceiveEvents:output_type -> beewatch.Response
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_beewatch_proto_init() }
func file_beewatch_proto_init() {
	if File_beewatch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_beewatch_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beewatch_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*V1Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beewatch_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*V2Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beewatch_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_beewatch_proto_msgTypes[0].OneofWrappers = []any{
		(*Event_V1)(nil),
		(*Event_V2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beewatch_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_beewatch_proto_goTypes,
		DependencyIndexes: file_beewatch_proto_depIdxs,
		EnumInfos:         file_beewatch_proto_enumTypes,
		MessageInfos:      file_beewatch_proto_msgTypes,
	}.Build()
	File_beewatch_proto = out.File
	file_beewatch_proto_rawDesc = nil
	file_beewatch_proto_goTypes = nil
	file_beewatch_proto_depIdxs = nil
}

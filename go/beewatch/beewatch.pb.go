// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: beewatch.proto

package beewatch

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event_Type int32

const (
	Event_INVALID            Event_Type = 0
	Event_FLUSH              Event_Type = 1
	Event_TRUNCATE           Event_Type = 2
	Event_SETATTR            Event_Type = 3
	Event_CLOSE_WRITE        Event_Type = 4
	Event_CREATE             Event_Type = 5
	Event_MKDIR              Event_Type = 6
	Event_MKNOD              Event_Type = 7
	Event_SYMLINK            Event_Type = 8
	Event_RMDIR              Event_Type = 9
	Event_UNLINK             Event_Type = 10
	Event_HARDLINK           Event_Type = 11
	Event_RENAME             Event_Type = 12
	Event_OPEN_READ          Event_Type = 13
	Event_OPEN_WRITE         Event_Type = 14
	Event_OPEN_READ_WRITE    Event_Type = 15
	Event_LAST_WRITER_CLOSED Event_Type = 16
)

// Enum value maps for Event_Type.
var (
	Event_Type_name = map[int32]string{
		0:  "INVALID",
		1:  "FLUSH",
		2:  "TRUNCATE",
		3:  "SETATTR",
		4:  "CLOSE_WRITE",
		5:  "CREATE",
		6:  "MKDIR",
		7:  "MKNOD",
		8:  "SYMLINK",
		9:  "RMDIR",
		10: "UNLINK",
		11: "HARDLINK",
		12: "RENAME",
		13: "OPEN_READ",
		14: "OPEN_WRITE",
		15: "OPEN_READ_WRITE",
		16: "LAST_WRITER_CLOSED",
	}
	Event_Type_value = map[string]int32{
		"INVALID":            0,
		"FLUSH":              1,
		"TRUNCATE":           2,
		"SETATTR":            3,
		"CLOSE_WRITE":        4,
		"CREATE":             5,
		"MKDIR":              6,
		"MKNOD":              7,
		"SYMLINK":            8,
		"RMDIR":              9,
		"UNLINK":             10,
		"HARDLINK":           11,
		"RENAME":             12,
		"OPEN_READ":          13,
		"OPEN_WRITE":         14,
		"OPEN_READ_WRITE":    15,
		"LAST_WRITER_CLOSED": 16,
	}
)

func (x Event_Type) Enum() *Event_Type {
	p := new(Event_Type)
	*p = x
	return p
}

func (x Event_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_beewatch_proto_enumTypes[0].Descriptor()
}

func (Event_Type) Type() protoreflect.EnumType {
	return &file_beewatch_proto_enumTypes[0]
}

func (x Event_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_Type.Descriptor instead.
func (Event_Type) EnumDescriptor() ([]byte, []int) {
	return file_beewatch_proto_rawDescGZIP(), []int{0, 0}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The BeeGFS packet format defines these as a uint16 but protobuf does not support uint16 types (https://protobuf.dev/programming-guides/proto3/#scalar).
	FormatVersionMajor uint32 `protobuf:"varint,1,opt,name=format_version_major,json=formatVersionMajor,proto3" json:"format_version_major,omitempty"`
	FormatVersionMinor uint32 `protobuf:"varint,2,opt,name=format_version_minor,json=formatVersionMinor,proto3" json:"format_version_minor,omitempty"`
	// TODO (https://github.com/ThinkParQ/bee-watch/issues/15):
	// This is not implemented yet in the meta service, however for now we'll have BeeWatch generate sequence IDs.
	// Update this as needed based on final meta implementation and remove current approach in socket.go.
	SeqId          uint64     `protobuf:"varint,3,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	Size           uint32     `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	DroppedSeq     uint64     `protobuf:"varint,5,opt,name=dropped_seq,json=droppedSeq,proto3" json:"dropped_seq,omitempty"`
	MissedSeq      uint64     `protobuf:"varint,6,opt,name=missed_seq,json=missedSeq,proto3" json:"missed_seq,omitempty"`
	Type           Event_Type `protobuf:"varint,7,opt,name=type,proto3,enum=beewatch.Event_Type" json:"type,omitempty"`
	Path           string     `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	EntryId        string     `protobuf:"bytes,9,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	ParentEntryId  string     `protobuf:"bytes,10,opt,name=parent_entry_id,json=parentEntryId,proto3" json:"parent_entry_id,omitempty"`
	TargetPath     string     `protobuf:"bytes,11,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`
	TargetParentId string     `protobuf:"bytes,12,opt,name=target_parent_id,json=targetParentId,proto3" json:"target_parent_id,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beewatch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_beewatch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_beewatch_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetFormatVersionMajor() uint32 {
	if x != nil {
		return x.FormatVersionMajor
	}
	return 0
}

func (x *Event) GetFormatVersionMinor() uint32 {
	if x != nil {
		return x.FormatVersionMinor
	}
	return 0
}

func (x *Event) GetSeqId() uint64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Event) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Event) GetDroppedSeq() uint64 {
	if x != nil {
		return x.DroppedSeq
	}
	return 0
}

func (x *Event) GetMissedSeq() uint64 {
	if x != nil {
		return x.MissedSeq
	}
	return 0
}

func (x *Event) GetType() Event_Type {
	if x != nil {
		return x.Type
	}
	return Event_INVALID
}

func (x *Event) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Event) GetEntryId() string {
	if x != nil {
		return x.EntryId
	}
	return ""
}

func (x *Event) GetParentEntryId() string {
	if x != nil {
		return x.ParentEntryId
	}
	return ""
}

func (x *Event) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *Event) GetTargetParentId() string {
	if x != nil {
		return x.TargetParentId
	}
	return ""
}

// Response messages allow the subscribers to acknowledge events they have processed and request a graceful shutdown.
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompletedSeq uint64 `protobuf:"varint,1,opt,name=completed_seq,json=completedSeq,proto3" json:"completed_seq,omitempty"`
	ShuttingDown bool   `protobuf:"varint,2,opt,name=shutting_down,json=shuttingDown,proto3" json:"shutting_down,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beewatch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_beewatch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_beewatch_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetCompletedSeq() uint64 {
	if x != nil {
		return x.CompletedSeq
	}
	return 0
}

func (x *Response) GetShuttingDown() bool {
	if x != nil {
		return x.ShuttingDown
	}
	return false
}

var File_beewatch_proto protoreflect.FileDescriptor

var file_beewatch_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x22, 0x9b, 0x05, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x53, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x71, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64,
	0x53, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xf6, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x55, 0x53, 0x48, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x55, 0x4e, 0x43, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x45, 0x54, 0x41, 0x54, 0x54, 0x52, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4b, 0x44, 0x49,
	0x52, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4b, 0x4e, 0x4f, 0x44, 0x10, 0x07, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x59, 0x4d, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x52,
	0x4d, 0x44, 0x49, 0x52, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x4c, 0x49, 0x4e, 0x4b,
	0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x48, 0x41, 0x52, 0x44, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x0b,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x0c, 0x12, 0x0d, 0x0a, 0x09,
	0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x4f,
	0x50, 0x45, 0x4e, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x4f,
	0x50, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x0f,
	0x12, 0x16, 0x0a, 0x12, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x52, 0x5f,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x10, 0x22, 0x54, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x53, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x75,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x73, 0x68, 0x75, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x32, 0x46,
	0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0d,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0f, 0x2e,
	0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x12,
	0x2e, 0x62, 0x65, 0x65, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x70, 0x61, 0x72, 0x71, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x65, 0x65, 0x77, 0x61,
	0x74, 0x63, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_beewatch_proto_rawDescOnce sync.Once
	file_beewatch_proto_rawDescData = file_beewatch_proto_rawDesc
)

func file_beewatch_proto_rawDescGZIP() []byte {
	file_beewatch_proto_rawDescOnce.Do(func() {
		file_beewatch_proto_rawDescData = protoimpl.X.CompressGZIP(file_beewatch_proto_rawDescData)
	})
	return file_beewatch_proto_rawDescData
}

var file_beewatch_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_beewatch_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_beewatch_proto_goTypes = []interface{}{
	(Event_Type)(0),  // 0: beewatch.Event.Type
	(*Event)(nil),    // 1: beewatch.Event
	(*Response)(nil), // 2: beewatch.Response
}
var file_beewatch_proto_depIdxs = []int32{
	0, // 0: beewatch.Event.type:type_name -> beewatch.Event.Type
	1, // 1: beewatch.Subscriber.ReceiveEvents:input_type -> beewatch.Event
	2, // 2: beewatch.Subscriber.ReceiveEvents:output_type -> beewatch.Response
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_beewatch_proto_init() }
func file_beewatch_proto_init() {
	if File_beewatch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_beewatch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beewatch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beewatch_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_beewatch_proto_goTypes,
		DependencyIndexes: file_beewatch_proto_depIdxs,
		EnumInfos:         file_beewatch_proto_enumTypes,
		MessageInfos:      file_beewatch_proto_msgTypes,
	}.Build()
	File_beewatch_proto = out.File
	file_beewatch_proto_rawDesc = nil
	file_beewatch_proto_goTypes = nil
	file_beewatch_proto_depIdxs = nil
}

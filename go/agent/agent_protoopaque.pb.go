// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.2
// source: agent.proto

//go:build protoopaque

package agent

import (
	beegfs "github.com/thinkparq/protobuf/go/beegfs"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstallType int32

const (
	InstallType_UNKNOWN InstallType = 0
	InstallType_LOCAL   InstallType = 1
	InstallType_PACKAGE InstallType = 2
)

// Enum value maps for InstallType.
var (
	InstallType_name = map[int32]string{
		0: "UNKNOWN",
		1: "LOCAL",
		2: "PACKAGE",
	}
	InstallType_value = map[string]int32{
		"UNKNOWN": 0,
		"LOCAL":   1,
		"PACKAGE": 2,
	}
)

func (x InstallType) Enum() *InstallType {
	p := new(InstallType)
	*p = x
	return p
}

func (x InstallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstallType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[0].Descriptor()
}

func (InstallType) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[0]
}

func (x InstallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Status_State int32

const (
	Status_UNSPECIFIED Status_State = 0 // Should not be used. Exists only as the default if there is a programming error.
	Status_IDLE        Status_State = 1 // No configuration has been provided to the agent.
	Status_APPLYING    Status_State = 2 // Agent is applying the requested configuration.
	Status_SUCCESS     Status_State = 3 // Agent has applied all requested configuration.
	Status_FAILED      Status_State = 4 // The agent has failed to apply the requested configuration.
	Status_CANCELLED   Status_State = 5 // The user requested the agent cancel applying the requested configuration.
)

// Enum value maps for Status_State.
var (
	Status_State_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "IDLE",
		2: "APPLYING",
		3: "SUCCESS",
		4: "FAILED",
		5: "CANCELLED",
	}
	Status_State_value = map[string]int32{
		"UNSPECIFIED": 0,
		"IDLE":        1,
		"APPLYING":    2,
		"SUCCESS":     3,
		"FAILED":      4,
		"CANCELLED":   5,
	}
)

func (x Status_State) Enum() *Status_State {
	p := new(Status_State)
	*p = x
	return p
}

func (x Status_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status_State) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[1].Descriptor()
}

func (Status_State) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[1]
}

func (x Status_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type Target_UnderlyingFSOpts_FsType int32

const (
	Target_UnderlyingFSOpts_UNSPECIFIED Target_UnderlyingFSOpts_FsType = 0
	Target_UnderlyingFSOpts_EXT4        Target_UnderlyingFSOpts_FsType = 1
)

// Enum value maps for Target_UnderlyingFSOpts_FsType.
var (
	Target_UnderlyingFSOpts_FsType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "EXT4",
	}
	Target_UnderlyingFSOpts_FsType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"EXT4":        1,
	}
)

func (x Target_UnderlyingFSOpts_FsType) Enum() *Target_UnderlyingFSOpts_FsType {
	p := new(Target_UnderlyingFSOpts_FsType)
	*p = x
	return p
}

func (x Target_UnderlyingFSOpts_FsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Target_UnderlyingFSOpts_FsType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[2].Descriptor()
}

func (Target_UnderlyingFSOpts_FsType) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[2]
}

func (x Target_UnderlyingFSOpts_FsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type UpdateManifestRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Config map[string]*Filesystem `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateManifestRequest) Reset() {
	*x = UpdateManifestRequest{}
	mi := &file_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManifestRequest) ProtoMessage() {}

func (x *UpdateManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateManifestRequest) GetConfig() map[string]*Filesystem {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *UpdateManifestRequest) SetConfig(v map[string]*Filesystem) {
	x.xxx_hidden_Config = v
}

type UpdateManifestRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Map of FsUUIDs to file systems.
	Config map[string]*Filesystem
}

func (b0 UpdateManifestRequest_builder) Build() *UpdateManifestRequest {
	m0 := &UpdateManifestRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Config = b.Config
	return m0
}

type UpdateManifestResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AgentId string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateManifestResponse) Reset() {
	*x = UpdateManifestResponse{}
	mi := &file_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManifestResponse) ProtoMessage() {}

func (x *UpdateManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *UpdateManifestResponse) GetAgentId() string {
	if x != nil {
		return x.xxx_hidden_AgentId
	}
	return ""
}

func (x *UpdateManifestResponse) SetAgentId(v string) {
	x.xxx_hidden_AgentId = v
}

type UpdateManifestResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AgentId string
}

func (b0 UpdateManifestResponse_builder) Build() *UpdateManifestResponse {
	m0 := &UpdateManifestResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AgentId = b.AgentId
	return m0
}

type ReconciliationStatusRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AgentId string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ReconciliationStatusRequest) Reset() {
	*x = ReconciliationStatusRequest{}
	mi := &file_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReconciliationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconciliationStatusRequest) ProtoMessage() {}

func (x *ReconciliationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReconciliationStatusRequest) GetAgentId() string {
	if x != nil {
		return x.xxx_hidden_AgentId
	}
	return ""
}

func (x *ReconciliationStatusRequest) SetAgentId(v string) {
	x.xxx_hidden_AgentId = v
}

type ReconciliationStatusRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AgentId string
}

func (b0 ReconciliationStatusRequest_builder) Build() *ReconciliationStatusRequest {
	m0 := &ReconciliationStatusRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AgentId = b.AgentId
	return m0
}

type ReconciliationStatusResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AgentId string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	xxx_hidden_Status  *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ReconciliationStatusResponse) Reset() {
	*x = ReconciliationStatusResponse{}
	mi := &file_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReconciliationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconciliationStatusResponse) ProtoMessage() {}

func (x *ReconciliationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ReconciliationStatusResponse) GetAgentId() string {
	if x != nil {
		return x.xxx_hidden_AgentId
	}
	return ""
}

func (x *ReconciliationStatusResponse) GetStatus() *Status {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *ReconciliationStatusResponse) SetAgentId(v string) {
	x.xxx_hidden_AgentId = v
}

func (x *ReconciliationStatusResponse) SetStatus(v *Status) {
	x.xxx_hidden_Status = v
}

func (x *ReconciliationStatusResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *ReconciliationStatusResponse) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type ReconciliationStatusResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AgentId string
	Status  *Status
}

func (b0 ReconciliationStatusResponse_builder) Build() *ReconciliationStatusResponse {
	m0 := &ReconciliationStatusResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AgentId = b.AgentId
	x.xxx_hidden_Status = b.Status
	return m0
}

type CancelReconciliationRequest struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AgentId string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	xxx_hidden_Reason  string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CancelReconciliationRequest) Reset() {
	*x = CancelReconciliationRequest{}
	mi := &file_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelReconciliationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelReconciliationRequest) ProtoMessage() {}

func (x *CancelReconciliationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CancelReconciliationRequest) GetAgentId() string {
	if x != nil {
		return x.xxx_hidden_AgentId
	}
	return ""
}

func (x *CancelReconciliationRequest) GetReason() string {
	if x != nil {
		return x.xxx_hidden_Reason
	}
	return ""
}

func (x *CancelReconciliationRequest) SetAgentId(v string) {
	x.xxx_hidden_AgentId = v
}

func (x *CancelReconciliationRequest) SetReason(v string) {
	x.xxx_hidden_Reason = v
}

type CancelReconciliationRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AgentId string
	Reason  string
}

func (b0 CancelReconciliationRequest_builder) Build() *CancelReconciliationRequest {
	m0 := &CancelReconciliationRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AgentId = b.AgentId
	x.xxx_hidden_Reason = b.Reason
	return m0
}

type CancelReconciliationResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_AgentId string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	xxx_hidden_Status  *Status                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CancelReconciliationResponse) Reset() {
	*x = CancelReconciliationResponse{}
	mi := &file_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelReconciliationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelReconciliationResponse) ProtoMessage() {}

func (x *CancelReconciliationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *CancelReconciliationResponse) GetAgentId() string {
	if x != nil {
		return x.xxx_hidden_AgentId
	}
	return ""
}

func (x *CancelReconciliationResponse) GetStatus() *Status {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *CancelReconciliationResponse) SetAgentId(v string) {
	x.xxx_hidden_AgentId = v
}

func (x *CancelReconciliationResponse) SetStatus(v *Status) {
	x.xxx_hidden_Status = v
}

func (x *CancelReconciliationResponse) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *CancelReconciliationResponse) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type CancelReconciliationResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	AgentId string
	Status  *Status
}

func (b0 CancelReconciliationResponse_builder) Build() *CancelReconciliationResponse {
	m0 := &CancelReconciliationResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_AgentId = b.AgentId
	x.xxx_hidden_Status = b.Status
	return m0
}

type Status struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_State    Status_State           `protobuf:"varint,1,opt,name=state,proto3,enum=agent.Status_State" json:"state,omitempty"`
	xxx_hidden_Messages []string               `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	xxx_hidden_Updated  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Status) GetState() Status_State {
	if x != nil {
		return x.xxx_hidden_State
	}
	return Status_UNSPECIFIED
}

func (x *Status) GetMessages() []string {
	if x != nil {
		return x.xxx_hidden_Messages
	}
	return nil
}

func (x *Status) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Updated
	}
	return nil
}

func (x *Status) SetState(v Status_State) {
	x.xxx_hidden_State = v
}

func (x *Status) SetMessages(v []string) {
	x.xxx_hidden_Messages = v
}

func (x *Status) SetUpdated(v *timestamppb.Timestamp) {
	x.xxx_hidden_Updated = v
}

func (x *Status) HasUpdated() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Updated != nil
}

func (x *Status) ClearUpdated() {
	x.xxx_hidden_Updated = nil
}

type Status_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	State    Status_State
	Messages []string
	Updated  *timestamppb.Timestamp
}

func (b0 Status_builder) Build() *Status {
	m0 := &Status{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_State = b.State
	x.xxx_hidden_Messages = b.Messages
	x.xxx_hidden_Updated = b.Updated
	return m0
}

// The manifest defining an entire BeeGFS instance.
type Filesystem struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Agent  map[string]*Agent      `protobuf:"bytes,1,rep,name=agent,proto3" json:"agent,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Common *Filesystem_Common     `protobuf:"bytes,2,opt,name=common,proto3" json:"common,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Filesystem) Reset() {
	*x = Filesystem{}
	mi := &file_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem) ProtoMessage() {}

func (x *Filesystem) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Filesystem) GetAgent() map[string]*Agent {
	if x != nil {
		return x.xxx_hidden_Agent
	}
	return nil
}

func (x *Filesystem) GetCommon() *Filesystem_Common {
	if x != nil {
		return x.xxx_hidden_Common
	}
	return nil
}

func (x *Filesystem) SetAgent(v map[string]*Agent) {
	x.xxx_hidden_Agent = v
}

func (x *Filesystem) SetCommon(v *Filesystem_Common) {
	x.xxx_hidden_Common = v
}

func (x *Filesystem) HasCommon() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Common != nil
}

func (x *Filesystem) ClearCommon() {
	x.xxx_hidden_Common = nil
}

type Filesystem_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Map of agentIDs to agents.
	Agent map[string]*Agent
	// Common configuration to apply to all Services.
	Common *Filesystem_Common
}

func (b0 Filesystem_builder) Build() *Filesystem {
	m0 := &Filesystem{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Agent = b.Agent
	x.xxx_hidden_Common = b.Common
	return m0
}

type Auth struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Secret string                 `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Auth) Reset() {
	*x = Auth{}
	mi := &file_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Auth) GetSecret() string {
	if x != nil {
		return x.xxx_hidden_Secret
	}
	return ""
}

func (x *Auth) SetSecret(v string) {
	x.xxx_hidden_Secret = v
}

type Auth_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Secret string
}

func (b0 Auth_builder) Build() *Auth {
	m0 := &Auth{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Secret = b.Secret
	return m0
}

type TLS struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key  string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	xxx_hidden_Cert string                 `protobuf:"bytes,2,opt,name=cert,proto3" json:"cert,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TLS) Reset() {
	*x = TLS{}
	mi := &file_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLS) ProtoMessage() {}

func (x *TLS) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TLS) GetKey() string {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return ""
}

func (x *TLS) GetCert() string {
	if x != nil {
		return x.xxx_hidden_Cert
	}
	return ""
}

func (x *TLS) SetKey(v string) {
	x.xxx_hidden_Key = v
}

func (x *TLS) SetCert(v string) {
	x.xxx_hidden_Cert = v
}

type TLS_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key  string
	Cert string
}

func (b0 TLS_builder) Build() *TLS {
	m0 := &TLS{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	x.xxx_hidden_Cert = b.Cert
	return m0
}

type InstallSource struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Type InstallType            `protobuf:"varint,1,opt,name=type,proto3,enum=agent.InstallType" json:"type,omitempty"`
	xxx_hidden_Repo string                 `protobuf:"bytes,2,opt,name=repo,proto3" json:"repo,omitempty"`
	xxx_hidden_Refs *[]*SourceRef          `protobuf:"bytes,3,rep,name=refs,proto3" json:"refs,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InstallSource) Reset() {
	*x = InstallSource{}
	mi := &file_agent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallSource) ProtoMessage() {}

func (x *InstallSource) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InstallSource) GetType() InstallType {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return InstallType_UNKNOWN
}

func (x *InstallSource) GetRepo() string {
	if x != nil {
		return x.xxx_hidden_Repo
	}
	return ""
}

func (x *InstallSource) GetRefs() []*SourceRef {
	if x != nil {
		if x.xxx_hidden_Refs != nil {
			return *x.xxx_hidden_Refs
		}
	}
	return nil
}

func (x *InstallSource) SetType(v InstallType) {
	x.xxx_hidden_Type = v
}

func (x *InstallSource) SetRepo(v string) {
	x.xxx_hidden_Repo = v
}

func (x *InstallSource) SetRefs(v []*SourceRef) {
	x.xxx_hidden_Refs = &v
}

type InstallSource_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Type InstallType
	Repo string
	Refs []*SourceRef
}

func (b0 InstallSource_builder) Build() *InstallSource {
	m0 := &InstallSource{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Repo = b.Repo
	x.xxx_hidden_Refs = &b.Refs
	return m0
}

// SourceRef exists because protobuf maps do not support enums as a map key. The expected use is a
// repeated SourceRef field with one entry per NodeType. It is up to the consumer to decide what to
// do if multiple of the same service_type are found, typically the last entry wins.
type SourceRef struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceType beegfs.NodeType        `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3,enum=beegfs.NodeType" json:"service_type,omitempty"`
	xxx_hidden_Ref         string                 `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SourceRef) Reset() {
	*x = SourceRef{}
	mi := &file_agent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRef) ProtoMessage() {}

func (x *SourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SourceRef) GetServiceType() beegfs.NodeType {
	if x != nil {
		return x.xxx_hidden_ServiceType
	}
	return beegfs.NodeType(0)
}

func (x *SourceRef) GetRef() string {
	if x != nil {
		return x.xxx_hidden_Ref
	}
	return ""
}

func (x *SourceRef) SetServiceType(v beegfs.NodeType) {
	x.xxx_hidden_ServiceType = v
}

func (x *SourceRef) SetRef(v string) {
	x.xxx_hidden_Ref = v
}

type SourceRef_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServiceType beegfs.NodeType
	Ref         string
}

func (b0 SourceRef_builder) Build() *SourceRef {
	m0 := &SourceRef{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ServiceType = b.ServiceType
	x.xxx_hidden_Ref = b.Ref
	return m0
}

// ServiceConfig exists because protobuf maps do not support enums as a map key or maps as a value. The
// expected use is a repeated ServiceConfig field with one entry per NodeType. It is up to the consumer
// to decide what to do if multiple of the same service_type are found, typically the last entry wins.
type ServiceConfig struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ServiceType beegfs.NodeType        `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3,enum=beegfs.NodeType" json:"service_type,omitempty"`
	xxx_hidden_StringMap   map[string]string      `protobuf:"bytes,2,rep,name=string_map,json=stringMap,proto3" json:"string_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ServiceConfig) Reset() {
	*x = ServiceConfig{}
	mi := &file_agent_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceConfig) ProtoMessage() {}

func (x *ServiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ServiceConfig) GetServiceType() beegfs.NodeType {
	if x != nil {
		return x.xxx_hidden_ServiceType
	}
	return beegfs.NodeType(0)
}

func (x *ServiceConfig) GetStringMap() map[string]string {
	if x != nil {
		return x.xxx_hidden_StringMap
	}
	return nil
}

func (x *ServiceConfig) SetServiceType(v beegfs.NodeType) {
	x.xxx_hidden_ServiceType = v
}

func (x *ServiceConfig) SetStringMap(v map[string]string) {
	x.xxx_hidden_StringMap = v
}

type ServiceConfig_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ServiceType beegfs.NodeType
	StringMap   map[string]string
}

func (b0 ServiceConfig_builder) Build() *ServiceConfig {
	m0 := &ServiceConfig{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_ServiceType = b.ServiceType
	x.xxx_hidden_StringMap = b.StringMap
	return m0
}

// A physical or virtual machine where the BeeGFS agent is running and one or more BeeGFS services
// (services or clients) should be deployed by the agent.
type Agent struct {
	state                 protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Services   *[]*Service            `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	xxx_hidden_Interfaces *[]*Nic                `protobuf:"bytes,2,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Agent) Reset() {
	*x = Agent{}
	mi := &file_agent_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Agent) GetServices() []*Service {
	if x != nil {
		if x.xxx_hidden_Services != nil {
			return *x.xxx_hidden_Services
		}
	}
	return nil
}

func (x *Agent) GetInterfaces() []*Nic {
	if x != nil {
		if x.xxx_hidden_Interfaces != nil {
			return *x.xxx_hidden_Interfaces
		}
	}
	return nil
}

func (x *Agent) SetServices(v []*Service) {
	x.xxx_hidden_Services = &v
}

func (x *Agent) SetInterfaces(v []*Nic) {
	x.xxx_hidden_Interfaces = &v
}

type Agent_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The agent can deploy one or more services on each host machine/VM.
	Services []*Service
	// The agent can configure global interfaces used by multiple services.
	Interfaces []*Nic
}

func (b0 Agent_builder) Build() *Agent {
	m0 := &Agent{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Services = &b.Services
	x.xxx_hidden_Interfaces = &b.Interfaces
	return m0
}

// A service is a single instance of a particular BeeGFS NodeType (e.g., meta, client, sync).
type Service struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_NumId       uint32                 `protobuf:"varint,1,opt,name=num_id,json=numId,proto3" json:"num_id,omitempty"`
	xxx_hidden_ServiceType beegfs.NodeType        `protobuf:"varint,2,opt,name=service_type,json=serviceType,proto3,enum=beegfs.NodeType" json:"service_type,omitempty"`
	xxx_hidden_Config      map[string]string      `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Interfaces  *[]*Nic                `protobuf:"bytes,4,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	xxx_hidden_Targets     *[]*Target             `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty"`
	xxx_hidden_Executable  string                 `protobuf:"bytes,6,opt,name=executable,proto3" json:"executable,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Service) Reset() {
	*x = Service{}
	mi := &file_agent_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Service) GetNumId() uint32 {
	if x != nil {
		return x.xxx_hidden_NumId
	}
	return 0
}

func (x *Service) GetServiceType() beegfs.NodeType {
	if x != nil {
		return x.xxx_hidden_ServiceType
	}
	return beegfs.NodeType(0)
}

func (x *Service) GetConfig() map[string]string {
	if x != nil {
		return x.xxx_hidden_Config
	}
	return nil
}

func (x *Service) GetInterfaces() []*Nic {
	if x != nil {
		if x.xxx_hidden_Interfaces != nil {
			return *x.xxx_hidden_Interfaces
		}
	}
	return nil
}

func (x *Service) GetTargets() []*Target {
	if x != nil {
		if x.xxx_hidden_Targets != nil {
			return *x.xxx_hidden_Targets
		}
	}
	return nil
}

func (x *Service) GetExecutable() string {
	if x != nil {
		return x.xxx_hidden_Executable
	}
	return ""
}

func (x *Service) SetNumId(v uint32) {
	x.xxx_hidden_NumId = v
}

func (x *Service) SetServiceType(v beegfs.NodeType) {
	x.xxx_hidden_ServiceType = v
}

func (x *Service) SetConfig(v map[string]string) {
	x.xxx_hidden_Config = v
}

func (x *Service) SetInterfaces(v []*Nic) {
	x.xxx_hidden_Interfaces = &v
}

func (x *Service) SetTargets(v []*Target) {
	x.xxx_hidden_Targets = &v
}

func (x *Service) SetExecutable(v string) {
	x.xxx_hidden_Executable = v
}

type Service_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	NumId       uint32
	ServiceType beegfs.NodeType
	// Configuration that should be applied to this specific service.
	Config     map[string]string
	Interfaces []*Nic
	Targets    []*Target
	Executable string
}

func (b0 Service_builder) Build() *Service {
	m0 := &Service{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_NumId = b.NumId
	x.xxx_hidden_ServiceType = b.ServiceType
	x.xxx_hidden_Config = b.Config
	x.xxx_hidden_Interfaces = &b.Interfaces
	x.xxx_hidden_Targets = &b.Targets
	x.xxx_hidden_Executable = b.Executable
	return m0
}

type Nic struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	xxx_hidden_Addr string                 `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Nic) Reset() {
	*x = Nic{}
	mi := &file_agent_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nic) ProtoMessage() {}

func (x *Nic) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Nic) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *Nic) GetAddr() string {
	if x != nil {
		return x.xxx_hidden_Addr
	}
	return ""
}

func (x *Nic) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *Nic) SetAddr(v string) {
	x.xxx_hidden_Addr = v
}

type Nic_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The name of the interface to use.
	Name string
	// The IP/subnet of the interface. Only required if the IP should be configured if needed.
	Addr string
}

func (b0 Nic_builder) Build() *Nic {
	m0 := &Nic{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_Addr = b.Addr
	return m0
}

type Target struct {
	state            protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_NumId uint32                   `protobuf:"varint,1,opt,name=num_id,json=numId,proto3" json:"num_id,omitempty"`
	xxx_hidden_Path  string                   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	xxx_hidden_Ulfs  *Target_UnderlyingFSOpts `protobuf:"bytes,3,opt,name=ulfs,proto3,oneof" json:"ulfs,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_agent_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Target) GetNumId() uint32 {
	if x != nil {
		return x.xxx_hidden_NumId
	}
	return 0
}

func (x *Target) GetPath() string {
	if x != nil {
		return x.xxx_hidden_Path
	}
	return ""
}

func (x *Target) GetUlfs() *Target_UnderlyingFSOpts {
	if x != nil {
		return x.xxx_hidden_Ulfs
	}
	return nil
}

func (x *Target) SetNumId(v uint32) {
	x.xxx_hidden_NumId = v
}

func (x *Target) SetPath(v string) {
	x.xxx_hidden_Path = v
}

func (x *Target) SetUlfs(v *Target_UnderlyingFSOpts) {
	x.xxx_hidden_Ulfs = v
}

func (x *Target) HasUlfs() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Ulfs != nil
}

func (x *Target) ClearUlfs() {
	x.xxx_hidden_Ulfs = nil
}

type Target_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// The target ID. Note the type is derived from the associated service.
	NumId uint32
	// Path to the directory under which this BeeGFS target directory will be created. For example
	// given path /mnt/ and storage target 101 the target contents would be at /mnt/s_101/. Always
	// required and this directory must already exist unless mount_opts is also specified.
	Path string
	// Optionally set to format+mount the underlying file system if needed. The underlying file system
	// will be mounted at path/shortFsUUID/type_id where shortFsUUID is the first 8 hex digits of the
	// full 128-bit v4 FsUUID. For example given FsUUID 3b6f972b-64c7-4378-9f8e-172cf88c7d93, storage
	// target 101 and root_dir `/mnt/` the target will be mounted at `/mnt/3b6f972b/storage_101`.
	Ulfs *Target_UnderlyingFSOpts
}

func (b0 Target_builder) Build() *Target {
	m0 := &Target{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_NumId = b.NumId
	x.xxx_hidden_Path = b.Path
	x.xxx_hidden_Ulfs = b.Ulfs
	return m0
}

type Filesystem_Common struct {
	state                    protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Auth          *Auth                  `protobuf:"bytes,1,opt,name=auth,proto3,oneof" json:"auth,omitempty"`
	xxx_hidden_Tls           *TLS                   `protobuf:"bytes,2,opt,name=tls,proto3,oneof" json:"tls,omitempty"`
	xxx_hidden_InstallSource *InstallSource         `protobuf:"bytes,3,opt,name=install_source,json=installSource,proto3" json:"install_source,omitempty"`
	xxx_hidden_GlobalConfig  *[]*ServiceConfig      `protobuf:"bytes,4,rep,name=global_config,json=globalConfig,proto3" json:"global_config,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Filesystem_Common) Reset() {
	*x = Filesystem_Common{}
	mi := &file_agent_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filesystem_Common) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filesystem_Common) ProtoMessage() {}

func (x *Filesystem_Common) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Filesystem_Common) GetAuth() *Auth {
	if x != nil {
		return x.xxx_hidden_Auth
	}
	return nil
}

func (x *Filesystem_Common) GetTls() *TLS {
	if x != nil {
		return x.xxx_hidden_Tls
	}
	return nil
}

func (x *Filesystem_Common) GetInstallSource() *InstallSource {
	if x != nil {
		return x.xxx_hidden_InstallSource
	}
	return nil
}

func (x *Filesystem_Common) GetGlobalConfig() []*ServiceConfig {
	if x != nil {
		if x.xxx_hidden_GlobalConfig != nil {
			return *x.xxx_hidden_GlobalConfig
		}
	}
	return nil
}

func (x *Filesystem_Common) SetAuth(v *Auth) {
	x.xxx_hidden_Auth = v
}

func (x *Filesystem_Common) SetTls(v *TLS) {
	x.xxx_hidden_Tls = v
}

func (x *Filesystem_Common) SetInstallSource(v *InstallSource) {
	x.xxx_hidden_InstallSource = v
}

func (x *Filesystem_Common) SetGlobalConfig(v []*ServiceConfig) {
	x.xxx_hidden_GlobalConfig = &v
}

func (x *Filesystem_Common) HasAuth() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Auth != nil
}

func (x *Filesystem_Common) HasTls() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Tls != nil
}

func (x *Filesystem_Common) HasInstallSource() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_InstallSource != nil
}

func (x *Filesystem_Common) ClearAuth() {
	x.xxx_hidden_Auth = nil
}

func (x *Filesystem_Common) ClearTls() {
	x.xxx_hidden_Tls = nil
}

func (x *Filesystem_Common) ClearInstallSource() {
	x.xxx_hidden_InstallSource = nil
}

type Filesystem_Common_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Auth          *Auth
	Tls           *TLS
	InstallSource *InstallSource
	GlobalConfig  []*ServiceConfig
}

func (b0 Filesystem_Common_builder) Build() *Filesystem_Common {
	m0 := &Filesystem_Common{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Auth = b.Auth
	x.xxx_hidden_Tls = b.Tls
	x.xxx_hidden_InstallSource = b.InstallSource
	x.xxx_hidden_GlobalConfig = &b.GlobalConfig
	return m0
}

type Target_UnderlyingFSOpts struct {
	state                  protoimpl.MessageState         `protogen:"opaque.v1"`
	xxx_hidden_Device      string                         `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	xxx_hidden_Type        Target_UnderlyingFSOpts_FsType `protobuf:"varint,2,opt,name=type,proto3,enum=agent.Target_UnderlyingFSOpts_FsType" json:"type,omitempty"`
	xxx_hidden_FormatFlags string                         `protobuf:"bytes,3,opt,name=format_flags,json=formatFlags,proto3" json:"format_flags,omitempty"`
	xxx_hidden_MountFlags  string                         `protobuf:"bytes,4,opt,name=mount_flags,json=mountFlags,proto3" json:"mount_flags,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Target_UnderlyingFSOpts) Reset() {
	*x = Target_UnderlyingFSOpts{}
	mi := &file_agent_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target_UnderlyingFSOpts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_UnderlyingFSOpts) ProtoMessage() {}

func (x *Target_UnderlyingFSOpts) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Target_UnderlyingFSOpts) GetDevice() string {
	if x != nil {
		return x.xxx_hidden_Device
	}
	return ""
}

func (x *Target_UnderlyingFSOpts) GetType() Target_UnderlyingFSOpts_FsType {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return Target_UnderlyingFSOpts_UNSPECIFIED
}

func (x *Target_UnderlyingFSOpts) GetFormatFlags() string {
	if x != nil {
		return x.xxx_hidden_FormatFlags
	}
	return ""
}

func (x *Target_UnderlyingFSOpts) GetMountFlags() string {
	if x != nil {
		return x.xxx_hidden_MountFlags
	}
	return ""
}

func (x *Target_UnderlyingFSOpts) SetDevice(v string) {
	x.xxx_hidden_Device = v
}

func (x *Target_UnderlyingFSOpts) SetType(v Target_UnderlyingFSOpts_FsType) {
	x.xxx_hidden_Type = v
}

func (x *Target_UnderlyingFSOpts) SetFormatFlags(v string) {
	x.xxx_hidden_FormatFlags = v
}

func (x *Target_UnderlyingFSOpts) SetMountFlags(v string) {
	x.xxx_hidden_MountFlags = v
}

type Target_UnderlyingFSOpts_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Device      string
	Type        Target_UnderlyingFSOpts_FsType
	FormatFlags string
	MountFlags  string
}

func (b0 Target_UnderlyingFSOpts_builder) Build() *Target_UnderlyingFSOpts {
	m0 := &Target_UnderlyingFSOpts{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Device = b.Device
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_FormatFlags = b.FormatFlags
	x.xxx_hidden_MountFlags = b.MountFlags
	return m0
}

var File_agent_proto protoreflect.FileDescriptor

var file_agent_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a,
	0x4c, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x38, 0x0a, 0x1b, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1c,
	0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x50,
	0x0a, 0x1b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0x60, 0x0a, 0x1c, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63,
	0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x58, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x05, 0x22, 0x97, 0x03, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0x32, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x46, 0x0a, 0x0a, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0xda, 0x01, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x03, 0x74, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x4c, 0x53, 0x48, 0x01, 0x52, 0x03, 0x74,
	0x6c, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0c, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x6c, 0x73, 0x22, 0x1e,
	0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x2b,
	0x0a, 0x03, 0x54, 0x4c, 0x53, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x22, 0x71, 0x0a, 0x0d, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x65, 0x66, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x04, 0x72, 0x65, 0x66, 0x73, 0x22, 0x52,
	0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x33, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x22, 0xc6, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x65,
	0x67, 0x66, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x1a, 0x3c, 0x0a,
	0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5f, 0x0a, 0x05, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x69, 0x63,
	0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22, 0xb9, 0x02, 0x0a,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6e, 0x75, 0x6d, 0x49, 0x64, 0x12,
	0x33, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x69, 0x63, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x39, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2d, 0x0a, 0x03, 0x4e, 0x69, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0xc6, 0x02, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6e, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x37, 0x0a,
	0x04, 0x75, 0x6c, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x55, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x79, 0x69, 0x6e, 0x67, 0x46, 0x53, 0x4f, 0x70, 0x74, 0x73, 0x48, 0x00, 0x52, 0x04, 0x75,
	0x6c, 0x66, 0x73, 0x88, 0x01, 0x01, 0x1a, 0xce, 0x01, 0x0a, 0x10, 0x55, 0x6e, 0x64, 0x65, 0x72,
	0x6c, 0x79, 0x69, 0x6e, 0x67, 0x46, 0x53, 0x4f, 0x70, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x2e, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x46, 0x53, 0x4f, 0x70, 0x74,
	0x73, 0x2e, 0x46, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x46, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x61,
	0x67, 0x73, 0x22, 0x23, 0x0a, 0x06, 0x46, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x45, 0x58, 0x54, 0x34, 0x10, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x6c, 0x66, 0x73,
	0x2a, 0x32, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x43, 0x4b, 0x41,
	0x47, 0x45, 0x10, 0x02, 0x32, 0x9b, 0x02, 0x0a, 0x08, 0x42, 0x65, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x4d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5f, 0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x63, 0x6f,
	0x6e, 0x63, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x70, 0x61, 0x72, 0x71, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var file_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_agent_proto_goTypes = []any{
	(InstallType)(0),                     // 0: agent.InstallType
	(Status_State)(0),                    // 1: agent.Status.State
	(Target_UnderlyingFSOpts_FsType)(0),  // 2: agent.Target.UnderlyingFSOpts.FsType
	(*UpdateManifestRequest)(nil),        // 3: agent.UpdateManifestRequest
	(*UpdateManifestResponse)(nil),       // 4: agent.UpdateManifestResponse
	(*ReconciliationStatusRequest)(nil),  // 5: agent.ReconciliationStatusRequest
	(*ReconciliationStatusResponse)(nil), // 6: agent.ReconciliationStatusResponse
	(*CancelReconciliationRequest)(nil),  // 7: agent.CancelReconciliationRequest
	(*CancelReconciliationResponse)(nil), // 8: agent.CancelReconciliationResponse
	(*Status)(nil),                       // 9: agent.Status
	(*Filesystem)(nil),                   // 10: agent.Filesystem
	(*Auth)(nil),                         // 11: agent.Auth
	(*TLS)(nil),                          // 12: agent.TLS
	(*InstallSource)(nil),                // 13: agent.InstallSource
	(*SourceRef)(nil),                    // 14: agent.SourceRef
	(*ServiceConfig)(nil),                // 15: agent.ServiceConfig
	(*Agent)(nil),                        // 16: agent.Agent
	(*Service)(nil),                      // 17: agent.Service
	(*Nic)(nil),                          // 18: agent.Nic
	(*Target)(nil),                       // 19: agent.Target
	nil,                                  // 20: agent.UpdateManifestRequest.ConfigEntry
	nil,                                  // 21: agent.Filesystem.AgentEntry
	(*Filesystem_Common)(nil),            // 22: agent.Filesystem.Common
	nil,                                  // 23: agent.ServiceConfig.StringMapEntry
	nil,                                  // 24: agent.Service.ConfigEntry
	(*Target_UnderlyingFSOpts)(nil),      // 25: agent.Target.UnderlyingFSOpts
	(*timestamppb.Timestamp)(nil),        // 26: google.protobuf.Timestamp
	(beegfs.NodeType)(0),                 // 27: beegfs.NodeType
}
var file_agent_proto_depIdxs = []int32{
	20, // 0: agent.UpdateManifestRequest.config:type_name -> agent.UpdateManifestRequest.ConfigEntry
	9,  // 1: agent.ReconciliationStatusResponse.status:type_name -> agent.Status
	9,  // 2: agent.CancelReconciliationResponse.status:type_name -> agent.Status
	1,  // 3: agent.Status.state:type_name -> agent.Status.State
	26, // 4: agent.Status.updated:type_name -> google.protobuf.Timestamp
	21, // 5: agent.Filesystem.agent:type_name -> agent.Filesystem.AgentEntry
	22, // 6: agent.Filesystem.common:type_name -> agent.Filesystem.Common
	0,  // 7: agent.InstallSource.type:type_name -> agent.InstallType
	14, // 8: agent.InstallSource.refs:type_name -> agent.SourceRef
	27, // 9: agent.SourceRef.service_type:type_name -> beegfs.NodeType
	27, // 10: agent.ServiceConfig.service_type:type_name -> beegfs.NodeType
	23, // 11: agent.ServiceConfig.string_map:type_name -> agent.ServiceConfig.StringMapEntry
	17, // 12: agent.Agent.services:type_name -> agent.Service
	18, // 13: agent.Agent.interfaces:type_name -> agent.Nic
	27, // 14: agent.Service.service_type:type_name -> beegfs.NodeType
	24, // 15: agent.Service.config:type_name -> agent.Service.ConfigEntry
	18, // 16: agent.Service.interfaces:type_name -> agent.Nic
	19, // 17: agent.Service.targets:type_name -> agent.Target
	25, // 18: agent.Target.ulfs:type_name -> agent.Target.UnderlyingFSOpts
	10, // 19: agent.UpdateManifestRequest.ConfigEntry.value:type_name -> agent.Filesystem
	16, // 20: agent.Filesystem.AgentEntry.value:type_name -> agent.Agent
	11, // 21: agent.Filesystem.Common.auth:type_name -> agent.Auth
	12, // 22: agent.Filesystem.Common.tls:type_name -> agent.TLS
	13, // 23: agent.Filesystem.Common.install_source:type_name -> agent.InstallSource
	15, // 24: agent.Filesystem.Common.global_config:type_name -> agent.ServiceConfig
	2,  // 25: agent.Target.UnderlyingFSOpts.type:type_name -> agent.Target.UnderlyingFSOpts.FsType
	3,  // 26: agent.BeeAgent.UpdateManifest:input_type -> agent.UpdateManifestRequest
	5,  // 27: agent.BeeAgent.ReconciliationStatus:input_type -> agent.ReconciliationStatusRequest
	7,  // 28: agent.BeeAgent.CancelReconciliation:input_type -> agent.CancelReconciliationRequest
	4,  // 29: agent.BeeAgent.UpdateManifest:output_type -> agent.UpdateManifestResponse
	6,  // 30: agent.BeeAgent.ReconciliationStatus:output_type -> agent.ReconciliationStatusResponse
	8,  // 31: agent.BeeAgent.CancelReconciliation:output_type -> agent.CancelReconciliationResponse
	29, // [29:32] is the sub-list for method output_type
	26, // [26:29] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	file_agent_proto_msgTypes[16].OneofWrappers = []any{}
	file_agent_proto_msgTypes[19].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agent_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		EnumInfos:         file_agent_proto_enumTypes,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_rawDesc = nil
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: beegfs.proto

package beegfs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewState int32

const (
	NewState_UNCHANGED NewState = 0
	NewState_CANCEL    NewState = 1
)

// Enum value maps for NewState.
var (
	NewState_name = map[int32]string{
		0: "UNCHANGED",
		1: "CANCEL",
	}
	NewState_value = map[string]int32{
		"UNCHANGED": 0,
		"CANCEL":    1,
	}
)

func (x NewState) Enum() *NewState {
	p := new(NewState)
	*p = x
	return p
}

func (x NewState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NewState) Descriptor() protoreflect.EnumDescriptor {
	return file_beegfs_proto_enumTypes[0].Descriptor()
}

func (NewState) Type() protoreflect.EnumType {
	return &file_beegfs_proto_enumTypes[0]
}

func (x NewState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NewState.Descriptor instead.
func (NewState) EnumDescriptor() ([]byte, []int) {
	return file_beegfs_proto_rawDescGZIP(), []int{0}
}

type UpdateWorkRequests_State int32

const (
	UpdateWorkRequests_UNCHANGED UpdateWorkRequests_State = 0
	UpdateWorkRequests_CANCEL    UpdateWorkRequests_State = 1
	UpdateWorkRequests_RESUME    UpdateWorkRequests_State = 2
)

// Enum value maps for UpdateWorkRequests_State.
var (
	UpdateWorkRequests_State_name = map[int32]string{
		0: "UNCHANGED",
		1: "CANCEL",
		2: "RESUME",
	}
	UpdateWorkRequests_State_value = map[string]int32{
		"UNCHANGED": 0,
		"CANCEL":    1,
		"RESUME":    2,
	}
)

func (x UpdateWorkRequests_State) Enum() *UpdateWorkRequests_State {
	p := new(UpdateWorkRequests_State)
	*p = x
	return p
}

func (x UpdateWorkRequests_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateWorkRequests_State) Descriptor() protoreflect.EnumDescriptor {
	return file_beegfs_proto_enumTypes[1].Descriptor()
}

func (UpdateWorkRequests_State) Type() protoreflect.EnumType {
	return &file_beegfs_proto_enumTypes[1]
}

func (x UpdateWorkRequests_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateWorkRequests_State.Descriptor instead.
func (UpdateWorkRequests_State) EnumDescriptor() ([]byte, []int) {
	return file_beegfs_proto_rawDescGZIP(), []int{1, 0}
}

// The Status fields are used to track the progress of each JobRequest to a terminal state.
// See the docs/design/architecture/v1/job-request-state-flow.drawio diagram for more details.
type RequestStatus_Status int32

const (
	RequestStatus_UNKNOWN    RequestStatus_Status = 0 // Used if BeeRemote is unable to make contact with a worker node.
	RequestStatus_UNASSIGNED RequestStatus_Status = 1 // When BeeRemote has a job waiting on an available worker node.
	// ASSIGNED = 2;    // When BeeRemote first assigns a job to a worker node. In this state we don't know if the worker node actually received the request until it is acknowledged (in the SCHEDULED state).
	// CREATED = 3;     // When either BeeRemote or a worker has created a multipart upload/other prerequisites of a specific job type.
	// RESCHEDULED = 4; // If a worker node is waiting on BeeRemote to determine if the job should be distributed across multiple workers.
	RequestStatus_SCHEDULED RequestStatus_Status = 5  // When a worker node has accepted a job but is waiting on CPU cycles to actually run it.
	RequestStatus_RUNNING   RequestStatus_Status = 6  // If a job is actively in progress on a worker.
	RequestStatus_STALLED   RequestStatus_Status = 7  // If a worker node comes up with outstanding jobs, it will first check with BeeRemote to ensure the job wasn't cancelled. If something queries the state of a job before BeeRemote responds the job will be considered STALLED.
	RequestStatus_PAUSED    RequestStatus_Status = 8  // If a job has been manually paused.
	RequestStatus_FAILED    RequestStatus_Status = 9  // If the worker node encounters an unrecoverable error it will return this status to BeeRemote.
	RequestStatus_COMPLETED RequestStatus_Status = 10 // If the job has finished succesfully.
	RequestStatus_CANCELLED RequestStatus_Status = 11 // Set by BeeRemote if a job needs to be cancelled.
)

// Enum value maps for RequestStatus_Status.
var (
	RequestStatus_Status_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "UNASSIGNED",
		5:  "SCHEDULED",
		6:  "RUNNING",
		7:  "STALLED",
		8:  "PAUSED",
		9:  "FAILED",
		10: "COMPLETED",
		11: "CANCELLED",
	}
	RequestStatus_Status_value = map[string]int32{
		"UNKNOWN":    0,
		"UNASSIGNED": 1,
		"SCHEDULED":  5,
		"RUNNING":    6,
		"STALLED":    7,
		"PAUSED":     8,
		"FAILED":     9,
		"COMPLETED":  10,
		"CANCELLED":  11,
	}
)

func (x RequestStatus_Status) Enum() *RequestStatus_Status {
	p := new(RequestStatus_Status)
	*p = x
	return p
}

func (x RequestStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_beegfs_proto_enumTypes[2].Descriptor()
}

func (RequestStatus_Status) Type() protoreflect.EnumType {
	return &file_beegfs_proto_enumTypes[2]
}

func (x RequestStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestStatus_Status.Descriptor instead.
func (RequestStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_beegfs_proto_rawDescGZIP(), []int{2, 0}
}

type UpdateWorkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID     string   `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	RequestID string   `protobuf:"bytes,2,opt,name=requestID,proto3" json:"requestID,omitempty"`
	NewState  NewState `protobuf:"varint,3,opt,name=newState,proto3,enum=beegfs.NewState" json:"newState,omitempty"`
}

func (x *UpdateWorkRequest) Reset() {
	*x = UpdateWorkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beegfs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkRequest) ProtoMessage() {}

func (x *UpdateWorkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_beegfs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkRequest) Descriptor() ([]byte, []int) {
	return file_beegfs_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateWorkRequest) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *UpdateWorkRequest) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *UpdateWorkRequest) GetNewState() NewState {
	if x != nil {
		return x.NewState
	}
	return NewState_UNCHANGED
}

type UpdateWorkRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of jobs whose work requests should be modfied.
	Jobs []*UpdateWorkRequestsJob `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	// Default state is the state for any work requests not explicitly mentioned in the modification request.
	DefaultState UpdateWorkRequests_State `protobuf:"varint,2,opt,name=defaultState,proto3,enum=beegfs.UpdateWorkRequests_State" json:"defaultState,omitempty"`
}

func (x *UpdateWorkRequests) Reset() {
	*x = UpdateWorkRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beegfs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkRequests) ProtoMessage() {}

func (x *UpdateWorkRequests) ProtoReflect() protoreflect.Message {
	mi := &file_beegfs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkRequests.ProtoReflect.Descriptor instead.
func (*UpdateWorkRequests) Descriptor() ([]byte, []int) {
	return file_beegfs_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateWorkRequests) GetJobs() []*UpdateWorkRequestsJob {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *UpdateWorkRequests) GetDefaultState() UpdateWorkRequests_State {
	if x != nil {
		return x.DefaultState
	}
	return UpdateWorkRequests_UNCHANGED
}

// Status codes used by BeeRemote and its worker nodes to track the progress of
// a Job and its work requests. We use a common set of statuses across all types
// of Jobs and worker nodes (such as BeeSync).
type RequestStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RequestStatus_Status `protobuf:"varint,1,opt,name=status,proto3,enum=beegfs.RequestStatus_Status" json:"status,omitempty"`
	// Message should be used to return any additional details, particuarly to aid in troubleshooting.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RequestStatus) Reset() {
	*x = RequestStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beegfs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestStatus) ProtoMessage() {}

func (x *RequestStatus) ProtoReflect() protoreflect.Message {
	mi := &file_beegfs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestStatus.ProtoReflect.Descriptor instead.
func (*RequestStatus) Descriptor() ([]byte, []int) {
	return file_beegfs_proto_rawDescGZIP(), []int{2}
}

func (x *RequestStatus) GetStatus() RequestStatus_Status {
	if x != nil {
		return x.Status
	}
	return RequestStatus_UNKNOWN
}

func (x *RequestStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Basic metadata all job responses and work request/responses for must embed.
type JobMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status *RequestStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *JobMetadata) Reset() {
	*x = JobMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beegfs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobMetadata) ProtoMessage() {}

func (x *JobMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_beegfs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobMetadata.ProtoReflect.Descriptor instead.
func (*JobMetadata) Descriptor() ([]byte, []int) {
	return file_beegfs_proto_rawDescGZIP(), []int{3}
}

func (x *JobMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JobMetadata) GetStatus() *RequestStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type WorkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string         `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	RequestId string         `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    *RequestStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // TODO: Do we need a different list of statuses for WorkResponses?
}

func (x *WorkResponse) Reset() {
	*x = WorkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beegfs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkResponse) ProtoMessage() {}

func (x *WorkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_beegfs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkResponse.ProtoReflect.Descriptor instead.
func (*WorkResponse) Descriptor() ([]byte, []int) {
	return file_beegfs_proto_rawDescGZIP(), []int{4}
}

func (x *WorkResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *WorkResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *WorkResponse) GetStatus() *RequestStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type UpdateWorkRequestsJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string                   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Id    string                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	State UpdateWorkRequests_State `protobuf:"varint,3,opt,name=state,proto3,enum=beegfs.UpdateWorkRequests_State" json:"state,omitempty"`
}

func (x *UpdateWorkRequestsJob) Reset() {
	*x = UpdateWorkRequestsJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_beegfs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkRequestsJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkRequestsJob) ProtoMessage() {}

func (x *UpdateWorkRequestsJob) ProtoReflect() protoreflect.Message {
	mi := &file_beegfs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkRequestsJob.ProtoReflect.Descriptor instead.
func (*UpdateWorkRequestsJob) Descriptor() ([]byte, []int) {
	return file_beegfs_proto_rawDescGZIP(), []int{1, 0}
}

func (x *UpdateWorkRequestsJob) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateWorkRequestsJob) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateWorkRequestsJob) GetState() UpdateWorkRequests_State {
	if x != nil {
		return x.State
	}
	return UpdateWorkRequests_UNCHANGED
}

var File_beegfs_proto protoreflect.FileDescriptor

var file_beegfs_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x22, 0x75, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x2c, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa1, 0x02,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x6a,
	0x6f, 0x62, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x61,
	0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x62, 0x65, 0x65, 0x67, 0x66,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x2e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x53, 0x55, 0x4d, 0x45, 0x10,
	0x02, 0x22, 0xe6, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55,
	0x4e, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x4c, 0x4c,
	0x45, 0x44, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x08,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x0b, 0x22, 0x4c, 0x0a, 0x0b, 0x4a, 0x6f,
	0x62, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x65, 0x65, 0x67,
	0x66, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2d,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x25, 0x0a,
	0x08, 0x4e, 0x65, 0x77, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x10, 0x01, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x69, 0x6e, 0x6b, 0x70, 0x61, 0x72, 0x71, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x2f, 0x67, 0x6f, 0x3b,
	0x62, 0x65, 0x65, 0x67, 0x66, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_beegfs_proto_rawDescOnce sync.Once
	file_beegfs_proto_rawDescData = file_beegfs_proto_rawDesc
)

func file_beegfs_proto_rawDescGZIP() []byte {
	file_beegfs_proto_rawDescOnce.Do(func() {
		file_beegfs_proto_rawDescData = protoimpl.X.CompressGZIP(file_beegfs_proto_rawDescData)
	})
	return file_beegfs_proto_rawDescData
}

var file_beegfs_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_beegfs_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_beegfs_proto_goTypes = []interface{}{
	(NewState)(0),                 // 0: beegfs.NewState
	(UpdateWorkRequests_State)(0), // 1: beegfs.UpdateWorkRequests.State
	(RequestStatus_Status)(0),     // 2: beegfs.RequestStatus.Status
	(*UpdateWorkRequest)(nil),     // 3: beegfs.UpdateWorkRequest
	(*UpdateWorkRequests)(nil),    // 4: beegfs.UpdateWorkRequests
	(*RequestStatus)(nil),         // 5: beegfs.RequestStatus
	(*JobMetadata)(nil),           // 6: beegfs.JobMetadata
	(*WorkResponse)(nil),          // 7: beegfs.WorkResponse
	(*UpdateWorkRequestsJob)(nil), // 8: beegfs.UpdateWorkRequests.job
}
var file_beegfs_proto_depIdxs = []int32{
	0, // 0: beegfs.UpdateWorkRequest.newState:type_name -> beegfs.NewState
	8, // 1: beegfs.UpdateWorkRequests.jobs:type_name -> beegfs.UpdateWorkRequests.job
	1, // 2: beegfs.UpdateWorkRequests.defaultState:type_name -> beegfs.UpdateWorkRequests.State
	2, // 3: beegfs.RequestStatus.status:type_name -> beegfs.RequestStatus.Status
	5, // 4: beegfs.JobMetadata.status:type_name -> beegfs.RequestStatus
	5, // 5: beegfs.WorkResponse.status:type_name -> beegfs.RequestStatus
	1, // 6: beegfs.UpdateWorkRequests.job.state:type_name -> beegfs.UpdateWorkRequests.State
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_beegfs_proto_init() }
func file_beegfs_proto_init() {
	if File_beegfs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_beegfs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beegfs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beegfs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beegfs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beegfs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_beegfs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkRequestsJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_beegfs_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_beegfs_proto_goTypes,
		DependencyIndexes: file_beegfs_proto_depIdxs,
		EnumInfos:         file_beegfs_proto_enumTypes,
		MessageInfos:      file_beegfs_proto_msgTypes,
	}.Build()
	File_beegfs_proto = out.File
	file_beegfs_proto_rawDesc = nil
	file_beegfs_proto_goTypes = nil
	file_beegfs_proto_depIdxs = nil
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: beewatch.proto
// Protobuf C++ Version: 5.29.2

#include "beewatch.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace beewatch {

inline constexpr V2Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entry_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_entry_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        num_links_{::uint64_t{0u}},
        type_{static_cast< ::beewatch::V2Event_Type >(0)},
        msg_user_id_{0u},
        timestamp_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR V2Event::V2Event(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct V2EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR V2EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~V2EventDefaultTypeInternal() {}
  union {
    V2Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 V2EventDefaultTypeInternal _V2Event_default_instance_;

inline constexpr V1Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        entry_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_entry_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dropped_seq_{::uint64_t{0u}},
        missed_seq_{::uint64_t{0u}},
        type_{static_cast< ::beewatch::V1Event_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR V1Event::V1Event(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct V1EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR V1EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~V1EventDefaultTypeInternal() {}
  union {
    V1Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 V1EventDefaultTypeInternal _V1Event_default_instance_;

inline constexpr Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : completed_seq_{::uint64_t{0u}},
        shutting_down_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        seq_id_{::uint64_t{0u}},
        meta_id_{0u},
        meta_mirror_{0u},
        event_flags_{0u},
        event_data_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Event::Event(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDefaultTypeInternal() {}
  union {
    Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDefaultTypeInternal _Event_default_instance_;
}  // namespace beewatch
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_beewatch_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_beewatch_2eproto = nullptr;
const ::uint32_t
    TableStruct_beewatch_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::beewatch::Event, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::beewatch::Event, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::beewatch::Event, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::beewatch::Event, _impl_.seq_id_),
        PROTOBUF_FIELD_OFFSET(::beewatch::Event, _impl_.meta_id_),
        PROTOBUF_FIELD_OFFSET(::beewatch::Event, _impl_.meta_mirror_),
        PROTOBUF_FIELD_OFFSET(::beewatch::Event, _impl_.event_flags_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::beewatch::Event, _impl_.event_data_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::beewatch::V1Event, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::beewatch::V1Event, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V1Event, _impl_.dropped_seq_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V1Event, _impl_.missed_seq_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V1Event, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V1Event, _impl_.entry_id_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V1Event, _impl_.parent_entry_id_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V1Event, _impl_.target_path_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V1Event, _impl_.target_parent_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _impl_.num_links_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _impl_.entry_id_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _impl_.parent_entry_id_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _impl_.target_path_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _impl_.target_parent_id_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _impl_.msg_user_id_),
        PROTOBUF_FIELD_OFFSET(::beewatch::V2Event, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::beewatch::Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::beewatch::Response, _impl_.completed_seq_),
        PROTOBUF_FIELD_OFFSET(::beewatch::Response, _impl_.shutting_down_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::beewatch::Event)},
        {21, -1, -1, sizeof(::beewatch::V1Event)},
        {37, -1, -1, sizeof(::beewatch::V2Event)},
        {54, -1, -1, sizeof(::beewatch::Response)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::beewatch::_Event_default_instance_._instance,
    &::beewatch::_V1Event_default_instance_._instance,
    &::beewatch::_V2Event_default_instance_._instance,
    &::beewatch::_Response_default_instance_._instance,
};
const char descriptor_table_protodef_beewatch_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016beewatch.proto\022\010beewatch\"\267\001\n\005Event\022\016\n\006"
    "seq_id\030\001 \001(\004\022\017\n\007meta_id\030\002 \001(\r\022\030\n\013meta_mi"
    "rror\030\003 \001(\rH\001\210\001\001\022\023\n\013event_flags\030\004 \001(\r\022\037\n\002"
    "v1\030\013 \001(\0132\021.beewatch.V1EventH\000\022\037\n\002v2\030\014 \001("
    "\0132\021.beewatch.V2EventH\000B\014\n\nevent_dataB\016\n\014"
    "_meta_mirror\"\352\002\n\007V1Event\022$\n\004type\030\001 \001(\0162\026"
    ".beewatch.V1Event.Type\022\023\n\013dropped_seq\030\002 "
    "\001(\004\022\022\n\nmissed_seq\030\003 \001(\004\022\014\n\004path\030\004 \001(\t\022\020\n"
    "\010entry_id\030\005 \001(\t\022\027\n\017parent_entry_id\030\006 \001(\t"
    "\022\023\n\013target_path\030\007 \001(\t\022\030\n\020target_parent_i"
    "d\030\010 \001(\t\"\247\001\n\004Type\022\t\n\005FLUSH\020\000\022\014\n\010TRUNCATE\020"
    "\001\022\013\n\007SETATTR\020\002\022\017\n\013CLOSE_WRITE\020\003\022\n\n\006CREAT"
    "E\020\004\022\t\n\005MKDIR\020\005\022\t\n\005MKNOD\020\006\022\013\n\007SYMLINK\020\007\022\t"
    "\n\005RMDIR\020\010\022\n\n\006UNLINK\020\t\022\014\n\010HARDLINK\020\n\022\n\n\006R"
    "ENAME\020\013\022\010\n\004READ\020\014\"\313\003\n\007V2Event\022$\n\004type\030\001 "
    "\001(\0162\026.beewatch.V2Event.Type\022\021\n\tnum_links"
    "\030\002 \001(\004\022\014\n\004path\030\003 \001(\t\022\020\n\010entry_id\030\004 \001(\t\022\027"
    "\n\017parent_entry_id\030\005 \001(\t\022\023\n\013target_path\030\006"
    " \001(\t\022\030\n\020target_parent_id\030\007 \001(\t\022\023\n\013msg_us"
    "er_id\030\010 \001(\r\022\021\n\ttimestamp\030\t \001(\003\"\366\001\n\004Type\022"
    "\013\n\007INVALID\020\000\022\t\n\005FLUSH\020\001\022\014\n\010TRUNCATE\020\002\022\013\n"
    "\007SETATTR\020\003\022\017\n\013CLOSE_WRITE\020\004\022\n\n\006CREATE\020\005\022"
    "\t\n\005MKDIR\020\006\022\t\n\005MKNOD\020\007\022\013\n\007SYMLINK\020\010\022\t\n\005RM"
    "DIR\020\t\022\n\n\006UNLINK\020\n\022\014\n\010HARDLINK\020\013\022\n\n\006RENAM"
    "E\020\014\022\r\n\tOPEN_READ\020\r\022\016\n\nOPEN_WRITE\020\016\022\023\n\017OP"
    "EN_READ_WRITE\020\017\022\026\n\022LAST_WRITER_CLOSED\020\020\""
    "8\n\010Response\022\025\n\rcompleted_seq\030\001 \001(\004\022\025\n\rsh"
    "utting_down\030\002 \001(\0102F\n\nSubscriber\0228\n\rRecei"
    "veEvents\022\017.beewatch.Event\032\022.beewatch.Res"
    "ponse(\0010\001B+Z)github.com/thinkparq/protob"
    "uf/go/beewatchb\006proto3"
};
static ::absl::once_flag descriptor_table_beewatch_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_beewatch_2eproto = {
    false,
    false,
    1222,
    descriptor_table_protodef_beewatch_2eproto,
    "beewatch.proto",
    &descriptor_table_beewatch_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_beewatch_2eproto::offsets,
    file_level_enum_descriptors_beewatch_2eproto,
    file_level_service_descriptors_beewatch_2eproto,
};
namespace beewatch {
const ::google::protobuf::EnumDescriptor* V1Event_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beewatch_2eproto);
  return file_level_enum_descriptors_beewatch_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t V1Event_Type_internal_data_[] = {
    851968u, 0u, };
bool V1Event_Type_IsValid(int value) {
  return 0 <= value && value <= 12;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr V1Event_Type V1Event::FLUSH;
constexpr V1Event_Type V1Event::TRUNCATE;
constexpr V1Event_Type V1Event::SETATTR;
constexpr V1Event_Type V1Event::CLOSE_WRITE;
constexpr V1Event_Type V1Event::CREATE;
constexpr V1Event_Type V1Event::MKDIR;
constexpr V1Event_Type V1Event::MKNOD;
constexpr V1Event_Type V1Event::SYMLINK;
constexpr V1Event_Type V1Event::RMDIR;
constexpr V1Event_Type V1Event::UNLINK;
constexpr V1Event_Type V1Event::HARDLINK;
constexpr V1Event_Type V1Event::RENAME;
constexpr V1Event_Type V1Event::READ;
constexpr V1Event_Type V1Event::Type_MIN;
constexpr V1Event_Type V1Event::Type_MAX;
constexpr int V1Event::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* V2Event_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beewatch_2eproto);
  return file_level_enum_descriptors_beewatch_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t V2Event_Type_internal_data_[] = {
    1114112u, 0u, };
bool V2Event_Type_IsValid(int value) {
  return 0 <= value && value <= 16;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr V2Event_Type V2Event::INVALID;
constexpr V2Event_Type V2Event::FLUSH;
constexpr V2Event_Type V2Event::TRUNCATE;
constexpr V2Event_Type V2Event::SETATTR;
constexpr V2Event_Type V2Event::CLOSE_WRITE;
constexpr V2Event_Type V2Event::CREATE;
constexpr V2Event_Type V2Event::MKDIR;
constexpr V2Event_Type V2Event::MKNOD;
constexpr V2Event_Type V2Event::SYMLINK;
constexpr V2Event_Type V2Event::RMDIR;
constexpr V2Event_Type V2Event::UNLINK;
constexpr V2Event_Type V2Event::HARDLINK;
constexpr V2Event_Type V2Event::RENAME;
constexpr V2Event_Type V2Event::OPEN_READ;
constexpr V2Event_Type V2Event::OPEN_WRITE;
constexpr V2Event_Type V2Event::OPEN_READ_WRITE;
constexpr V2Event_Type V2Event::LAST_WRITER_CLOSED;
constexpr V2Event_Type V2Event::Type_MIN;
constexpr V2Event_Type V2Event::Type_MAX;
constexpr int V2Event::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Event::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Event>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Event, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::beewatch::Event, _impl_._oneof_case_);
};

void Event::set_allocated_v1(::beewatch::V1Event* v1) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event_data();
  if (v1) {
    ::google::protobuf::Arena* submessage_arena = v1->GetArena();
    if (message_arena != submessage_arena) {
      v1 = ::google::protobuf::internal::GetOwnedMessage(message_arena, v1, submessage_arena);
    }
    set_has_v1();
    _impl_.event_data_.v1_ = v1;
  }
  // @@protoc_insertion_point(field_set_allocated:beewatch.Event.v1)
}
void Event::set_allocated_v2(::beewatch::V2Event* v2) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event_data();
  if (v2) {
    ::google::protobuf::Arena* submessage_arena = v2->GetArena();
    if (message_arena != submessage_arena) {
      v2 = ::google::protobuf::internal::GetOwnedMessage(message_arena, v2, submessage_arena);
    }
    set_has_v2();
    _impl_.event_data_.v2_ = v2;
  }
  // @@protoc_insertion_point(field_set_allocated:beewatch.Event.v2)
}
Event::Event(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:beewatch.Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::beewatch::Event& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        event_data_{},
        _oneof_case_{from._oneof_case_[0]} {}

Event::Event(
    ::google::protobuf::Arena* arena,
    const Event& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seq_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, seq_id_),
           offsetof(Impl_, event_flags_) -
               offsetof(Impl_, seq_id_) +
               sizeof(Impl_::event_flags_));
  switch (event_data_case()) {
    case EVENT_DATA_NOT_SET:
      break;
      case kV1:
        _impl_.event_data_.v1_ = ::google::protobuf::Message::CopyConstruct<::beewatch::V1Event>(arena, *from._impl_.event_data_.v1_);
        break;
      case kV2:
        _impl_.event_data_.v2_ = ::google::protobuf::Message::CopyConstruct<::beewatch::V2Event>(arena, *from._impl_.event_data_.v2_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:beewatch.Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        event_data_{},
        _oneof_case_{} {}

inline void Event::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seq_id_),
           0,
           offsetof(Impl_, event_flags_) -
               offsetof(Impl_, seq_id_) +
               sizeof(Impl_::event_flags_));
}
Event::~Event() {
  // @@protoc_insertion_point(destructor:beewatch.Event)
  SharedDtor(*this);
}
inline void Event::SharedDtor(MessageLite& self) {
  Event& this_ = static_cast<Event&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_event_data()) {
    this_.clear_event_data();
  }
  this_._impl_.~Impl_();
}

void Event::clear_event_data() {
// @@protoc_insertion_point(one_of_clear_start:beewatch.Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (event_data_case()) {
    case kV1: {
      if (GetArena() == nullptr) {
        delete _impl_.event_data_.v1_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_data_.v1_);
      }
      break;
    }
    case kV2: {
      if (GetArena() == nullptr) {
        delete _impl_.event_data_.v2_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_data_.v2_);
      }
      break;
    }
    case EVENT_DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EVENT_DATA_NOT_SET;
}


inline void* Event::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Event(arena);
}
constexpr auto Event::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Event),
                                            alignof(Event));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Event::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Event_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Event::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Event>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Event::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Event>(), &Event::ByteSizeLong,
            &Event::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Event, _impl_._cached_size_),
        false,
    },
    &Event::kDescriptorMethods,
    &descriptor_table_beewatch_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Event::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 2, 0, 2> Event::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Event, _impl_._has_bits_),
    0, // no _extensions_
    12, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964208,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::beewatch::Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 event_flags = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.event_flags_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.event_flags_)}},
    // uint64 seq_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Event, _impl_.seq_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.seq_id_)}},
    // uint32 meta_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.meta_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.meta_id_)}},
    // optional uint32 meta_mirror = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.meta_mirror_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.meta_mirror_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 seq_id = 1;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.seq_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 meta_id = 2;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.meta_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // optional uint32 meta_mirror = 3;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.meta_mirror_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 event_flags = 4;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.event_flags_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .beewatch.V1Event v1 = 11;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.event_data_.v1_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .beewatch.V2Event v2 = 12;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.event_data_.v2_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::beewatch::V1Event>()},
    {::_pbi::TcParser::GetTable<::beewatch::V2Event>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:beewatch.Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.seq_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.meta_id_) -
      reinterpret_cast<char*>(&_impl_.seq_id_)) + sizeof(_impl_.meta_id_));
  _impl_.meta_mirror_ = 0u;
  _impl_.event_flags_ = 0u;
  clear_event_data();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Event::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Event::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:beewatch.Event)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 seq_id = 1;
          if (this_._internal_seq_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_seq_id(), target);
          }

          // uint32 meta_id = 2;
          if (this_._internal_meta_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_meta_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional uint32 meta_mirror = 3;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_meta_mirror(), target);
          }

          // uint32 event_flags = 4;
          if (this_._internal_event_flags() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_event_flags(), target);
          }

          switch (this_.event_data_case()) {
            case kV1: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.event_data_.v1_, this_._impl_.event_data_.v1_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kV2: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.event_data_.v2_, this_._impl_.event_data_.v2_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:beewatch.Event)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Event::ByteSizeLong(const MessageLite& base) {
          const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Event::ByteSizeLong() const {
          const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:beewatch.Event)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 seq_id = 1;
            if (this_._internal_seq_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_seq_id());
            }
            // uint32 meta_id = 2;
            if (this_._internal_meta_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_meta_id());
            }
          }
           {
            // optional uint32 meta_mirror = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_meta_mirror());
            }
          }
           {
            // uint32 event_flags = 4;
            if (this_._internal_event_flags() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_event_flags());
            }
          }
          switch (this_.event_data_case()) {
            // .beewatch.V1Event v1 = 11;
            case kV1: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.event_data_.v1_);
              break;
            }
            // .beewatch.V2Event v2 = 12;
            case kV2: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.event_data_.v2_);
              break;
            }
            case EVENT_DATA_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Event*>(&to_msg);
  auto& from = static_cast<const Event&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:beewatch.Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seq_id() != 0) {
    _this->_impl_.seq_id_ = from._impl_.seq_id_;
  }
  if (from._internal_meta_id() != 0) {
    _this->_impl_.meta_id_ = from._impl_.meta_id_;
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.meta_mirror_ = from._impl_.meta_mirror_;
  }
  if (from._internal_event_flags() != 0) {
    _this->_impl_.event_flags_ = from._impl_.event_flags_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_event_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kV1: {
        if (oneof_needs_init) {
          _this->_impl_.event_data_.v1_ =
              ::google::protobuf::Message::CopyConstruct<::beewatch::V1Event>(arena, *from._impl_.event_data_.v1_);
        } else {
          _this->_impl_.event_data_.v1_->MergeFrom(from._internal_v1());
        }
        break;
      }
      case kV2: {
        if (oneof_needs_init) {
          _this->_impl_.event_data_.v2_ =
              ::google::protobuf::Message::CopyConstruct<::beewatch::V2Event>(arena, *from._impl_.event_data_.v2_);
        } else {
          _this->_impl_.event_data_.v2_->MergeFrom(from._internal_v2());
        }
        break;
      }
      case EVENT_DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:beewatch.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Event::InternalSwap(Event* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Event, _impl_.event_flags_)
      + sizeof(Event::_impl_.event_flags_)
      - PROTOBUF_FIELD_OFFSET(Event, _impl_.seq_id_)>(
          reinterpret_cast<char*>(&_impl_.seq_id_),
          reinterpret_cast<char*>(&other->_impl_.seq_id_));
  swap(_impl_.event_data_, other->_impl_.event_data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class V1Event::_Internal {
 public:
};

V1Event::V1Event(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:beewatch.V1Event)
}
inline PROTOBUF_NDEBUG_INLINE V1Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::beewatch::V1Event& from_msg)
      : path_(arena, from.path_),
        entry_id_(arena, from.entry_id_),
        parent_entry_id_(arena, from.parent_entry_id_),
        target_path_(arena, from.target_path_),
        target_parent_id_(arena, from.target_parent_id_),
        _cached_size_{0} {}

V1Event::V1Event(
    ::google::protobuf::Arena* arena,
    const V1Event& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  V1Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dropped_seq_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, dropped_seq_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, dropped_seq_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:beewatch.V1Event)
}
inline PROTOBUF_NDEBUG_INLINE V1Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_(arena),
        entry_id_(arena),
        parent_entry_id_(arena),
        target_path_(arena),
        target_parent_id_(arena),
        _cached_size_{0} {}

inline void V1Event::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dropped_seq_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, dropped_seq_) +
               sizeof(Impl_::type_));
}
V1Event::~V1Event() {
  // @@protoc_insertion_point(destructor:beewatch.V1Event)
  SharedDtor(*this);
}
inline void V1Event::SharedDtor(MessageLite& self) {
  V1Event& this_ = static_cast<V1Event&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.entry_id_.Destroy();
  this_._impl_.parent_entry_id_.Destroy();
  this_._impl_.target_path_.Destroy();
  this_._impl_.target_parent_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* V1Event::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) V1Event(arena);
}
constexpr auto V1Event::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(V1Event),
                                            alignof(V1Event));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull V1Event::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_V1Event_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &V1Event::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<V1Event>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &V1Event::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<V1Event>(), &V1Event::ByteSizeLong,
            &V1Event::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(V1Event, _impl_._cached_size_),
        false,
    },
    &V1Event::kDescriptorMethods,
    &descriptor_table_beewatch_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* V1Event::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 87, 2> V1Event::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::beewatch::V1Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string target_parent_id = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(V1Event, _impl_.target_parent_id_)}},
    // .beewatch.V1Event.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(V1Event, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(V1Event, _impl_.type_)}},
    // uint64 dropped_seq = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(V1Event, _impl_.dropped_seq_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(V1Event, _impl_.dropped_seq_)}},
    // uint64 missed_seq = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(V1Event, _impl_.missed_seq_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(V1Event, _impl_.missed_seq_)}},
    // string path = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(V1Event, _impl_.path_)}},
    // string entry_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(V1Event, _impl_.entry_id_)}},
    // string parent_entry_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(V1Event, _impl_.parent_entry_id_)}},
    // string target_path = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(V1Event, _impl_.target_path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .beewatch.V1Event.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(V1Event, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 dropped_seq = 2;
    {PROTOBUF_FIELD_OFFSET(V1Event, _impl_.dropped_seq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 missed_seq = 3;
    {PROTOBUF_FIELD_OFFSET(V1Event, _impl_.missed_seq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string path = 4;
    {PROTOBUF_FIELD_OFFSET(V1Event, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string entry_id = 5;
    {PROTOBUF_FIELD_OFFSET(V1Event, _impl_.entry_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parent_entry_id = 6;
    {PROTOBUF_FIELD_OFFSET(V1Event, _impl_.parent_entry_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_path = 7;
    {PROTOBUF_FIELD_OFFSET(V1Event, _impl_.target_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_parent_id = 8;
    {PROTOBUF_FIELD_OFFSET(V1Event, _impl_.target_parent_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\0\0\4\10\17\13\20\0\0\0\0\0\0\0"
    "beewatch.V1Event"
    "path"
    "entry_id"
    "parent_entry_id"
    "target_path"
    "target_parent_id"
  }},
};

PROTOBUF_NOINLINE void V1Event::Clear() {
// @@protoc_insertion_point(message_clear_start:beewatch.V1Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.entry_id_.ClearToEmpty();
  _impl_.parent_entry_id_.ClearToEmpty();
  _impl_.target_path_.ClearToEmpty();
  _impl_.target_parent_id_.ClearToEmpty();
  ::memset(&_impl_.dropped_seq_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.dropped_seq_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* V1Event::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const V1Event& this_ = static_cast<const V1Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* V1Event::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const V1Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:beewatch.V1Event)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .beewatch.V1Event.Type type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // uint64 dropped_seq = 2;
          if (this_._internal_dropped_seq() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_dropped_seq(), target);
          }

          // uint64 missed_seq = 3;
          if (this_._internal_missed_seq() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_missed_seq(), target);
          }

          // string path = 4;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V1Event.path");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string entry_id = 5;
          if (!this_._internal_entry_id().empty()) {
            const std::string& _s = this_._internal_entry_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V1Event.entry_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string parent_entry_id = 6;
          if (!this_._internal_parent_entry_id().empty()) {
            const std::string& _s = this_._internal_parent_entry_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V1Event.parent_entry_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string target_path = 7;
          if (!this_._internal_target_path().empty()) {
            const std::string& _s = this_._internal_target_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V1Event.target_path");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string target_parent_id = 8;
          if (!this_._internal_target_parent_id().empty()) {
            const std::string& _s = this_._internal_target_parent_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V1Event.target_parent_id");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:beewatch.V1Event)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t V1Event::ByteSizeLong(const MessageLite& base) {
          const V1Event& this_ = static_cast<const V1Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t V1Event::ByteSizeLong() const {
          const V1Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:beewatch.V1Event)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string path = 4;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // string entry_id = 5;
            if (!this_._internal_entry_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_entry_id());
            }
            // string parent_entry_id = 6;
            if (!this_._internal_parent_entry_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_parent_entry_id());
            }
            // string target_path = 7;
            if (!this_._internal_target_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_path());
            }
            // string target_parent_id = 8;
            if (!this_._internal_target_parent_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_parent_id());
            }
            // uint64 dropped_seq = 2;
            if (this_._internal_dropped_seq() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_dropped_seq());
            }
            // uint64 missed_seq = 3;
            if (this_._internal_missed_seq() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_missed_seq());
            }
            // .beewatch.V1Event.Type type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void V1Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<V1Event*>(&to_msg);
  auto& from = static_cast<const V1Event&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:beewatch.V1Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_entry_id().empty()) {
    _this->_internal_set_entry_id(from._internal_entry_id());
  }
  if (!from._internal_parent_entry_id().empty()) {
    _this->_internal_set_parent_entry_id(from._internal_parent_entry_id());
  }
  if (!from._internal_target_path().empty()) {
    _this->_internal_set_target_path(from._internal_target_path());
  }
  if (!from._internal_target_parent_id().empty()) {
    _this->_internal_set_target_parent_id(from._internal_target_parent_id());
  }
  if (from._internal_dropped_seq() != 0) {
    _this->_impl_.dropped_seq_ = from._impl_.dropped_seq_;
  }
  if (from._internal_missed_seq() != 0) {
    _this->_impl_.missed_seq_ = from._impl_.missed_seq_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void V1Event::CopyFrom(const V1Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:beewatch.V1Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void V1Event::InternalSwap(V1Event* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entry_id_, &other->_impl_.entry_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_entry_id_, &other->_impl_.parent_entry_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_path_, &other->_impl_.target_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_parent_id_, &other->_impl_.target_parent_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(V1Event, _impl_.type_)
      + sizeof(V1Event::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(V1Event, _impl_.dropped_seq_)>(
          reinterpret_cast<char*>(&_impl_.dropped_seq_),
          reinterpret_cast<char*>(&other->_impl_.dropped_seq_));
}

::google::protobuf::Metadata V1Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class V2Event::_Internal {
 public:
};

V2Event::V2Event(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:beewatch.V2Event)
}
inline PROTOBUF_NDEBUG_INLINE V2Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::beewatch::V2Event& from_msg)
      : path_(arena, from.path_),
        entry_id_(arena, from.entry_id_),
        parent_entry_id_(arena, from.parent_entry_id_),
        target_path_(arena, from.target_path_),
        target_parent_id_(arena, from.target_parent_id_),
        _cached_size_{0} {}

V2Event::V2Event(
    ::google::protobuf::Arena* arena,
    const V2Event& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  V2Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_links_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_links_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, num_links_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:beewatch.V2Event)
}
inline PROTOBUF_NDEBUG_INLINE V2Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_(arena),
        entry_id_(arena),
        parent_entry_id_(arena),
        target_path_(arena),
        target_parent_id_(arena),
        _cached_size_{0} {}

inline void V2Event::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_links_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, num_links_) +
               sizeof(Impl_::timestamp_));
}
V2Event::~V2Event() {
  // @@protoc_insertion_point(destructor:beewatch.V2Event)
  SharedDtor(*this);
}
inline void V2Event::SharedDtor(MessageLite& self) {
  V2Event& this_ = static_cast<V2Event&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.entry_id_.Destroy();
  this_._impl_.parent_entry_id_.Destroy();
  this_._impl_.target_path_.Destroy();
  this_._impl_.target_parent_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* V2Event::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) V2Event(arena);
}
constexpr auto V2Event::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(V2Event),
                                            alignof(V2Event));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull V2Event::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_V2Event_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &V2Event::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<V2Event>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &V2Event::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<V2Event>(), &V2Event::ByteSizeLong,
            &V2Event::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(V2Event, _impl_._cached_size_),
        false,
    },
    &V2Event::kDescriptorMethods,
    &descriptor_table_beewatch_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* V2Event::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 87, 2> V2Event::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::beewatch::V2Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .beewatch.V2Event.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(V2Event, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(V2Event, _impl_.type_)}},
    // uint64 num_links = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(V2Event, _impl_.num_links_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(V2Event, _impl_.num_links_)}},
    // string path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(V2Event, _impl_.path_)}},
    // string entry_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(V2Event, _impl_.entry_id_)}},
    // string parent_entry_id = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(V2Event, _impl_.parent_entry_id_)}},
    // string target_path = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(V2Event, _impl_.target_path_)}},
    // string target_parent_id = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(V2Event, _impl_.target_parent_id_)}},
    // uint32 msg_user_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(V2Event, _impl_.msg_user_id_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(V2Event, _impl_.msg_user_id_)}},
    // int64 timestamp = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(V2Event, _impl_.timestamp_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(V2Event, _impl_.timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .beewatch.V2Event.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(V2Event, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 num_links = 2;
    {PROTOBUF_FIELD_OFFSET(V2Event, _impl_.num_links_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string path = 3;
    {PROTOBUF_FIELD_OFFSET(V2Event, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string entry_id = 4;
    {PROTOBUF_FIELD_OFFSET(V2Event, _impl_.entry_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parent_entry_id = 5;
    {PROTOBUF_FIELD_OFFSET(V2Event, _impl_.parent_entry_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_path = 6;
    {PROTOBUF_FIELD_OFFSET(V2Event, _impl_.target_path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_parent_id = 7;
    {PROTOBUF_FIELD_OFFSET(V2Event, _impl_.target_parent_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 msg_user_id = 8;
    {PROTOBUF_FIELD_OFFSET(V2Event, _impl_.msg_user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int64 timestamp = 9;
    {PROTOBUF_FIELD_OFFSET(V2Event, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\20\0\0\4\10\17\13\20\0\0\0\0\0\0\0\0"
    "beewatch.V2Event"
    "path"
    "entry_id"
    "parent_entry_id"
    "target_path"
    "target_parent_id"
  }},
};

PROTOBUF_NOINLINE void V2Event::Clear() {
// @@protoc_insertion_point(message_clear_start:beewatch.V2Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.entry_id_.ClearToEmpty();
  _impl_.parent_entry_id_.ClearToEmpty();
  _impl_.target_path_.ClearToEmpty();
  _impl_.target_parent_id_.ClearToEmpty();
  ::memset(&_impl_.num_links_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.num_links_)) + sizeof(_impl_.timestamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* V2Event::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const V2Event& this_ = static_cast<const V2Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* V2Event::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const V2Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:beewatch.V2Event)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .beewatch.V2Event.Type type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // uint64 num_links = 2;
          if (this_._internal_num_links() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_num_links(), target);
          }

          // string path = 3;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V2Event.path");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string entry_id = 4;
          if (!this_._internal_entry_id().empty()) {
            const std::string& _s = this_._internal_entry_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V2Event.entry_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string parent_entry_id = 5;
          if (!this_._internal_parent_entry_id().empty()) {
            const std::string& _s = this_._internal_parent_entry_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V2Event.parent_entry_id");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string target_path = 6;
          if (!this_._internal_target_path().empty()) {
            const std::string& _s = this_._internal_target_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V2Event.target_path");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string target_parent_id = 7;
          if (!this_._internal_target_parent_id().empty()) {
            const std::string& _s = this_._internal_target_parent_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beewatch.V2Event.target_parent_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // uint32 msg_user_id = 8;
          if (this_._internal_msg_user_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_msg_user_id(), target);
          }

          // int64 timestamp = 9;
          if (this_._internal_timestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:beewatch.V2Event)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t V2Event::ByteSizeLong(const MessageLite& base) {
          const V2Event& this_ = static_cast<const V2Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t V2Event::ByteSizeLong() const {
          const V2Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:beewatch.V2Event)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string path = 3;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // string entry_id = 4;
            if (!this_._internal_entry_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_entry_id());
            }
            // string parent_entry_id = 5;
            if (!this_._internal_parent_entry_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_parent_entry_id());
            }
            // string target_path = 6;
            if (!this_._internal_target_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_path());
            }
            // string target_parent_id = 7;
            if (!this_._internal_target_parent_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_target_parent_id());
            }
            // uint64 num_links = 2;
            if (this_._internal_num_links() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_num_links());
            }
            // .beewatch.V2Event.Type type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // uint32 msg_user_id = 8;
            if (this_._internal_msg_user_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_msg_user_id());
            }
            // int64 timestamp = 9;
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void V2Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<V2Event*>(&to_msg);
  auto& from = static_cast<const V2Event&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:beewatch.V2Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_entry_id().empty()) {
    _this->_internal_set_entry_id(from._internal_entry_id());
  }
  if (!from._internal_parent_entry_id().empty()) {
    _this->_internal_set_parent_entry_id(from._internal_parent_entry_id());
  }
  if (!from._internal_target_path().empty()) {
    _this->_internal_set_target_path(from._internal_target_path());
  }
  if (!from._internal_target_parent_id().empty()) {
    _this->_internal_set_target_parent_id(from._internal_target_parent_id());
  }
  if (from._internal_num_links() != 0) {
    _this->_impl_.num_links_ = from._impl_.num_links_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_msg_user_id() != 0) {
    _this->_impl_.msg_user_id_ = from._impl_.msg_user_id_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void V2Event::CopyFrom(const V2Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:beewatch.V2Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void V2Event::InternalSwap(V2Event* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entry_id_, &other->_impl_.entry_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_entry_id_, &other->_impl_.parent_entry_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_path_, &other->_impl_.target_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_parent_id_, &other->_impl_.target_parent_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(V2Event, _impl_.timestamp_)
      + sizeof(V2Event::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(V2Event, _impl_.num_links_)>(
          reinterpret_cast<char*>(&_impl_.num_links_),
          reinterpret_cast<char*>(&other->_impl_.num_links_));
}

::google::protobuf::Metadata V2Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Response::_Internal {
 public:
};

Response::Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:beewatch.Response)
}
Response::Response(
    ::google::protobuf::Arena* arena, const Response& from)
    : Response(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, completed_seq_),
           0,
           offsetof(Impl_, shutting_down_) -
               offsetof(Impl_, completed_seq_) +
               sizeof(Impl_::shutting_down_));
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:beewatch.Response)
  SharedDtor(*this);
}
inline void Response::SharedDtor(MessageLite& self) {
  Response& this_ = static_cast<Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Response(arena);
}
constexpr auto Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Response),
                                            alignof(Response));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Response>(), &Response::ByteSizeLong,
            &Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Response, _impl_._cached_size_),
        false,
    },
    &Response::kDescriptorMethods,
    &descriptor_table_beewatch_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::beewatch::Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool shutting_down = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Response, _impl_.shutting_down_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.shutting_down_)}},
    // uint64 completed_seq = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Response, _impl_.completed_seq_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Response, _impl_.completed_seq_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 completed_seq = 1;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.completed_seq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool shutting_down = 2;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.shutting_down_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:beewatch.Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.completed_seq_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.shutting_down_) -
      reinterpret_cast<char*>(&_impl_.completed_seq_)) + sizeof(_impl_.shutting_down_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Response& this_ = static_cast<const Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:beewatch.Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 completed_seq = 1;
          if (this_._internal_completed_seq() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_completed_seq(), target);
          }

          // bool shutting_down = 2;
          if (this_._internal_shutting_down() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_shutting_down(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:beewatch.Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Response::ByteSizeLong(const MessageLite& base) {
          const Response& this_ = static_cast<const Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Response::ByteSizeLong() const {
          const Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:beewatch.Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 completed_seq = 1;
            if (this_._internal_completed_seq() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_completed_seq());
            }
            // bool shutting_down = 2;
            if (this_._internal_shutting_down() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:beewatch.Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_completed_seq() != 0) {
    _this->_impl_.completed_seq_ = from._impl_.completed_seq_;
  }
  if (from._internal_shutting_down() != 0) {
    _this->_impl_.shutting_down_ = from._impl_.shutting_down_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:beewatch.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Response::InternalSwap(Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Response, _impl_.shutting_down_)
      + sizeof(Response::_impl_.shutting_down_)
      - PROTOBUF_FIELD_OFFSET(Response, _impl_.completed_seq_)>(
          reinterpret_cast<char*>(&_impl_.completed_seq_),
          reinterpret_cast<char*>(&other->_impl_.completed_seq_));
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace beewatch
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_beewatch_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

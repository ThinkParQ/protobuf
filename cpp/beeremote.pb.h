// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: beeremote.proto
// Protobuf C++ Version: 5.29.2

#ifndef beeremote_2eproto_2epb_2eh
#define beeremote_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "flex.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_beeremote_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_beeremote_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_beeremote_2eproto;
namespace beeremote {
class GetJobsRequest;
struct GetJobsRequestDefaultTypeInternal;
extern GetJobsRequestDefaultTypeInternal _GetJobsRequest_default_instance_;
class GetJobsRequest_QueryIdAndPath;
struct GetJobsRequest_QueryIdAndPathDefaultTypeInternal;
extern GetJobsRequest_QueryIdAndPathDefaultTypeInternal _GetJobsRequest_QueryIdAndPath_default_instance_;
class GetJobsResponse;
struct GetJobsResponseDefaultTypeInternal;
extern GetJobsResponseDefaultTypeInternal _GetJobsResponse_default_instance_;
class GetRSTConfigRequest;
struct GetRSTConfigRequestDefaultTypeInternal;
extern GetRSTConfigRequestDefaultTypeInternal _GetRSTConfigRequest_default_instance_;
class GetRSTConfigResponse;
struct GetRSTConfigResponseDefaultTypeInternal;
extern GetRSTConfigResponseDefaultTypeInternal _GetRSTConfigResponse_default_instance_;
class Job;
struct JobDefaultTypeInternal;
extern JobDefaultTypeInternal _Job_default_instance_;
class JobRequest;
struct JobRequestDefaultTypeInternal;
extern JobRequestDefaultTypeInternal _JobRequest_default_instance_;
class JobResult;
struct JobResultDefaultTypeInternal;
extern JobResultDefaultTypeInternal _JobResult_default_instance_;
class JobResult_WorkResult;
struct JobResult_WorkResultDefaultTypeInternal;
extern JobResult_WorkResultDefaultTypeInternal _JobResult_WorkResult_default_instance_;
class Job_Status;
struct Job_StatusDefaultTypeInternal;
extern Job_StatusDefaultTypeInternal _Job_Status_default_instance_;
class SubmitJobRequest;
struct SubmitJobRequestDefaultTypeInternal;
extern SubmitJobRequestDefaultTypeInternal _SubmitJobRequest_default_instance_;
class SubmitJobResponse;
struct SubmitJobResponseDefaultTypeInternal;
extern SubmitJobResponseDefaultTypeInternal _SubmitJobResponse_default_instance_;
class UpdateJobsRequest;
struct UpdateJobsRequestDefaultTypeInternal;
extern UpdateJobsRequestDefaultTypeInternal _UpdateJobsRequest_default_instance_;
class UpdateJobsRequest_RemoteTargetsEntry_DoNotUse;
struct UpdateJobsRequest_RemoteTargetsEntry_DoNotUseDefaultTypeInternal;
extern UpdateJobsRequest_RemoteTargetsEntry_DoNotUseDefaultTypeInternal _UpdateJobsRequest_RemoteTargetsEntry_DoNotUse_default_instance_;
class UpdateJobsResponse;
struct UpdateJobsResponseDefaultTypeInternal;
extern UpdateJobsResponseDefaultTypeInternal _UpdateJobsResponse_default_instance_;
class UpdatePathsRequest;
struct UpdatePathsRequestDefaultTypeInternal;
extern UpdatePathsRequestDefaultTypeInternal _UpdatePathsRequest_default_instance_;
class UpdatePathsResponse;
struct UpdatePathsResponseDefaultTypeInternal;
extern UpdatePathsResponseDefaultTypeInternal _UpdatePathsResponse_default_instance_;
class UpdateWorkRequest;
struct UpdateWorkRequestDefaultTypeInternal;
extern UpdateWorkRequestDefaultTypeInternal _UpdateWorkRequest_default_instance_;
class UpdateWorkResponse;
struct UpdateWorkResponseDefaultTypeInternal;
extern UpdateWorkResponseDefaultTypeInternal _UpdateWorkResponse_default_instance_;
}  // namespace beeremote
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace beeremote {
enum Job_State : int {
  Job_State_UNSPECIFIED = 0,
  Job_State_UNKNOWN = 1,
  Job_State_UNASSIGNED = 2,
  Job_State_SCHEDULED = 3,
  Job_State_RUNNING = 4,
  Job_State_ERROR = 6,
  Job_State_FAILED = 7,
  Job_State_CANCELLED = 8,
  Job_State_COMPLETED = 9,
  Job_State_Job_State_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Job_State_Job_State_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Job_State_IsValid(int value);
extern const uint32_t Job_State_internal_data_[];
constexpr Job_State Job_State_State_MIN = static_cast<Job_State>(0);
constexpr Job_State Job_State_State_MAX = static_cast<Job_State>(9);
constexpr int Job_State_State_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
Job_State_descriptor();
template <typename T>
const std::string& Job_State_Name(T value) {
  static_assert(std::is_same<T, Job_State>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to State_Name().");
  return Job_State_Name(static_cast<Job_State>(value));
}
template <>
inline const std::string& Job_State_Name(Job_State value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Job_State_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool Job_State_Parse(absl::string_view name, Job_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Job_State>(
      Job_State_descriptor(), name, value);
}
enum UpdateJobsRequest_NewState : int {
  UpdateJobsRequest_NewState_UNSPECIFIED = 0,
  UpdateJobsRequest_NewState_CANCELLED = 1,
  UpdateJobsRequest_NewState_DELETED = 2,
  UpdateJobsRequest_NewState_UpdateJobsRequest_NewState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UpdateJobsRequest_NewState_UpdateJobsRequest_NewState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UpdateJobsRequest_NewState_IsValid(int value);
extern const uint32_t UpdateJobsRequest_NewState_internal_data_[];
constexpr UpdateJobsRequest_NewState UpdateJobsRequest_NewState_NewState_MIN = static_cast<UpdateJobsRequest_NewState>(0);
constexpr UpdateJobsRequest_NewState UpdateJobsRequest_NewState_NewState_MAX = static_cast<UpdateJobsRequest_NewState>(2);
constexpr int UpdateJobsRequest_NewState_NewState_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
UpdateJobsRequest_NewState_descriptor();
template <typename T>
const std::string& UpdateJobsRequest_NewState_Name(T value) {
  static_assert(std::is_same<T, UpdateJobsRequest_NewState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NewState_Name().");
  return UpdateJobsRequest_NewState_Name(static_cast<UpdateJobsRequest_NewState>(value));
}
template <>
inline const std::string& UpdateJobsRequest_NewState_Name(UpdateJobsRequest_NewState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UpdateJobsRequest_NewState_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool UpdateJobsRequest_NewState_Parse(absl::string_view name, UpdateJobsRequest_NewState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateJobsRequest_NewState>(
      UpdateJobsRequest_NewState_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpdateWorkResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:beeremote.UpdateWorkResponse) */ {
 public:
  inline UpdateWorkResponse() : UpdateWorkResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateWorkResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateWorkResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateWorkResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateWorkResponse(const UpdateWorkResponse& from) : UpdateWorkResponse(nullptr, from) {}
  inline UpdateWorkResponse(UpdateWorkResponse&& from) noexcept
      : UpdateWorkResponse(nullptr, std::move(from)) {}
  inline UpdateWorkResponse& operator=(const UpdateWorkResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateWorkResponse& operator=(UpdateWorkResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateWorkResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateWorkResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateWorkResponse*>(
        &_UpdateWorkResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(UpdateWorkResponse& a, UpdateWorkResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateWorkResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateWorkResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateWorkResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<UpdateWorkResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UpdateWorkResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UpdateWorkResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.UpdateWorkResponse"; }

 protected:
  explicit UpdateWorkResponse(::google::protobuf::Arena* arena);
  UpdateWorkResponse(::google::protobuf::Arena* arena, const UpdateWorkResponse& from);
  UpdateWorkResponse(::google::protobuf::Arena* arena, UpdateWorkResponse&& from) noexcept
      : UpdateWorkResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:beeremote.UpdateWorkResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateWorkResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class UpdateJobsRequest_RemoteTargetsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ::uint32_t, bool,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_BOOL> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ::uint32_t, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>;
  UpdateJobsRequest_RemoteTargetsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateJobsRequest_RemoteTargetsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit UpdateJobsRequest_RemoteTargetsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const UpdateJobsRequest_RemoteTargetsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const UpdateJobsRequest_RemoteTargetsEntry_DoNotUse*>(
        &_UpdateJobsRequest_RemoteTargetsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_beeremote_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class GetRSTConfigRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:beeremote.GetRSTConfigRequest) */ {
 public:
  inline GetRSTConfigRequest() : GetRSTConfigRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRSTConfigRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRSTConfigRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRSTConfigRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRSTConfigRequest(const GetRSTConfigRequest& from) : GetRSTConfigRequest(nullptr, from) {}
  inline GetRSTConfigRequest(GetRSTConfigRequest&& from) noexcept
      : GetRSTConfigRequest(nullptr, std::move(from)) {}
  inline GetRSTConfigRequest& operator=(const GetRSTConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRSTConfigRequest& operator=(GetRSTConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRSTConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRSTConfigRequest* internal_default_instance() {
    return reinterpret_cast<const GetRSTConfigRequest*>(
        &_GetRSTConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetRSTConfigRequest& a, GetRSTConfigRequest& b) { a.Swap(&b); }
  inline void Swap(GetRSTConfigRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRSTConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRSTConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetRSTConfigRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetRSTConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetRSTConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.GetRSTConfigRequest"; }

 protected:
  explicit GetRSTConfigRequest(::google::protobuf::Arena* arena);
  GetRSTConfigRequest(::google::protobuf::Arena* arena, const GetRSTConfigRequest& from);
  GetRSTConfigRequest(::google::protobuf::Arena* arena, GetRSTConfigRequest&& from) noexcept
      : GetRSTConfigRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:beeremote.GetRSTConfigRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRSTConfigRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class GetJobsRequest_QueryIdAndPath final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.GetJobsRequest.QueryIdAndPath) */ {
 public:
  inline GetJobsRequest_QueryIdAndPath() : GetJobsRequest_QueryIdAndPath(nullptr) {}
  ~GetJobsRequest_QueryIdAndPath() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetJobsRequest_QueryIdAndPath* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetJobsRequest_QueryIdAndPath));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetJobsRequest_QueryIdAndPath(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetJobsRequest_QueryIdAndPath(const GetJobsRequest_QueryIdAndPath& from) : GetJobsRequest_QueryIdAndPath(nullptr, from) {}
  inline GetJobsRequest_QueryIdAndPath(GetJobsRequest_QueryIdAndPath&& from) noexcept
      : GetJobsRequest_QueryIdAndPath(nullptr, std::move(from)) {}
  inline GetJobsRequest_QueryIdAndPath& operator=(const GetJobsRequest_QueryIdAndPath& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetJobsRequest_QueryIdAndPath& operator=(GetJobsRequest_QueryIdAndPath&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetJobsRequest_QueryIdAndPath& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetJobsRequest_QueryIdAndPath* internal_default_instance() {
    return reinterpret_cast<const GetJobsRequest_QueryIdAndPath*>(
        &_GetJobsRequest_QueryIdAndPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetJobsRequest_QueryIdAndPath& a, GetJobsRequest_QueryIdAndPath& b) { a.Swap(&b); }
  inline void Swap(GetJobsRequest_QueryIdAndPath* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetJobsRequest_QueryIdAndPath* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetJobsRequest_QueryIdAndPath* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetJobsRequest_QueryIdAndPath>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetJobsRequest_QueryIdAndPath& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetJobsRequest_QueryIdAndPath& from) { GetJobsRequest_QueryIdAndPath::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetJobsRequest_QueryIdAndPath* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.GetJobsRequest.QueryIdAndPath"; }

 protected:
  explicit GetJobsRequest_QueryIdAndPath(::google::protobuf::Arena* arena);
  GetJobsRequest_QueryIdAndPath(::google::protobuf::Arena* arena, const GetJobsRequest_QueryIdAndPath& from);
  GetJobsRequest_QueryIdAndPath(::google::protobuf::Arena* arena, GetJobsRequest_QueryIdAndPath&& from) noexcept
      : GetJobsRequest_QueryIdAndPath(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJobIdFieldNumber = 1,
    kPathFieldNumber = 2,
  };
  // string job_id = 1;
  void clear_job_id() ;
  const std::string& job_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_job_id(Arg_&& arg, Args_... args);
  std::string* mutable_job_id();
  PROTOBUF_NODISCARD std::string* release_job_id();
  void set_allocated_job_id(std::string* value);

  private:
  const std::string& _internal_job_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_job_id(
      const std::string& value);
  std::string* _internal_mutable_job_id();

  public:
  // string path = 2;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.GetJobsRequest.QueryIdAndPath)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetJobsRequest_QueryIdAndPath& from_msg);
    ::google::protobuf::internal::ArenaStringPtr job_id_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class UpdateJobsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.UpdateJobsRequest) */ {
 public:
  inline UpdateJobsRequest() : UpdateJobsRequest(nullptr) {}
  ~UpdateJobsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateJobsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateJobsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateJobsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateJobsRequest(const UpdateJobsRequest& from) : UpdateJobsRequest(nullptr, from) {}
  inline UpdateJobsRequest(UpdateJobsRequest&& from) noexcept
      : UpdateJobsRequest(nullptr, std::move(from)) {}
  inline UpdateJobsRequest& operator=(const UpdateJobsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateJobsRequest& operator=(UpdateJobsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateJobsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateJobsRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateJobsRequest*>(
        &_UpdateJobsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(UpdateJobsRequest& a, UpdateJobsRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateJobsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateJobsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateJobsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateJobsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateJobsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateJobsRequest& from) { UpdateJobsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateJobsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.UpdateJobsRequest"; }

 protected:
  explicit UpdateJobsRequest(::google::protobuf::Arena* arena);
  UpdateJobsRequest(::google::protobuf::Arena* arena, const UpdateJobsRequest& from);
  UpdateJobsRequest(::google::protobuf::Arena* arena, UpdateJobsRequest&& from) noexcept
      : UpdateJobsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using NewState = UpdateJobsRequest_NewState;
  static constexpr NewState UNSPECIFIED = UpdateJobsRequest_NewState_UNSPECIFIED;
  static constexpr NewState CANCELLED = UpdateJobsRequest_NewState_CANCELLED;
  static constexpr NewState DELETED = UpdateJobsRequest_NewState_DELETED;
  static inline bool NewState_IsValid(int value) {
    return UpdateJobsRequest_NewState_IsValid(value);
  }
  static constexpr NewState NewState_MIN = UpdateJobsRequest_NewState_NewState_MIN;
  static constexpr NewState NewState_MAX = UpdateJobsRequest_NewState_NewState_MAX;
  static constexpr int NewState_ARRAYSIZE = UpdateJobsRequest_NewState_NewState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* NewState_descriptor() {
    return UpdateJobsRequest_NewState_descriptor();
  }
  template <typename T>
  static inline const std::string& NewState_Name(T value) {
    return UpdateJobsRequest_NewState_Name(value);
  }
  static inline bool NewState_Parse(absl::string_view name, NewState* value) {
    return UpdateJobsRequest_NewState_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRemoteTargetsFieldNumber = 3,
    kPathFieldNumber = 1,
    kJobIdFieldNumber = 2,
    kForceUpdateFieldNumber = 4,
    kNewStateFieldNumber = 10,
  };
  // map<uint32, bool> remote_targets = 3;
  int remote_targets_size() const;
  private:
  int _internal_remote_targets_size() const;

  public:
  void clear_remote_targets() ;
  const ::google::protobuf::Map<::uint32_t, bool>& remote_targets() const;
  ::google::protobuf::Map<::uint32_t, bool>* mutable_remote_targets();

  private:
  const ::google::protobuf::Map<::uint32_t, bool>& _internal_remote_targets() const;
  ::google::protobuf::Map<::uint32_t, bool>* _internal_mutable_remote_targets();

  public:
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // optional string job_id = 2;
  bool has_job_id() const;
  void clear_job_id() ;
  const std::string& job_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_job_id(Arg_&& arg, Args_... args);
  std::string* mutable_job_id();
  PROTOBUF_NODISCARD std::string* release_job_id();
  void set_allocated_job_id(std::string* value);

  private:
  const std::string& _internal_job_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_job_id(
      const std::string& value);
  std::string* _internal_mutable_job_id();

  public:
  // bool force_update = 4;
  void clear_force_update() ;
  bool force_update() const;
  void set_force_update(bool value);

  private:
  bool _internal_force_update() const;
  void _internal_set_force_update(bool value);

  public:
  // .beeremote.UpdateJobsRequest.NewState new_state = 10;
  void clear_new_state() ;
  ::beeremote::UpdateJobsRequest_NewState new_state() const;
  void set_new_state(::beeremote::UpdateJobsRequest_NewState value);

  private:
  ::beeremote::UpdateJobsRequest_NewState _internal_new_state() const;
  void _internal_set_new_state(::beeremote::UpdateJobsRequest_NewState value);

  public:
  // @@protoc_insertion_point(class_scope:beeremote.UpdateJobsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateJobsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<UpdateJobsRequest_RemoteTargetsEntry_DoNotUse, ::uint32_t, bool,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>
        remote_targets_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::ArenaStringPtr job_id_;
    bool force_update_;
    int new_state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class JobRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.JobRequest) */ {
 public:
  inline JobRequest() : JobRequest(nullptr) {}
  ~JobRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JobRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JobRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JobRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline JobRequest(const JobRequest& from) : JobRequest(nullptr, from) {}
  inline JobRequest(JobRequest&& from) noexcept
      : JobRequest(nullptr, std::move(from)) {}
  inline JobRequest& operator=(const JobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobRequest& operator=(JobRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JobRequest& default_instance() {
    return *internal_default_instance();
  }
  enum TypeCase {
    kSync = 10,
    kMock = 11,
    TYPE_NOT_SET = 0,
  };
  static inline const JobRequest* internal_default_instance() {
    return reinterpret_cast<const JobRequest*>(
        &_JobRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(JobRequest& a, JobRequest& b) { a.Swap(&b); }
  inline void Swap(JobRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JobRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JobRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JobRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JobRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JobRequest& from) { JobRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JobRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.JobRequest"; }

 protected:
  explicit JobRequest(::google::protobuf::Arena* arena);
  JobRequest(::google::protobuf::Arena* arena, const JobRequest& from);
  JobRequest(::google::protobuf::Arena* arena, JobRequest&& from) noexcept
      : JobRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 1,
    kNameFieldNumber = 2,
    kPriorityFieldNumber = 3,
    kRemoteStorageTargetFieldNumber = 4,
    kSyncFieldNumber = 10,
    kMockFieldNumber = 11,
  };
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // int32 priority = 3;
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // uint32 remote_storage_target = 4;
  void clear_remote_storage_target() ;
  ::uint32_t remote_storage_target() const;
  void set_remote_storage_target(::uint32_t value);

  private:
  ::uint32_t _internal_remote_storage_target() const;
  void _internal_set_remote_storage_target(::uint32_t value);

  public:
  // .flex.SyncJob sync = 10;
  bool has_sync() const;
  private:
  bool _internal_has_sync() const;

  public:
  void clear_sync() ;
  const ::flex::SyncJob& sync() const;
  PROTOBUF_NODISCARD ::flex::SyncJob* release_sync();
  ::flex::SyncJob* mutable_sync();
  void set_allocated_sync(::flex::SyncJob* value);
  void unsafe_arena_set_allocated_sync(::flex::SyncJob* value);
  ::flex::SyncJob* unsafe_arena_release_sync();

  private:
  const ::flex::SyncJob& _internal_sync() const;
  ::flex::SyncJob* _internal_mutable_sync();

  public:
  // .flex.MockJob mock = 11;
  bool has_mock() const;
  private:
  bool _internal_has_mock() const;

  public:
  void clear_mock() ;
  const ::flex::MockJob& mock() const;
  PROTOBUF_NODISCARD ::flex::MockJob* release_mock();
  ::flex::MockJob* mutable_mock();
  void set_allocated_mock(::flex::MockJob* value);
  void unsafe_arena_set_allocated_mock(::flex::MockJob* value);
  ::flex::MockJob* unsafe_arena_release_mock();

  private:
  const ::flex::MockJob& _internal_mock() const;
  ::flex::MockJob* _internal_mutable_mock();

  public:
  void clear_type();
  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:beeremote.JobRequest)
 private:
  class _Internal;
  void set_has_sync();
  void set_has_mock();
  inline bool has_type() const;
  inline void clear_has_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 2,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JobRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::int32_t priority_;
    ::uint32_t remote_storage_target_;
    union TypeUnion {
      constexpr TypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::flex::SyncJob* sync_;
      ::flex::MockJob* mock_;
    } type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class Job_Status final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.Job.Status) */ {
 public:
  inline Job_Status() : Job_Status(nullptr) {}
  ~Job_Status() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Job_Status* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Job_Status));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Job_Status(
      ::google::protobuf::internal::ConstantInitialized);

  inline Job_Status(const Job_Status& from) : Job_Status(nullptr, from) {}
  inline Job_Status(Job_Status&& from) noexcept
      : Job_Status(nullptr, std::move(from)) {}
  inline Job_Status& operator=(const Job_Status& from) {
    CopyFrom(from);
    return *this;
  }
  inline Job_Status& operator=(Job_Status&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Job_Status& default_instance() {
    return *internal_default_instance();
  }
  static inline const Job_Status* internal_default_instance() {
    return reinterpret_cast<const Job_Status*>(
        &_Job_Status_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Job_Status& a, Job_Status& b) { a.Swap(&b); }
  inline void Swap(Job_Status* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Job_Status* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Job_Status* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Job_Status>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Job_Status& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Job_Status& from) { Job_Status::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Job_Status* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.Job.Status"; }

 protected:
  explicit Job_Status(::google::protobuf::Arena* arena);
  Job_Status(::google::protobuf::Arena* arena, const Job_Status& from);
  Job_Status(::google::protobuf::Arena* arena, Job_Status&& from) noexcept
      : Job_Status(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kUpdatedFieldNumber = 3,
    kStateFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .google.protobuf.Timestamp updated = 3;
  bool has_updated() const;
  void clear_updated() ;
  const ::google::protobuf::Timestamp& updated() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated();
  ::google::protobuf::Timestamp* mutable_updated();
  void set_allocated_updated(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated();

  private:
  const ::google::protobuf::Timestamp& _internal_updated() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated();

  public:
  // .beeremote.Job.State state = 1;
  void clear_state() ;
  ::beeremote::Job_State state() const;
  void set_state(::beeremote::Job_State value);

  private:
  ::beeremote::Job_State _internal_state() const;
  void _internal_set_state(::beeremote::Job_State value);

  public:
  // @@protoc_insertion_point(class_scope:beeremote.Job.Status)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      36, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Job_Status& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Timestamp* updated_;
    int state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class GetJobsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.GetJobsRequest) */ {
 public:
  inline GetJobsRequest() : GetJobsRequest(nullptr) {}
  ~GetJobsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetJobsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetJobsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetJobsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetJobsRequest(const GetJobsRequest& from) : GetJobsRequest(nullptr, from) {}
  inline GetJobsRequest(GetJobsRequest&& from) noexcept
      : GetJobsRequest(nullptr, std::move(from)) {}
  inline GetJobsRequest& operator=(const GetJobsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetJobsRequest& operator=(GetJobsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetJobsRequest& default_instance() {
    return *internal_default_instance();
  }
  enum QueryCase {
    kByJobIdAndPath = 1,
    kByExactPath = 2,
    kByPathPrefix = 3,
    QUERY_NOT_SET = 0,
  };
  static inline const GetJobsRequest* internal_default_instance() {
    return reinterpret_cast<const GetJobsRequest*>(
        &_GetJobsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(GetJobsRequest& a, GetJobsRequest& b) { a.Swap(&b); }
  inline void Swap(GetJobsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetJobsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetJobsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetJobsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetJobsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetJobsRequest& from) { GetJobsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetJobsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.GetJobsRequest"; }

 protected:
  explicit GetJobsRequest(::google::protobuf::Arena* arena);
  GetJobsRequest(::google::protobuf::Arena* arena, const GetJobsRequest& from);
  GetJobsRequest(::google::protobuf::Arena* arena, GetJobsRequest&& from) noexcept
      : GetJobsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using QueryIdAndPath = GetJobsRequest_QueryIdAndPath;

  // accessors -------------------------------------------------------
  enum : int {
    kIncludeWorkRequestsFieldNumber = 4,
    kIncludeWorkResultsFieldNumber = 5,
    kUpdateWorkResultsFieldNumber = 6,
    kByJobIdAndPathFieldNumber = 1,
    kByExactPathFieldNumber = 2,
    kByPathPrefixFieldNumber = 3,
  };
  // bool include_work_requests = 4;
  void clear_include_work_requests() ;
  bool include_work_requests() const;
  void set_include_work_requests(bool value);

  private:
  bool _internal_include_work_requests() const;
  void _internal_set_include_work_requests(bool value);

  public:
  // bool include_work_results = 5;
  void clear_include_work_results() ;
  bool include_work_results() const;
  void set_include_work_results(bool value);

  private:
  bool _internal_include_work_results() const;
  void _internal_set_include_work_results(bool value);

  public:
  // bool update_work_results = 6;
  void clear_update_work_results() ;
  bool update_work_results() const;
  void set_update_work_results(bool value);

  private:
  bool _internal_update_work_results() const;
  void _internal_set_update_work_results(bool value);

  public:
  // .beeremote.GetJobsRequest.QueryIdAndPath by_job_id_and_path = 1;
  bool has_by_job_id_and_path() const;
  private:
  bool _internal_has_by_job_id_and_path() const;

  public:
  void clear_by_job_id_and_path() ;
  const ::beeremote::GetJobsRequest_QueryIdAndPath& by_job_id_and_path() const;
  PROTOBUF_NODISCARD ::beeremote::GetJobsRequest_QueryIdAndPath* release_by_job_id_and_path();
  ::beeremote::GetJobsRequest_QueryIdAndPath* mutable_by_job_id_and_path();
  void set_allocated_by_job_id_and_path(::beeremote::GetJobsRequest_QueryIdAndPath* value);
  void unsafe_arena_set_allocated_by_job_id_and_path(::beeremote::GetJobsRequest_QueryIdAndPath* value);
  ::beeremote::GetJobsRequest_QueryIdAndPath* unsafe_arena_release_by_job_id_and_path();

  private:
  const ::beeremote::GetJobsRequest_QueryIdAndPath& _internal_by_job_id_and_path() const;
  ::beeremote::GetJobsRequest_QueryIdAndPath* _internal_mutable_by_job_id_and_path();

  public:
  // string by_exact_path = 2;
  bool has_by_exact_path() const;
  void clear_by_exact_path() ;
  const std::string& by_exact_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_by_exact_path(Arg_&& arg, Args_... args);
  std::string* mutable_by_exact_path();
  PROTOBUF_NODISCARD std::string* release_by_exact_path();
  void set_allocated_by_exact_path(std::string* value);

  private:
  const std::string& _internal_by_exact_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_by_exact_path(
      const std::string& value);
  std::string* _internal_mutable_by_exact_path();

  public:
  // string by_path_prefix = 3;
  bool has_by_path_prefix() const;
  void clear_by_path_prefix() ;
  const std::string& by_path_prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_by_path_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_by_path_prefix();
  PROTOBUF_NODISCARD std::string* release_by_path_prefix();
  void set_allocated_by_path_prefix(std::string* value);

  private:
  const std::string& _internal_by_path_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_by_path_prefix(
      const std::string& value);
  std::string* _internal_mutable_by_path_prefix();

  public:
  void clear_query();
  QueryCase query_case() const;
  // @@protoc_insertion_point(class_scope:beeremote.GetJobsRequest)
 private:
  class _Internal;
  void set_has_by_job_id_and_path();
  void set_has_by_exact_path();
  void set_has_by_path_prefix();
  inline bool has_query() const;
  inline void clear_has_query();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 6, 1,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetJobsRequest& from_msg);
    bool include_work_requests_;
    bool include_work_results_;
    bool update_work_results_;
    union QueryUnion {
      constexpr QueryUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::beeremote::GetJobsRequest_QueryIdAndPath* by_job_id_and_path_;
      ::google::protobuf::internal::ArenaStringPtr by_exact_path_;
      ::google::protobuf::internal::ArenaStringPtr by_path_prefix_;
    } query_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class UpdateWorkRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.UpdateWorkRequest) */ {
 public:
  inline UpdateWorkRequest() : UpdateWorkRequest(nullptr) {}
  ~UpdateWorkRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateWorkRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateWorkRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateWorkRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateWorkRequest(const UpdateWorkRequest& from) : UpdateWorkRequest(nullptr, from) {}
  inline UpdateWorkRequest(UpdateWorkRequest&& from) noexcept
      : UpdateWorkRequest(nullptr, std::move(from)) {}
  inline UpdateWorkRequest& operator=(const UpdateWorkRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateWorkRequest& operator=(UpdateWorkRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateWorkRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateWorkRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateWorkRequest*>(
        &_UpdateWorkRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(UpdateWorkRequest& a, UpdateWorkRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateWorkRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateWorkRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateWorkRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateWorkRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateWorkRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateWorkRequest& from) { UpdateWorkRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateWorkRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.UpdateWorkRequest"; }

 protected:
  explicit UpdateWorkRequest(::google::protobuf::Arena* arena);
  UpdateWorkRequest(::google::protobuf::Arena* arena, const UpdateWorkRequest& from);
  UpdateWorkRequest(::google::protobuf::Arena* arena, UpdateWorkRequest&& from) noexcept
      : UpdateWorkRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWorkFieldNumber = 1,
  };
  // .flex.Work work = 1;
  bool has_work() const;
  void clear_work() ;
  const ::flex::Work& work() const;
  PROTOBUF_NODISCARD ::flex::Work* release_work();
  ::flex::Work* mutable_work();
  void set_allocated_work(::flex::Work* value);
  void unsafe_arena_set_allocated_work(::flex::Work* value);
  ::flex::Work* unsafe_arena_release_work();

  private:
  const ::flex::Work& _internal_work() const;
  ::flex::Work* _internal_mutable_work();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.UpdateWorkRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateWorkRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::flex::Work* work_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class UpdatePathsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.UpdatePathsRequest) */ {
 public:
  inline UpdatePathsRequest() : UpdatePathsRequest(nullptr) {}
  ~UpdatePathsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdatePathsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdatePathsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdatePathsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdatePathsRequest(const UpdatePathsRequest& from) : UpdatePathsRequest(nullptr, from) {}
  inline UpdatePathsRequest(UpdatePathsRequest&& from) noexcept
      : UpdatePathsRequest(nullptr, std::move(from)) {}
  inline UpdatePathsRequest& operator=(const UpdatePathsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdatePathsRequest& operator=(UpdatePathsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdatePathsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdatePathsRequest* internal_default_instance() {
    return reinterpret_cast<const UpdatePathsRequest*>(
        &_UpdatePathsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(UpdatePathsRequest& a, UpdatePathsRequest& b) { a.Swap(&b); }
  inline void Swap(UpdatePathsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdatePathsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdatePathsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdatePathsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdatePathsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdatePathsRequest& from) { UpdatePathsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdatePathsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.UpdatePathsRequest"; }

 protected:
  explicit UpdatePathsRequest(::google::protobuf::Arena* arena);
  UpdatePathsRequest(::google::protobuf::Arena* arena, const UpdatePathsRequest& from);
  UpdatePathsRequest(::google::protobuf::Arena* arena, UpdatePathsRequest&& from) noexcept
      : UpdatePathsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathPrefixFieldNumber = 1,
    kRequestedUpdateFieldNumber = 2,
  };
  // string path_prefix = 1;
  void clear_path_prefix() ;
  const std::string& path_prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_path_prefix();
  PROTOBUF_NODISCARD std::string* release_path_prefix();
  void set_allocated_path_prefix(std::string* value);

  private:
  const std::string& _internal_path_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path_prefix(
      const std::string& value);
  std::string* _internal_mutable_path_prefix();

  public:
  // .beeremote.UpdateJobsRequest requested_update = 2;
  bool has_requested_update() const;
  void clear_requested_update() ;
  const ::beeremote::UpdateJobsRequest& requested_update() const;
  PROTOBUF_NODISCARD ::beeremote::UpdateJobsRequest* release_requested_update();
  ::beeremote::UpdateJobsRequest* mutable_requested_update();
  void set_allocated_requested_update(::beeremote::UpdateJobsRequest* value);
  void unsafe_arena_set_allocated_requested_update(::beeremote::UpdateJobsRequest* value);
  ::beeremote::UpdateJobsRequest* unsafe_arena_release_requested_update();

  private:
  const ::beeremote::UpdateJobsRequest& _internal_requested_update() const;
  ::beeremote::UpdateJobsRequest* _internal_mutable_requested_update();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.UpdatePathsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdatePathsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr path_prefix_;
    ::beeremote::UpdateJobsRequest* requested_update_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class SubmitJobRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.SubmitJobRequest) */ {
 public:
  inline SubmitJobRequest() : SubmitJobRequest(nullptr) {}
  ~SubmitJobRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubmitJobRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubmitJobRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubmitJobRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubmitJobRequest(const SubmitJobRequest& from) : SubmitJobRequest(nullptr, from) {}
  inline SubmitJobRequest(SubmitJobRequest&& from) noexcept
      : SubmitJobRequest(nullptr, std::move(from)) {}
  inline SubmitJobRequest& operator=(const SubmitJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubmitJobRequest& operator=(SubmitJobRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubmitJobRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubmitJobRequest* internal_default_instance() {
    return reinterpret_cast<const SubmitJobRequest*>(
        &_SubmitJobRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SubmitJobRequest& a, SubmitJobRequest& b) { a.Swap(&b); }
  inline void Swap(SubmitJobRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubmitJobRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubmitJobRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubmitJobRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubmitJobRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubmitJobRequest& from) { SubmitJobRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubmitJobRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.SubmitJobRequest"; }

 protected:
  explicit SubmitJobRequest(::google::protobuf::Arena* arena);
  SubmitJobRequest(::google::protobuf::Arena* arena, const SubmitJobRequest& from);
  SubmitJobRequest(::google::protobuf::Arena* arena, SubmitJobRequest&& from) noexcept
      : SubmitJobRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestFieldNumber = 1,
  };
  // .beeremote.JobRequest request = 1;
  bool has_request() const;
  void clear_request() ;
  const ::beeremote::JobRequest& request() const;
  PROTOBUF_NODISCARD ::beeremote::JobRequest* release_request();
  ::beeremote::JobRequest* mutable_request();
  void set_allocated_request(::beeremote::JobRequest* value);
  void unsafe_arena_set_allocated_request(::beeremote::JobRequest* value);
  ::beeremote::JobRequest* unsafe_arena_release_request();

  private:
  const ::beeremote::JobRequest& _internal_request() const;
  ::beeremote::JobRequest* _internal_mutable_request();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.SubmitJobRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubmitJobRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::beeremote::JobRequest* request_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class JobResult_WorkResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.JobResult.WorkResult) */ {
 public:
  inline JobResult_WorkResult() : JobResult_WorkResult(nullptr) {}
  ~JobResult_WorkResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JobResult_WorkResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JobResult_WorkResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JobResult_WorkResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline JobResult_WorkResult(const JobResult_WorkResult& from) : JobResult_WorkResult(nullptr, from) {}
  inline JobResult_WorkResult(JobResult_WorkResult&& from) noexcept
      : JobResult_WorkResult(nullptr, std::move(from)) {}
  inline JobResult_WorkResult& operator=(const JobResult_WorkResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobResult_WorkResult& operator=(JobResult_WorkResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JobResult_WorkResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const JobResult_WorkResult* internal_default_instance() {
    return reinterpret_cast<const JobResult_WorkResult*>(
        &_JobResult_WorkResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(JobResult_WorkResult& a, JobResult_WorkResult& b) { a.Swap(&b); }
  inline void Swap(JobResult_WorkResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JobResult_WorkResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JobResult_WorkResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JobResult_WorkResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JobResult_WorkResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JobResult_WorkResult& from) { JobResult_WorkResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JobResult_WorkResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.JobResult.WorkResult"; }

 protected:
  explicit JobResult_WorkResult(::google::protobuf::Arena* arena);
  JobResult_WorkResult(::google::protobuf::Arena* arena, const JobResult_WorkResult& from);
  JobResult_WorkResult(::google::protobuf::Arena* arena, JobResult_WorkResult&& from) noexcept
      : JobResult_WorkResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAssignedNodeFieldNumber = 2,
    kAssignedPoolFieldNumber = 3,
    kWorkFieldNumber = 1,
  };
  // string assigned_node = 2;
  void clear_assigned_node() ;
  const std::string& assigned_node() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_assigned_node(Arg_&& arg, Args_... args);
  std::string* mutable_assigned_node();
  PROTOBUF_NODISCARD std::string* release_assigned_node();
  void set_allocated_assigned_node(std::string* value);

  private:
  const std::string& _internal_assigned_node() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_assigned_node(
      const std::string& value);
  std::string* _internal_mutable_assigned_node();

  public:
  // string assigned_pool = 3;
  void clear_assigned_pool() ;
  const std::string& assigned_pool() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_assigned_pool(Arg_&& arg, Args_... args);
  std::string* mutable_assigned_pool();
  PROTOBUF_NODISCARD std::string* release_assigned_pool();
  void set_allocated_assigned_pool(std::string* value);

  private:
  const std::string& _internal_assigned_pool() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_assigned_pool(
      const std::string& value);
  std::string* _internal_mutable_assigned_pool();

  public:
  // .flex.Work work = 1;
  bool has_work() const;
  void clear_work() ;
  const ::flex::Work& work() const;
  PROTOBUF_NODISCARD ::flex::Work* release_work();
  ::flex::Work* mutable_work();
  void set_allocated_work(::flex::Work* value);
  void unsafe_arena_set_allocated_work(::flex::Work* value);
  ::flex::Work* unsafe_arena_release_work();

  private:
  const ::flex::Work& _internal_work() const;
  ::flex::Work* _internal_mutable_work();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.JobResult.WorkResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JobResult_WorkResult& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr assigned_node_;
    ::google::protobuf::internal::ArenaStringPtr assigned_pool_;
    ::flex::Work* work_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class Job final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.Job) */ {
 public:
  inline Job() : Job(nullptr) {}
  ~Job() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Job* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Job));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Job(
      ::google::protobuf::internal::ConstantInitialized);

  inline Job(const Job& from) : Job(nullptr, from) {}
  inline Job(Job&& from) noexcept
      : Job(nullptr, std::move(from)) {}
  inline Job& operator=(const Job& from) {
    CopyFrom(from);
    return *this;
  }
  inline Job& operator=(Job&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Job& default_instance() {
    return *internal_default_instance();
  }
  static inline const Job* internal_default_instance() {
    return reinterpret_cast<const Job*>(
        &_Job_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Job& a, Job& b) { a.Swap(&b); }
  inline void Swap(Job* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Job* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Job* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Job>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Job& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Job& from) { Job::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Job* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.Job"; }

 protected:
  explicit Job(::google::protobuf::Arena* arena);
  Job(::google::protobuf::Arena* arena, const Job& from);
  Job(::google::protobuf::Arena* arena, Job&& from) noexcept
      : Job(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Status = Job_Status;
  using State = Job_State;
  static constexpr State UNSPECIFIED = Job_State_UNSPECIFIED;
  static constexpr State UNKNOWN = Job_State_UNKNOWN;
  static constexpr State UNASSIGNED = Job_State_UNASSIGNED;
  static constexpr State SCHEDULED = Job_State_SCHEDULED;
  static constexpr State RUNNING = Job_State_RUNNING;
  static constexpr State ERROR = Job_State_ERROR;
  static constexpr State FAILED = Job_State_FAILED;
  static constexpr State CANCELLED = Job_State_CANCELLED;
  static constexpr State COMPLETED = Job_State_COMPLETED;
  static inline bool State_IsValid(int value) {
    return Job_State_IsValid(value);
  }
  static constexpr State State_MIN = Job_State_State_MIN;
  static constexpr State State_MAX = Job_State_State_MAX;
  static constexpr int State_ARRAYSIZE = Job_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* State_descriptor() {
    return Job_State_descriptor();
  }
  template <typename T>
  static inline const std::string& State_Name(T value) {
    return Job_State_Name(value);
  }
  static inline bool State_Parse(absl::string_view name, State* value) {
    return Job_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kExternalIdFieldNumber = 5,
    kRequestFieldNumber = 2,
    kCreatedFieldNumber = 3,
    kStatusFieldNumber = 4,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string external_id = 5;
  void clear_external_id() ;
  const std::string& external_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_external_id(Arg_&& arg, Args_... args);
  std::string* mutable_external_id();
  PROTOBUF_NODISCARD std::string* release_external_id();
  void set_allocated_external_id(std::string* value);

  private:
  const std::string& _internal_external_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_external_id(
      const std::string& value);
  std::string* _internal_mutable_external_id();

  public:
  // .beeremote.JobRequest request = 2;
  bool has_request() const;
  void clear_request() ;
  const ::beeremote::JobRequest& request() const;
  PROTOBUF_NODISCARD ::beeremote::JobRequest* release_request();
  ::beeremote::JobRequest* mutable_request();
  void set_allocated_request(::beeremote::JobRequest* value);
  void unsafe_arena_set_allocated_request(::beeremote::JobRequest* value);
  ::beeremote::JobRequest* unsafe_arena_release_request();

  private:
  const ::beeremote::JobRequest& _internal_request() const;
  ::beeremote::JobRequest* _internal_mutable_request();

  public:
  // .google.protobuf.Timestamp created = 3;
  bool has_created() const;
  void clear_created() ;
  const ::google::protobuf::Timestamp& created() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created();
  ::google::protobuf::Timestamp* mutable_created();
  void set_allocated_created(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created();

  private:
  const ::google::protobuf::Timestamp& _internal_created() const;
  ::google::protobuf::Timestamp* _internal_mutable_created();

  public:
  // .beeremote.Job.Status status = 4;
  bool has_status() const;
  void clear_status() ;
  const ::beeremote::Job_Status& status() const;
  PROTOBUF_NODISCARD ::beeremote::Job_Status* release_status();
  ::beeremote::Job_Status* mutable_status();
  void set_allocated_status(::beeremote::Job_Status* value);
  void unsafe_arena_set_allocated_status(::beeremote::Job_Status* value);
  ::beeremote::Job_Status* unsafe_arena_release_status();

  private:
  const ::beeremote::Job_Status& _internal_status() const;
  ::beeremote::Job_Status* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.Job)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Job& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr external_id_;
    ::beeremote::JobRequest* request_;
    ::google::protobuf::Timestamp* created_;
    ::beeremote::Job_Status* status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class JobResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.JobResult) */ {
 public:
  inline JobResult() : JobResult(nullptr) {}
  ~JobResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(JobResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(JobResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR JobResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline JobResult(const JobResult& from) : JobResult(nullptr, from) {}
  inline JobResult(JobResult&& from) noexcept
      : JobResult(nullptr, std::move(from)) {}
  inline JobResult& operator=(const JobResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline JobResult& operator=(JobResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JobResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const JobResult* internal_default_instance() {
    return reinterpret_cast<const JobResult*>(
        &_JobResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(JobResult& a, JobResult& b) { a.Swap(&b); }
  inline void Swap(JobResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JobResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JobResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<JobResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JobResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const JobResult& from) { JobResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(JobResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.JobResult"; }

 protected:
  explicit JobResult(::google::protobuf::Arena* arena);
  JobResult(::google::protobuf::Arena* arena, const JobResult& from);
  JobResult(::google::protobuf::Arena* arena, JobResult&& from) noexcept
      : JobResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using WorkResult = JobResult_WorkResult;

  // accessors -------------------------------------------------------
  enum : int {
    kWorkRequestsFieldNumber = 2,
    kWorkResultsFieldNumber = 3,
    kJobFieldNumber = 1,
  };
  // repeated .flex.WorkRequest work_requests = 2;
  int work_requests_size() const;
  private:
  int _internal_work_requests_size() const;

  public:
  void clear_work_requests() ;
  ::flex::WorkRequest* mutable_work_requests(int index);
  ::google::protobuf::RepeatedPtrField<::flex::WorkRequest>* mutable_work_requests();

  private:
  const ::google::protobuf::RepeatedPtrField<::flex::WorkRequest>& _internal_work_requests() const;
  ::google::protobuf::RepeatedPtrField<::flex::WorkRequest>* _internal_mutable_work_requests();
  public:
  const ::flex::WorkRequest& work_requests(int index) const;
  ::flex::WorkRequest* add_work_requests();
  const ::google::protobuf::RepeatedPtrField<::flex::WorkRequest>& work_requests() const;
  // repeated .beeremote.JobResult.WorkResult work_results = 3;
  int work_results_size() const;
  private:
  int _internal_work_results_size() const;

  public:
  void clear_work_results() ;
  ::beeremote::JobResult_WorkResult* mutable_work_results(int index);
  ::google::protobuf::RepeatedPtrField<::beeremote::JobResult_WorkResult>* mutable_work_results();

  private:
  const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult_WorkResult>& _internal_work_results() const;
  ::google::protobuf::RepeatedPtrField<::beeremote::JobResult_WorkResult>* _internal_mutable_work_results();
  public:
  const ::beeremote::JobResult_WorkResult& work_results(int index) const;
  ::beeremote::JobResult_WorkResult* add_work_results();
  const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult_WorkResult>& work_results() const;
  // .beeremote.Job job = 1;
  bool has_job() const;
  void clear_job() ;
  const ::beeremote::Job& job() const;
  PROTOBUF_NODISCARD ::beeremote::Job* release_job();
  ::beeremote::Job* mutable_job();
  void set_allocated_job(::beeremote::Job* value);
  void unsafe_arena_set_allocated_job(::beeremote::Job* value);
  ::beeremote::Job* unsafe_arena_release_job();

  private:
  const ::beeremote::Job& _internal_job() const;
  ::beeremote::Job* _internal_mutable_job();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.JobResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const JobResult& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::flex::WorkRequest > work_requests_;
    ::google::protobuf::RepeatedPtrField< ::beeremote::JobResult_WorkResult > work_results_;
    ::beeremote::Job* job_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class GetRSTConfigResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.GetRSTConfigResponse) */ {
 public:
  inline GetRSTConfigResponse() : GetRSTConfigResponse(nullptr) {}
  ~GetRSTConfigResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetRSTConfigResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetRSTConfigResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRSTConfigResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRSTConfigResponse(const GetRSTConfigResponse& from) : GetRSTConfigResponse(nullptr, from) {}
  inline GetRSTConfigResponse(GetRSTConfigResponse&& from) noexcept
      : GetRSTConfigResponse(nullptr, std::move(from)) {}
  inline GetRSTConfigResponse& operator=(const GetRSTConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRSTConfigResponse& operator=(GetRSTConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRSTConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRSTConfigResponse* internal_default_instance() {
    return reinterpret_cast<const GetRSTConfigResponse*>(
        &_GetRSTConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetRSTConfigResponse& a, GetRSTConfigResponse& b) { a.Swap(&b); }
  inline void Swap(GetRSTConfigResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRSTConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRSTConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetRSTConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRSTConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRSTConfigResponse& from) { GetRSTConfigResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetRSTConfigResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.GetRSTConfigResponse"; }

 protected:
  explicit GetRSTConfigResponse(::google::protobuf::Arena* arena);
  GetRSTConfigResponse(::google::protobuf::Arena* arena, const GetRSTConfigResponse& from);
  GetRSTConfigResponse(::google::protobuf::Arena* arena, GetRSTConfigResponse&& from) noexcept
      : GetRSTConfigResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRstsFieldNumber = 1,
  };
  // repeated .flex.RemoteStorageTarget rsts = 1;
  int rsts_size() const;
  private:
  int _internal_rsts_size() const;

  public:
  void clear_rsts() ;
  ::flex::RemoteStorageTarget* mutable_rsts(int index);
  ::google::protobuf::RepeatedPtrField<::flex::RemoteStorageTarget>* mutable_rsts();

  private:
  const ::google::protobuf::RepeatedPtrField<::flex::RemoteStorageTarget>& _internal_rsts() const;
  ::google::protobuf::RepeatedPtrField<::flex::RemoteStorageTarget>* _internal_mutable_rsts();
  public:
  const ::flex::RemoteStorageTarget& rsts(int index) const;
  ::flex::RemoteStorageTarget* add_rsts();
  const ::google::protobuf::RepeatedPtrField<::flex::RemoteStorageTarget>& rsts() const;
  // @@protoc_insertion_point(class_scope:beeremote.GetRSTConfigResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRSTConfigResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::flex::RemoteStorageTarget > rsts_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class UpdateJobsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.UpdateJobsResponse) */ {
 public:
  inline UpdateJobsResponse() : UpdateJobsResponse(nullptr) {}
  ~UpdateJobsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateJobsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateJobsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateJobsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateJobsResponse(const UpdateJobsResponse& from) : UpdateJobsResponse(nullptr, from) {}
  inline UpdateJobsResponse(UpdateJobsResponse&& from) noexcept
      : UpdateJobsResponse(nullptr, std::move(from)) {}
  inline UpdateJobsResponse& operator=(const UpdateJobsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateJobsResponse& operator=(UpdateJobsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateJobsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateJobsResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateJobsResponse*>(
        &_UpdateJobsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(UpdateJobsResponse& a, UpdateJobsResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateJobsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateJobsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateJobsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateJobsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateJobsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateJobsResponse& from) { UpdateJobsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateJobsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.UpdateJobsResponse"; }

 protected:
  explicit UpdateJobsResponse(::google::protobuf::Arena* arena);
  UpdateJobsResponse(::google::protobuf::Arena* arena, const UpdateJobsResponse& from);
  UpdateJobsResponse(::google::protobuf::Arena* arena, UpdateJobsResponse&& from) noexcept
      : UpdateJobsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultsFieldNumber = 3,
    kMessageFieldNumber = 2,
    kOkFieldNumber = 1,
  };
  // repeated .beeremote.JobResult results = 3;
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  ::beeremote::JobResult* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>* mutable_results();

  private:
  const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>* _internal_mutable_results();
  public:
  const ::beeremote::JobResult& results(int index) const;
  ::beeremote::JobResult* add_results();
  const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>& results() const;
  // string message = 2;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // bool ok = 1;
  void clear_ok() ;
  bool ok() const;
  void set_ok(bool value);

  private:
  bool _internal_ok() const;
  void _internal_set_ok(bool value);

  public:
  // @@protoc_insertion_point(class_scope:beeremote.UpdateJobsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateJobsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::beeremote::JobResult > results_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    bool ok_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class SubmitJobResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.SubmitJobResponse) */ {
 public:
  inline SubmitJobResponse() : SubmitJobResponse(nullptr) {}
  ~SubmitJobResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubmitJobResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubmitJobResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubmitJobResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubmitJobResponse(const SubmitJobResponse& from) : SubmitJobResponse(nullptr, from) {}
  inline SubmitJobResponse(SubmitJobResponse&& from) noexcept
      : SubmitJobResponse(nullptr, std::move(from)) {}
  inline SubmitJobResponse& operator=(const SubmitJobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubmitJobResponse& operator=(SubmitJobResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubmitJobResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubmitJobResponse* internal_default_instance() {
    return reinterpret_cast<const SubmitJobResponse*>(
        &_SubmitJobResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SubmitJobResponse& a, SubmitJobResponse& b) { a.Swap(&b); }
  inline void Swap(SubmitJobResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubmitJobResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubmitJobResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubmitJobResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubmitJobResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubmitJobResponse& from) { SubmitJobResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubmitJobResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.SubmitJobResponse"; }

 protected:
  explicit SubmitJobResponse(::google::protobuf::Arena* arena);
  SubmitJobResponse(::google::protobuf::Arena* arena, const SubmitJobResponse& from);
  SubmitJobResponse(::google::protobuf::Arena* arena, SubmitJobResponse&& from) noexcept
      : SubmitJobResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // .beeremote.JobResult result = 1;
  bool has_result() const;
  void clear_result() ;
  const ::beeremote::JobResult& result() const;
  PROTOBUF_NODISCARD ::beeremote::JobResult* release_result();
  ::beeremote::JobResult* mutable_result();
  void set_allocated_result(::beeremote::JobResult* value);
  void unsafe_arena_set_allocated_result(::beeremote::JobResult* value);
  ::beeremote::JobResult* unsafe_arena_release_result();

  private:
  const ::beeremote::JobResult& _internal_result() const;
  ::beeremote::JobResult* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.SubmitJobResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubmitJobResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::beeremote::JobResult* result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class GetJobsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.GetJobsResponse) */ {
 public:
  inline GetJobsResponse() : GetJobsResponse(nullptr) {}
  ~GetJobsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetJobsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetJobsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetJobsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetJobsResponse(const GetJobsResponse& from) : GetJobsResponse(nullptr, from) {}
  inline GetJobsResponse(GetJobsResponse&& from) noexcept
      : GetJobsResponse(nullptr, std::move(from)) {}
  inline GetJobsResponse& operator=(const GetJobsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetJobsResponse& operator=(GetJobsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetJobsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetJobsResponse* internal_default_instance() {
    return reinterpret_cast<const GetJobsResponse*>(
        &_GetJobsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(GetJobsResponse& a, GetJobsResponse& b) { a.Swap(&b); }
  inline void Swap(GetJobsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetJobsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetJobsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetJobsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetJobsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetJobsResponse& from) { GetJobsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetJobsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.GetJobsResponse"; }

 protected:
  explicit GetJobsResponse(::google::protobuf::Arena* arena);
  GetJobsResponse(::google::protobuf::Arena* arena, const GetJobsResponse& from);
  GetJobsResponse(::google::protobuf::Arena* arena, GetJobsResponse&& from) noexcept
      : GetJobsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultsFieldNumber = 2,
    kPathFieldNumber = 1,
  };
  // repeated .beeremote.JobResult results = 2;
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  ::beeremote::JobResult* mutable_results(int index);
  ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>* mutable_results();

  private:
  const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>* _internal_mutable_results();
  public:
  const ::beeremote::JobResult& results(int index) const;
  ::beeremote::JobResult* add_results();
  const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>& results() const;
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.GetJobsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetJobsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::beeremote::JobResult > results_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};
// -------------------------------------------------------------------

class UpdatePathsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:beeremote.UpdatePathsResponse) */ {
 public:
  inline UpdatePathsResponse() : UpdatePathsResponse(nullptr) {}
  ~UpdatePathsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdatePathsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdatePathsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdatePathsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdatePathsResponse(const UpdatePathsResponse& from) : UpdatePathsResponse(nullptr, from) {}
  inline UpdatePathsResponse(UpdatePathsResponse&& from) noexcept
      : UpdatePathsResponse(nullptr, std::move(from)) {}
  inline UpdatePathsResponse& operator=(const UpdatePathsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdatePathsResponse& operator=(UpdatePathsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdatePathsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdatePathsResponse* internal_default_instance() {
    return reinterpret_cast<const UpdatePathsResponse*>(
        &_UpdatePathsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(UpdatePathsResponse& a, UpdatePathsResponse& b) { a.Swap(&b); }
  inline void Swap(UpdatePathsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdatePathsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdatePathsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdatePathsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdatePathsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdatePathsResponse& from) { UpdatePathsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdatePathsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "beeremote.UpdatePathsResponse"; }

 protected:
  explicit UpdatePathsResponse(::google::protobuf::Arena* arena);
  UpdatePathsResponse(::google::protobuf::Arena* arena, const UpdatePathsResponse& from);
  UpdatePathsResponse(::google::protobuf::Arena* arena, UpdatePathsResponse&& from) noexcept
      : UpdatePathsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 1,
    kUpdateResultFieldNumber = 2,
  };
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // .beeremote.UpdateJobsResponse update_result = 2;
  bool has_update_result() const;
  void clear_update_result() ;
  const ::beeremote::UpdateJobsResponse& update_result() const;
  PROTOBUF_NODISCARD ::beeremote::UpdateJobsResponse* release_update_result();
  ::beeremote::UpdateJobsResponse* mutable_update_result();
  void set_allocated_update_result(::beeremote::UpdateJobsResponse* value);
  void unsafe_arena_set_allocated_update_result(::beeremote::UpdateJobsResponse* value);
  ::beeremote::UpdateJobsResponse* unsafe_arena_release_update_result();

  private:
  const ::beeremote::UpdateJobsResponse& _internal_update_result() const;
  ::beeremote::UpdateJobsResponse* _internal_mutable_update_result();

  public:
  // @@protoc_insertion_point(class_scope:beeremote.UpdatePathsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      42, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdatePathsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::beeremote::UpdateJobsResponse* update_result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_beeremote_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SubmitJobRequest

// .beeremote.JobRequest request = 1;
inline bool SubmitJobRequest::has_request() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.request_ != nullptr);
  return value;
}
inline void SubmitJobRequest::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ != nullptr) _impl_.request_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::beeremote::JobRequest& SubmitJobRequest::_internal_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::beeremote::JobRequest* p = _impl_.request_;
  return p != nullptr ? *p : reinterpret_cast<const ::beeremote::JobRequest&>(::beeremote::_JobRequest_default_instance_);
}
inline const ::beeremote::JobRequest& SubmitJobRequest::request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.SubmitJobRequest.request)
  return _internal_request();
}
inline void SubmitJobRequest::unsafe_arena_set_allocated_request(::beeremote::JobRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_);
  }
  _impl_.request_ = reinterpret_cast<::beeremote::JobRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.SubmitJobRequest.request)
}
inline ::beeremote::JobRequest* SubmitJobRequest::release_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::JobRequest* released = _impl_.request_;
  _impl_.request_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::beeremote::JobRequest* SubmitJobRequest::unsafe_arena_release_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.SubmitJobRequest.request)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::JobRequest* temp = _impl_.request_;
  _impl_.request_ = nullptr;
  return temp;
}
inline ::beeremote::JobRequest* SubmitJobRequest::_internal_mutable_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::beeremote::JobRequest>(GetArena());
    _impl_.request_ = reinterpret_cast<::beeremote::JobRequest*>(p);
  }
  return _impl_.request_;
}
inline ::beeremote::JobRequest* SubmitJobRequest::mutable_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::beeremote::JobRequest* _msg = _internal_mutable_request();
  // @@protoc_insertion_point(field_mutable:beeremote.SubmitJobRequest.request)
  return _msg;
}
inline void SubmitJobRequest::set_allocated_request(::beeremote::JobRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.request_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.request_ = reinterpret_cast<::beeremote::JobRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.SubmitJobRequest.request)
}

// -------------------------------------------------------------------

// SubmitJobResponse

// .beeremote.JobResult result = 1;
inline bool SubmitJobResponse::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.result_ != nullptr);
  return value;
}
inline void SubmitJobResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::beeremote::JobResult& SubmitJobResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::beeremote::JobResult* p = _impl_.result_;
  return p != nullptr ? *p : reinterpret_cast<const ::beeremote::JobResult&>(::beeremote::_JobResult_default_instance_);
}
inline const ::beeremote::JobResult& SubmitJobResponse::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.SubmitJobResponse.result)
  return _internal_result();
}
inline void SubmitJobResponse::unsafe_arena_set_allocated_result(::beeremote::JobResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }
  _impl_.result_ = reinterpret_cast<::beeremote::JobResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.SubmitJobResponse.result)
}
inline ::beeremote::JobResult* SubmitJobResponse::release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::JobResult* released = _impl_.result_;
  _impl_.result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::beeremote::JobResult* SubmitJobResponse::unsafe_arena_release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.SubmitJobResponse.result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::JobResult* temp = _impl_.result_;
  _impl_.result_ = nullptr;
  return temp;
}
inline ::beeremote::JobResult* SubmitJobResponse::_internal_mutable_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::beeremote::JobResult>(GetArena());
    _impl_.result_ = reinterpret_cast<::beeremote::JobResult*>(p);
  }
  return _impl_.result_;
}
inline ::beeremote::JobResult* SubmitJobResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::beeremote::JobResult* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:beeremote.SubmitJobResponse.result)
  return _msg;
}
inline void SubmitJobResponse::set_allocated_result(::beeremote::JobResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.result_ = reinterpret_cast<::beeremote::JobResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.SubmitJobResponse.result)
}

// -------------------------------------------------------------------

// JobRequest

// string path = 1;
inline void JobRequest::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& JobRequest::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobRequest.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JobRequest::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.JobRequest.path)
}
inline std::string* JobRequest::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:beeremote.JobRequest.path)
  return _s;
}
inline const std::string& JobRequest::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void JobRequest::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* JobRequest::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* JobRequest::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.JobRequest.path)
  return _impl_.path_.Release();
}
inline void JobRequest::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.JobRequest.path)
}

// string name = 2;
inline void JobRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& JobRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JobRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.JobRequest.name)
}
inline std::string* JobRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:beeremote.JobRequest.name)
  return _s;
}
inline const std::string& JobRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void JobRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* JobRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* JobRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.JobRequest.name)
  return _impl_.name_.Release();
}
inline void JobRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.JobRequest.name)
}

// int32 priority = 3;
inline void JobRequest::clear_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = 0;
}
inline ::int32_t JobRequest::priority() const {
  // @@protoc_insertion_point(field_get:beeremote.JobRequest.priority)
  return _internal_priority();
}
inline void JobRequest::set_priority(::int32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:beeremote.JobRequest.priority)
}
inline ::int32_t JobRequest::_internal_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_;
}
inline void JobRequest::_internal_set_priority(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = value;
}

// uint32 remote_storage_target = 4;
inline void JobRequest::clear_remote_storage_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_storage_target_ = 0u;
}
inline ::uint32_t JobRequest::remote_storage_target() const {
  // @@protoc_insertion_point(field_get:beeremote.JobRequest.remote_storage_target)
  return _internal_remote_storage_target();
}
inline void JobRequest::set_remote_storage_target(::uint32_t value) {
  _internal_set_remote_storage_target(value);
  // @@protoc_insertion_point(field_set:beeremote.JobRequest.remote_storage_target)
}
inline ::uint32_t JobRequest::_internal_remote_storage_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_storage_target_;
}
inline void JobRequest::_internal_set_remote_storage_target(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_storage_target_ = value;
}

// .flex.SyncJob sync = 10;
inline bool JobRequest::has_sync() const {
  return type_case() == kSync;
}
inline bool JobRequest::_internal_has_sync() const {
  return type_case() == kSync;
}
inline void JobRequest::set_has_sync() {
  _impl_._oneof_case_[0] = kSync;
}
inline ::flex::SyncJob* JobRequest::release_sync() {
  // @@protoc_insertion_point(field_release:beeremote.JobRequest.sync)
  if (type_case() == kSync) {
    clear_has_type();
    auto* temp = _impl_.type_.sync_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::flex::SyncJob& JobRequest::_internal_sync() const {
  return type_case() == kSync ? *_impl_.type_.sync_ : reinterpret_cast<::flex::SyncJob&>(::flex::_SyncJob_default_instance_);
}
inline const ::flex::SyncJob& JobRequest::sync() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobRequest.sync)
  return _internal_sync();
}
inline ::flex::SyncJob* JobRequest::unsafe_arena_release_sync() {
  // @@protoc_insertion_point(field_unsafe_arena_release:beeremote.JobRequest.sync)
  if (type_case() == kSync) {
    clear_has_type();
    auto* temp = _impl_.type_.sync_;
    _impl_.type_.sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void JobRequest::unsafe_arena_set_allocated_sync(::flex::SyncJob* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_sync();
    _impl_.type_.sync_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.JobRequest.sync)
}
inline ::flex::SyncJob* JobRequest::_internal_mutable_sync() {
  if (type_case() != kSync) {
    clear_type();
    set_has_sync();
    _impl_.type_.sync_ =
        ::google::protobuf::Message::DefaultConstruct<::flex::SyncJob>(GetArena());
  }
  return _impl_.type_.sync_;
}
inline ::flex::SyncJob* JobRequest::mutable_sync() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::flex::SyncJob* _msg = _internal_mutable_sync();
  // @@protoc_insertion_point(field_mutable:beeremote.JobRequest.sync)
  return _msg;
}

// .flex.MockJob mock = 11;
inline bool JobRequest::has_mock() const {
  return type_case() == kMock;
}
inline bool JobRequest::_internal_has_mock() const {
  return type_case() == kMock;
}
inline void JobRequest::set_has_mock() {
  _impl_._oneof_case_[0] = kMock;
}
inline ::flex::MockJob* JobRequest::release_mock() {
  // @@protoc_insertion_point(field_release:beeremote.JobRequest.mock)
  if (type_case() == kMock) {
    clear_has_type();
    auto* temp = _impl_.type_.mock_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.type_.mock_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::flex::MockJob& JobRequest::_internal_mock() const {
  return type_case() == kMock ? *_impl_.type_.mock_ : reinterpret_cast<::flex::MockJob&>(::flex::_MockJob_default_instance_);
}
inline const ::flex::MockJob& JobRequest::mock() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobRequest.mock)
  return _internal_mock();
}
inline ::flex::MockJob* JobRequest::unsafe_arena_release_mock() {
  // @@protoc_insertion_point(field_unsafe_arena_release:beeremote.JobRequest.mock)
  if (type_case() == kMock) {
    clear_has_type();
    auto* temp = _impl_.type_.mock_;
    _impl_.type_.mock_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void JobRequest::unsafe_arena_set_allocated_mock(::flex::MockJob* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_type();
  if (value) {
    set_has_mock();
    _impl_.type_.mock_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.JobRequest.mock)
}
inline ::flex::MockJob* JobRequest::_internal_mutable_mock() {
  if (type_case() != kMock) {
    clear_type();
    set_has_mock();
    _impl_.type_.mock_ =
        ::google::protobuf::Message::DefaultConstruct<::flex::MockJob>(GetArena());
  }
  return _impl_.type_.mock_;
}
inline ::flex::MockJob* JobRequest::mutable_mock() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::flex::MockJob* _msg = _internal_mutable_mock();
  // @@protoc_insertion_point(field_mutable:beeremote.JobRequest.mock)
  return _msg;
}

inline bool JobRequest::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void JobRequest::clear_has_type() {
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}
inline JobRequest::TypeCase JobRequest::type_case() const {
  return JobRequest::TypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Job_Status

// .beeremote.Job.State state = 1;
inline void Job_Status::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::beeremote::Job_State Job_Status::state() const {
  // @@protoc_insertion_point(field_get:beeremote.Job.Status.state)
  return _internal_state();
}
inline void Job_Status::set_state(::beeremote::Job_State value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:beeremote.Job.Status.state)
}
inline ::beeremote::Job_State Job_Status::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::beeremote::Job_State>(_impl_.state_);
}
inline void Job_Status::_internal_set_state(::beeremote::Job_State value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// string message = 2;
inline void Job_Status::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& Job_Status::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.Job.Status.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Job_Status::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.Job.Status.message)
}
inline std::string* Job_Status::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:beeremote.Job.Status.message)
  return _s;
}
inline const std::string& Job_Status::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void Job_Status::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* Job_Status::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* Job_Status::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.Job.Status.message)
  return _impl_.message_.Release();
}
inline void Job_Status::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.Job.Status.message)
}

// .google.protobuf.Timestamp updated = 3;
inline bool Job_Status::has_updated() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Job_Status::_internal_updated() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.updated_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Job_Status::updated() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.Job.Status.updated)
  return _internal_updated();
}
inline void Job_Status::unsafe_arena_set_allocated_updated(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_);
  }
  _impl_.updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.Job.Status.updated)
}
inline ::google::protobuf::Timestamp* Job_Status::release_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.updated_;
  _impl_.updated_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Job_Status::unsafe_arena_release_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.Job.Status.updated)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_;
  _impl_.updated_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Job_Status::_internal_mutable_updated() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_;
}
inline ::google::protobuf::Timestamp* Job_Status::mutable_updated() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated();
  // @@protoc_insertion_point(field_mutable:beeremote.Job.Status.updated)
  return _msg;
}
inline void Job_Status::set_allocated_updated(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updated_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.Job.Status.updated)
}

// -------------------------------------------------------------------

// Job

// string id = 1;
inline void Job::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Job::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.Job.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Job::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.Job.id)
}
inline std::string* Job::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:beeremote.Job.id)
  return _s;
}
inline const std::string& Job::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Job::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Job::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Job::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.Job.id)
  return _impl_.id_.Release();
}
inline void Job::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.Job.id)
}

// .beeremote.JobRequest request = 2;
inline bool Job::has_request() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.request_ != nullptr);
  return value;
}
inline void Job::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ != nullptr) _impl_.request_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::beeremote::JobRequest& Job::_internal_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::beeremote::JobRequest* p = _impl_.request_;
  return p != nullptr ? *p : reinterpret_cast<const ::beeremote::JobRequest&>(::beeremote::_JobRequest_default_instance_);
}
inline const ::beeremote::JobRequest& Job::request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.Job.request)
  return _internal_request();
}
inline void Job::unsafe_arena_set_allocated_request(::beeremote::JobRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.request_);
  }
  _impl_.request_ = reinterpret_cast<::beeremote::JobRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.Job.request)
}
inline ::beeremote::JobRequest* Job::release_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::JobRequest* released = _impl_.request_;
  _impl_.request_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::beeremote::JobRequest* Job::unsafe_arena_release_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.Job.request)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::JobRequest* temp = _impl_.request_;
  _impl_.request_ = nullptr;
  return temp;
}
inline ::beeremote::JobRequest* Job::_internal_mutable_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.request_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::beeremote::JobRequest>(GetArena());
    _impl_.request_ = reinterpret_cast<::beeremote::JobRequest*>(p);
  }
  return _impl_.request_;
}
inline ::beeremote::JobRequest* Job::mutable_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::beeremote::JobRequest* _msg = _internal_mutable_request();
  // @@protoc_insertion_point(field_mutable:beeremote.Job.request)
  return _msg;
}
inline void Job::set_allocated_request(::beeremote::JobRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.request_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.request_ = reinterpret_cast<::beeremote::JobRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.Job.request)
}

// .google.protobuf.Timestamp created = 3;
inline bool Job::has_created() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Job::_internal_created() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.created_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Job::created() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.Job.created)
  return _internal_created();
}
inline void Job::unsafe_arena_set_allocated_created(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_);
  }
  _impl_.created_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.Job.created)
}
inline ::google::protobuf::Timestamp* Job::release_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.created_;
  _impl_.created_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Job::unsafe_arena_release_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.Job.created)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.created_;
  _impl_.created_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Job::_internal_mutable_created() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_;
}
inline ::google::protobuf::Timestamp* Job::mutable_created() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created();
  // @@protoc_insertion_point(field_mutable:beeremote.Job.created)
  return _msg;
}
inline void Job::set_allocated_created(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.created_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.Job.created)
}

// .beeremote.Job.Status status = 4;
inline bool Job::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline void Job::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::beeremote::Job_Status& Job::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::beeremote::Job_Status* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::beeremote::Job_Status&>(::beeremote::_Job_Status_default_instance_);
}
inline const ::beeremote::Job_Status& Job::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.Job.status)
  return _internal_status();
}
inline void Job::unsafe_arena_set_allocated_status(::beeremote::Job_Status* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::beeremote::Job_Status*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.Job.status)
}
inline ::beeremote::Job_Status* Job::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::beeremote::Job_Status* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::beeremote::Job_Status* Job::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.Job.status)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::beeremote::Job_Status* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::beeremote::Job_Status* Job::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::beeremote::Job_Status>(GetArena());
    _impl_.status_ = reinterpret_cast<::beeremote::Job_Status*>(p);
  }
  return _impl_.status_;
}
inline ::beeremote::Job_Status* Job::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::beeremote::Job_Status* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:beeremote.Job.status)
  return _msg;
}
inline void Job::set_allocated_status(::beeremote::Job_Status* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.status_ = reinterpret_cast<::beeremote::Job_Status*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.Job.status)
}

// string external_id = 5;
inline void Job::clear_external_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_id_.ClearToEmpty();
}
inline const std::string& Job::external_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.Job.external_id)
  return _internal_external_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Job::set_external_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.Job.external_id)
}
inline std::string* Job::mutable_external_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_external_id();
  // @@protoc_insertion_point(field_mutable:beeremote.Job.external_id)
  return _s;
}
inline const std::string& Job::_internal_external_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_id_.Get();
}
inline void Job::_internal_set_external_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_id_.Set(value, GetArena());
}
inline std::string* Job::_internal_mutable_external_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.external_id_.Mutable( GetArena());
}
inline std::string* Job::release_external_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.Job.external_id)
  return _impl_.external_id_.Release();
}
inline void Job::set_allocated_external_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.external_id_.IsDefault()) {
    _impl_.external_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.Job.external_id)
}

// -------------------------------------------------------------------

// JobResult_WorkResult

// .flex.Work work = 1;
inline bool JobResult_WorkResult::has_work() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.work_ != nullptr);
  return value;
}
inline const ::flex::Work& JobResult_WorkResult::_internal_work() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::flex::Work* p = _impl_.work_;
  return p != nullptr ? *p : reinterpret_cast<const ::flex::Work&>(::flex::_Work_default_instance_);
}
inline const ::flex::Work& JobResult_WorkResult::work() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobResult.WorkResult.work)
  return _internal_work();
}
inline void JobResult_WorkResult::unsafe_arena_set_allocated_work(::flex::Work* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.work_);
  }
  _impl_.work_ = reinterpret_cast<::flex::Work*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.JobResult.WorkResult.work)
}
inline ::flex::Work* JobResult_WorkResult::release_work() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::flex::Work* released = _impl_.work_;
  _impl_.work_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::flex::Work* JobResult_WorkResult::unsafe_arena_release_work() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.JobResult.WorkResult.work)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::flex::Work* temp = _impl_.work_;
  _impl_.work_ = nullptr;
  return temp;
}
inline ::flex::Work* JobResult_WorkResult::_internal_mutable_work() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.work_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::flex::Work>(GetArena());
    _impl_.work_ = reinterpret_cast<::flex::Work*>(p);
  }
  return _impl_.work_;
}
inline ::flex::Work* JobResult_WorkResult::mutable_work() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::flex::Work* _msg = _internal_mutable_work();
  // @@protoc_insertion_point(field_mutable:beeremote.JobResult.WorkResult.work)
  return _msg;
}
inline void JobResult_WorkResult::set_allocated_work(::flex::Work* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.work_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.work_ = reinterpret_cast<::flex::Work*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.JobResult.WorkResult.work)
}

// string assigned_node = 2;
inline void JobResult_WorkResult::clear_assigned_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_node_.ClearToEmpty();
}
inline const std::string& JobResult_WorkResult::assigned_node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobResult.WorkResult.assigned_node)
  return _internal_assigned_node();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JobResult_WorkResult::set_assigned_node(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_node_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.JobResult.WorkResult.assigned_node)
}
inline std::string* JobResult_WorkResult::mutable_assigned_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_assigned_node();
  // @@protoc_insertion_point(field_mutable:beeremote.JobResult.WorkResult.assigned_node)
  return _s;
}
inline const std::string& JobResult_WorkResult::_internal_assigned_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.assigned_node_.Get();
}
inline void JobResult_WorkResult::_internal_set_assigned_node(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_node_.Set(value, GetArena());
}
inline std::string* JobResult_WorkResult::_internal_mutable_assigned_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.assigned_node_.Mutable( GetArena());
}
inline std::string* JobResult_WorkResult::release_assigned_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.JobResult.WorkResult.assigned_node)
  return _impl_.assigned_node_.Release();
}
inline void JobResult_WorkResult::set_allocated_assigned_node(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_node_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.assigned_node_.IsDefault()) {
    _impl_.assigned_node_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.JobResult.WorkResult.assigned_node)
}

// string assigned_pool = 3;
inline void JobResult_WorkResult::clear_assigned_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_pool_.ClearToEmpty();
}
inline const std::string& JobResult_WorkResult::assigned_pool() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobResult.WorkResult.assigned_pool)
  return _internal_assigned_pool();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JobResult_WorkResult::set_assigned_pool(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_pool_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.JobResult.WorkResult.assigned_pool)
}
inline std::string* JobResult_WorkResult::mutable_assigned_pool() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_assigned_pool();
  // @@protoc_insertion_point(field_mutable:beeremote.JobResult.WorkResult.assigned_pool)
  return _s;
}
inline const std::string& JobResult_WorkResult::_internal_assigned_pool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.assigned_pool_.Get();
}
inline void JobResult_WorkResult::_internal_set_assigned_pool(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_pool_.Set(value, GetArena());
}
inline std::string* JobResult_WorkResult::_internal_mutable_assigned_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.assigned_pool_.Mutable( GetArena());
}
inline std::string* JobResult_WorkResult::release_assigned_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.JobResult.WorkResult.assigned_pool)
  return _impl_.assigned_pool_.Release();
}
inline void JobResult_WorkResult::set_allocated_assigned_pool(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assigned_pool_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.assigned_pool_.IsDefault()) {
    _impl_.assigned_pool_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.JobResult.WorkResult.assigned_pool)
}

// -------------------------------------------------------------------

// JobResult

// .beeremote.Job job = 1;
inline bool JobResult::has_job() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.job_ != nullptr);
  return value;
}
inline void JobResult::clear_job() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.job_ != nullptr) _impl_.job_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::beeremote::Job& JobResult::_internal_job() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::beeremote::Job* p = _impl_.job_;
  return p != nullptr ? *p : reinterpret_cast<const ::beeremote::Job&>(::beeremote::_Job_default_instance_);
}
inline const ::beeremote::Job& JobResult::job() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobResult.job)
  return _internal_job();
}
inline void JobResult::unsafe_arena_set_allocated_job(::beeremote::Job* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.job_);
  }
  _impl_.job_ = reinterpret_cast<::beeremote::Job*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.JobResult.job)
}
inline ::beeremote::Job* JobResult::release_job() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::Job* released = _impl_.job_;
  _impl_.job_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::beeremote::Job* JobResult::unsafe_arena_release_job() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.JobResult.job)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::Job* temp = _impl_.job_;
  _impl_.job_ = nullptr;
  return temp;
}
inline ::beeremote::Job* JobResult::_internal_mutable_job() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.job_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::beeremote::Job>(GetArena());
    _impl_.job_ = reinterpret_cast<::beeremote::Job*>(p);
  }
  return _impl_.job_;
}
inline ::beeremote::Job* JobResult::mutable_job() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::beeremote::Job* _msg = _internal_mutable_job();
  // @@protoc_insertion_point(field_mutable:beeremote.JobResult.job)
  return _msg;
}
inline void JobResult::set_allocated_job(::beeremote::Job* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.job_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.job_ = reinterpret_cast<::beeremote::Job*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.JobResult.job)
}

// repeated .flex.WorkRequest work_requests = 2;
inline int JobResult::_internal_work_requests_size() const {
  return _internal_work_requests().size();
}
inline int JobResult::work_requests_size() const {
  return _internal_work_requests_size();
}
inline ::flex::WorkRequest* JobResult::mutable_work_requests(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:beeremote.JobResult.work_requests)
  return _internal_mutable_work_requests()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::flex::WorkRequest>* JobResult::mutable_work_requests()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:beeremote.JobResult.work_requests)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_work_requests();
}
inline const ::flex::WorkRequest& JobResult::work_requests(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobResult.work_requests)
  return _internal_work_requests().Get(index);
}
inline ::flex::WorkRequest* JobResult::add_work_requests() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::flex::WorkRequest* _add = _internal_mutable_work_requests()->Add();
  // @@protoc_insertion_point(field_add:beeremote.JobResult.work_requests)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::flex::WorkRequest>& JobResult::work_requests() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:beeremote.JobResult.work_requests)
  return _internal_work_requests();
}
inline const ::google::protobuf::RepeatedPtrField<::flex::WorkRequest>&
JobResult::_internal_work_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.work_requests_;
}
inline ::google::protobuf::RepeatedPtrField<::flex::WorkRequest>*
JobResult::_internal_mutable_work_requests() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.work_requests_;
}

// repeated .beeremote.JobResult.WorkResult work_results = 3;
inline int JobResult::_internal_work_results_size() const {
  return _internal_work_results().size();
}
inline int JobResult::work_results_size() const {
  return _internal_work_results_size();
}
inline void JobResult::clear_work_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_results_.Clear();
}
inline ::beeremote::JobResult_WorkResult* JobResult::mutable_work_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:beeremote.JobResult.work_results)
  return _internal_mutable_work_results()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::beeremote::JobResult_WorkResult>* JobResult::mutable_work_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:beeremote.JobResult.work_results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_work_results();
}
inline const ::beeremote::JobResult_WorkResult& JobResult::work_results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.JobResult.work_results)
  return _internal_work_results().Get(index);
}
inline ::beeremote::JobResult_WorkResult* JobResult::add_work_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::beeremote::JobResult_WorkResult* _add = _internal_mutable_work_results()->Add();
  // @@protoc_insertion_point(field_add:beeremote.JobResult.work_results)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult_WorkResult>& JobResult::work_results() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:beeremote.JobResult.work_results)
  return _internal_work_results();
}
inline const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult_WorkResult>&
JobResult::_internal_work_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.work_results_;
}
inline ::google::protobuf::RepeatedPtrField<::beeremote::JobResult_WorkResult>*
JobResult::_internal_mutable_work_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.work_results_;
}

// -------------------------------------------------------------------

// UpdatePathsRequest

// string path_prefix = 1;
inline void UpdatePathsRequest::clear_path_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_prefix_.ClearToEmpty();
}
inline const std::string& UpdatePathsRequest::path_prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.UpdatePathsRequest.path_prefix)
  return _internal_path_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdatePathsRequest::set_path_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.UpdatePathsRequest.path_prefix)
}
inline std::string* UpdatePathsRequest::mutable_path_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path_prefix();
  // @@protoc_insertion_point(field_mutable:beeremote.UpdatePathsRequest.path_prefix)
  return _s;
}
inline const std::string& UpdatePathsRequest::_internal_path_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_prefix_.Get();
}
inline void UpdatePathsRequest::_internal_set_path_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_prefix_.Set(value, GetArena());
}
inline std::string* UpdatePathsRequest::_internal_mutable_path_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_prefix_.Mutable( GetArena());
}
inline std::string* UpdatePathsRequest::release_path_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.UpdatePathsRequest.path_prefix)
  return _impl_.path_prefix_.Release();
}
inline void UpdatePathsRequest::set_allocated_path_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_prefix_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_prefix_.IsDefault()) {
    _impl_.path_prefix_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.UpdatePathsRequest.path_prefix)
}

// .beeremote.UpdateJobsRequest requested_update = 2;
inline bool UpdatePathsRequest::has_requested_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.requested_update_ != nullptr);
  return value;
}
inline void UpdatePathsRequest::clear_requested_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.requested_update_ != nullptr) _impl_.requested_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::beeremote::UpdateJobsRequest& UpdatePathsRequest::_internal_requested_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::beeremote::UpdateJobsRequest* p = _impl_.requested_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::beeremote::UpdateJobsRequest&>(::beeremote::_UpdateJobsRequest_default_instance_);
}
inline const ::beeremote::UpdateJobsRequest& UpdatePathsRequest::requested_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.UpdatePathsRequest.requested_update)
  return _internal_requested_update();
}
inline void UpdatePathsRequest::unsafe_arena_set_allocated_requested_update(::beeremote::UpdateJobsRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.requested_update_);
  }
  _impl_.requested_update_ = reinterpret_cast<::beeremote::UpdateJobsRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.UpdatePathsRequest.requested_update)
}
inline ::beeremote::UpdateJobsRequest* UpdatePathsRequest::release_requested_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::UpdateJobsRequest* released = _impl_.requested_update_;
  _impl_.requested_update_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::beeremote::UpdateJobsRequest* UpdatePathsRequest::unsafe_arena_release_requested_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.UpdatePathsRequest.requested_update)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::UpdateJobsRequest* temp = _impl_.requested_update_;
  _impl_.requested_update_ = nullptr;
  return temp;
}
inline ::beeremote::UpdateJobsRequest* UpdatePathsRequest::_internal_mutable_requested_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.requested_update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::beeremote::UpdateJobsRequest>(GetArena());
    _impl_.requested_update_ = reinterpret_cast<::beeremote::UpdateJobsRequest*>(p);
  }
  return _impl_.requested_update_;
}
inline ::beeremote::UpdateJobsRequest* UpdatePathsRequest::mutable_requested_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::beeremote::UpdateJobsRequest* _msg = _internal_mutable_requested_update();
  // @@protoc_insertion_point(field_mutable:beeremote.UpdatePathsRequest.requested_update)
  return _msg;
}
inline void UpdatePathsRequest::set_allocated_requested_update(::beeremote::UpdateJobsRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.requested_update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.requested_update_ = reinterpret_cast<::beeremote::UpdateJobsRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.UpdatePathsRequest.requested_update)
}

// -------------------------------------------------------------------

// UpdatePathsResponse

// string path = 1;
inline void UpdatePathsResponse::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& UpdatePathsResponse::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.UpdatePathsResponse.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdatePathsResponse::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.UpdatePathsResponse.path)
}
inline std::string* UpdatePathsResponse::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:beeremote.UpdatePathsResponse.path)
  return _s;
}
inline const std::string& UpdatePathsResponse::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void UpdatePathsResponse::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* UpdatePathsResponse::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* UpdatePathsResponse::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.UpdatePathsResponse.path)
  return _impl_.path_.Release();
}
inline void UpdatePathsResponse::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.UpdatePathsResponse.path)
}

// .beeremote.UpdateJobsResponse update_result = 2;
inline bool UpdatePathsResponse::has_update_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.update_result_ != nullptr);
  return value;
}
inline void UpdatePathsResponse::clear_update_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_result_ != nullptr) _impl_.update_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::beeremote::UpdateJobsResponse& UpdatePathsResponse::_internal_update_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::beeremote::UpdateJobsResponse* p = _impl_.update_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::beeremote::UpdateJobsResponse&>(::beeremote::_UpdateJobsResponse_default_instance_);
}
inline const ::beeremote::UpdateJobsResponse& UpdatePathsResponse::update_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.UpdatePathsResponse.update_result)
  return _internal_update_result();
}
inline void UpdatePathsResponse::unsafe_arena_set_allocated_update_result(::beeremote::UpdateJobsResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.update_result_);
  }
  _impl_.update_result_ = reinterpret_cast<::beeremote::UpdateJobsResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.UpdatePathsResponse.update_result)
}
inline ::beeremote::UpdateJobsResponse* UpdatePathsResponse::release_update_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::UpdateJobsResponse* released = _impl_.update_result_;
  _impl_.update_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::beeremote::UpdateJobsResponse* UpdatePathsResponse::unsafe_arena_release_update_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.UpdatePathsResponse.update_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::beeremote::UpdateJobsResponse* temp = _impl_.update_result_;
  _impl_.update_result_ = nullptr;
  return temp;
}
inline ::beeremote::UpdateJobsResponse* UpdatePathsResponse::_internal_mutable_update_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::beeremote::UpdateJobsResponse>(GetArena());
    _impl_.update_result_ = reinterpret_cast<::beeremote::UpdateJobsResponse*>(p);
  }
  return _impl_.update_result_;
}
inline ::beeremote::UpdateJobsResponse* UpdatePathsResponse::mutable_update_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::beeremote::UpdateJobsResponse* _msg = _internal_mutable_update_result();
  // @@protoc_insertion_point(field_mutable:beeremote.UpdatePathsResponse.update_result)
  return _msg;
}
inline void UpdatePathsResponse::set_allocated_update_result(::beeremote::UpdateJobsResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.update_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.update_result_ = reinterpret_cast<::beeremote::UpdateJobsResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.UpdatePathsResponse.update_result)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// UpdateJobsRequest

// string path = 1;
inline void UpdateJobsRequest::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& UpdateJobsRequest::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.UpdateJobsRequest.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateJobsRequest::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.UpdateJobsRequest.path)
}
inline std::string* UpdateJobsRequest::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:beeremote.UpdateJobsRequest.path)
  return _s;
}
inline const std::string& UpdateJobsRequest::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void UpdateJobsRequest::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* UpdateJobsRequest::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* UpdateJobsRequest::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.UpdateJobsRequest.path)
  return _impl_.path_.Release();
}
inline void UpdateJobsRequest::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.UpdateJobsRequest.path)
}

// optional string job_id = 2;
inline bool UpdateJobsRequest::has_job_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UpdateJobsRequest::clear_job_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UpdateJobsRequest::job_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.UpdateJobsRequest.job_id)
  return _internal_job_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateJobsRequest::set_job_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.job_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.UpdateJobsRequest.job_id)
}
inline std::string* UpdateJobsRequest::mutable_job_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_job_id();
  // @@protoc_insertion_point(field_mutable:beeremote.UpdateJobsRequest.job_id)
  return _s;
}
inline const std::string& UpdateJobsRequest::_internal_job_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.job_id_.Get();
}
inline void UpdateJobsRequest::_internal_set_job_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.job_id_.Set(value, GetArena());
}
inline std::string* UpdateJobsRequest::_internal_mutable_job_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.job_id_.Mutable( GetArena());
}
inline std::string* UpdateJobsRequest::release_job_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.UpdateJobsRequest.job_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.job_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.job_id_.Set("", GetArena());
  }
  return released;
}
inline void UpdateJobsRequest::set_allocated_job_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.job_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.job_id_.IsDefault()) {
    _impl_.job_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.UpdateJobsRequest.job_id)
}

// map<uint32, bool> remote_targets = 3;
inline int UpdateJobsRequest::_internal_remote_targets_size() const {
  return _internal_remote_targets().size();
}
inline int UpdateJobsRequest::remote_targets_size() const {
  return _internal_remote_targets_size();
}
inline void UpdateJobsRequest::clear_remote_targets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_targets_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, bool>& UpdateJobsRequest::_internal_remote_targets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_targets_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, bool>& UpdateJobsRequest::remote_targets() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:beeremote.UpdateJobsRequest.remote_targets)
  return _internal_remote_targets();
}
inline ::google::protobuf::Map<::uint32_t, bool>* UpdateJobsRequest::_internal_mutable_remote_targets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_targets_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, bool>* UpdateJobsRequest::mutable_remote_targets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:beeremote.UpdateJobsRequest.remote_targets)
  return _internal_mutable_remote_targets();
}

// .beeremote.UpdateJobsRequest.NewState new_state = 10;
inline void UpdateJobsRequest::clear_new_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_state_ = 0;
}
inline ::beeremote::UpdateJobsRequest_NewState UpdateJobsRequest::new_state() const {
  // @@protoc_insertion_point(field_get:beeremote.UpdateJobsRequest.new_state)
  return _internal_new_state();
}
inline void UpdateJobsRequest::set_new_state(::beeremote::UpdateJobsRequest_NewState value) {
  _internal_set_new_state(value);
  // @@protoc_insertion_point(field_set:beeremote.UpdateJobsRequest.new_state)
}
inline ::beeremote::UpdateJobsRequest_NewState UpdateJobsRequest::_internal_new_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::beeremote::UpdateJobsRequest_NewState>(_impl_.new_state_);
}
inline void UpdateJobsRequest::_internal_set_new_state(::beeremote::UpdateJobsRequest_NewState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_state_ = value;
}

// bool force_update = 4;
inline void UpdateJobsRequest::clear_force_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_update_ = false;
}
inline bool UpdateJobsRequest::force_update() const {
  // @@protoc_insertion_point(field_get:beeremote.UpdateJobsRequest.force_update)
  return _internal_force_update();
}
inline void UpdateJobsRequest::set_force_update(bool value) {
  _internal_set_force_update(value);
  // @@protoc_insertion_point(field_set:beeremote.UpdateJobsRequest.force_update)
}
inline bool UpdateJobsRequest::_internal_force_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.force_update_;
}
inline void UpdateJobsRequest::_internal_set_force_update(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_update_ = value;
}

// -------------------------------------------------------------------

// UpdateJobsResponse

// bool ok = 1;
inline void UpdateJobsResponse::clear_ok() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = false;
}
inline bool UpdateJobsResponse::ok() const {
  // @@protoc_insertion_point(field_get:beeremote.UpdateJobsResponse.ok)
  return _internal_ok();
}
inline void UpdateJobsResponse::set_ok(bool value) {
  _internal_set_ok(value);
  // @@protoc_insertion_point(field_set:beeremote.UpdateJobsResponse.ok)
}
inline bool UpdateJobsResponse::_internal_ok() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ok_;
}
inline void UpdateJobsResponse::_internal_set_ok(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ok_ = value;
}

// string message = 2;
inline void UpdateJobsResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& UpdateJobsResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.UpdateJobsResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateJobsResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.UpdateJobsResponse.message)
}
inline std::string* UpdateJobsResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:beeremote.UpdateJobsResponse.message)
  return _s;
}
inline const std::string& UpdateJobsResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void UpdateJobsResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* UpdateJobsResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* UpdateJobsResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.UpdateJobsResponse.message)
  return _impl_.message_.Release();
}
inline void UpdateJobsResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.UpdateJobsResponse.message)
}

// repeated .beeremote.JobResult results = 3;
inline int UpdateJobsResponse::_internal_results_size() const {
  return _internal_results().size();
}
inline int UpdateJobsResponse::results_size() const {
  return _internal_results_size();
}
inline void UpdateJobsResponse::clear_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.results_.Clear();
}
inline ::beeremote::JobResult* UpdateJobsResponse::mutable_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:beeremote.UpdateJobsResponse.results)
  return _internal_mutable_results()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>* UpdateJobsResponse::mutable_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:beeremote.UpdateJobsResponse.results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_results();
}
inline const ::beeremote::JobResult& UpdateJobsResponse::results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.UpdateJobsResponse.results)
  return _internal_results().Get(index);
}
inline ::beeremote::JobResult* UpdateJobsResponse::add_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::beeremote::JobResult* _add = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add:beeremote.UpdateJobsResponse.results)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>& UpdateJobsResponse::results() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:beeremote.UpdateJobsResponse.results)
  return _internal_results();
}
inline const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>&
UpdateJobsResponse::_internal_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>*
UpdateJobsResponse::_internal_mutable_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// GetJobsRequest_QueryIdAndPath

// string job_id = 1;
inline void GetJobsRequest_QueryIdAndPath::clear_job_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_.ClearToEmpty();
}
inline const std::string& GetJobsRequest_QueryIdAndPath::job_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsRequest.QueryIdAndPath.job_id)
  return _internal_job_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetJobsRequest_QueryIdAndPath::set_job_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.GetJobsRequest.QueryIdAndPath.job_id)
}
inline std::string* GetJobsRequest_QueryIdAndPath::mutable_job_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_job_id();
  // @@protoc_insertion_point(field_mutable:beeremote.GetJobsRequest.QueryIdAndPath.job_id)
  return _s;
}
inline const std::string& GetJobsRequest_QueryIdAndPath::_internal_job_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.job_id_.Get();
}
inline void GetJobsRequest_QueryIdAndPath::_internal_set_job_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_.Set(value, GetArena());
}
inline std::string* GetJobsRequest_QueryIdAndPath::_internal_mutable_job_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.job_id_.Mutable( GetArena());
}
inline std::string* GetJobsRequest_QueryIdAndPath::release_job_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.GetJobsRequest.QueryIdAndPath.job_id)
  return _impl_.job_id_.Release();
}
inline void GetJobsRequest_QueryIdAndPath::set_allocated_job_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.job_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.job_id_.IsDefault()) {
    _impl_.job_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.GetJobsRequest.QueryIdAndPath.job_id)
}

// string path = 2;
inline void GetJobsRequest_QueryIdAndPath::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& GetJobsRequest_QueryIdAndPath::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsRequest.QueryIdAndPath.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetJobsRequest_QueryIdAndPath::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.GetJobsRequest.QueryIdAndPath.path)
}
inline std::string* GetJobsRequest_QueryIdAndPath::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:beeremote.GetJobsRequest.QueryIdAndPath.path)
  return _s;
}
inline const std::string& GetJobsRequest_QueryIdAndPath::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void GetJobsRequest_QueryIdAndPath::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* GetJobsRequest_QueryIdAndPath::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* GetJobsRequest_QueryIdAndPath::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.GetJobsRequest.QueryIdAndPath.path)
  return _impl_.path_.Release();
}
inline void GetJobsRequest_QueryIdAndPath::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.GetJobsRequest.QueryIdAndPath.path)
}

// -------------------------------------------------------------------

// GetJobsRequest

// .beeremote.GetJobsRequest.QueryIdAndPath by_job_id_and_path = 1;
inline bool GetJobsRequest::has_by_job_id_and_path() const {
  return query_case() == kByJobIdAndPath;
}
inline bool GetJobsRequest::_internal_has_by_job_id_and_path() const {
  return query_case() == kByJobIdAndPath;
}
inline void GetJobsRequest::set_has_by_job_id_and_path() {
  _impl_._oneof_case_[0] = kByJobIdAndPath;
}
inline void GetJobsRequest::clear_by_job_id_and_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (query_case() == kByJobIdAndPath) {
    if (GetArena() == nullptr) {
      delete _impl_.query_.by_job_id_and_path_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.query_.by_job_id_and_path_);
    }
    clear_has_query();
  }
}
inline ::beeremote::GetJobsRequest_QueryIdAndPath* GetJobsRequest::release_by_job_id_and_path() {
  // @@protoc_insertion_point(field_release:beeremote.GetJobsRequest.by_job_id_and_path)
  if (query_case() == kByJobIdAndPath) {
    clear_has_query();
    auto* temp = _impl_.query_.by_job_id_and_path_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.query_.by_job_id_and_path_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::beeremote::GetJobsRequest_QueryIdAndPath& GetJobsRequest::_internal_by_job_id_and_path() const {
  return query_case() == kByJobIdAndPath ? *_impl_.query_.by_job_id_and_path_ : reinterpret_cast<::beeremote::GetJobsRequest_QueryIdAndPath&>(::beeremote::_GetJobsRequest_QueryIdAndPath_default_instance_);
}
inline const ::beeremote::GetJobsRequest_QueryIdAndPath& GetJobsRequest::by_job_id_and_path() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsRequest.by_job_id_and_path)
  return _internal_by_job_id_and_path();
}
inline ::beeremote::GetJobsRequest_QueryIdAndPath* GetJobsRequest::unsafe_arena_release_by_job_id_and_path() {
  // @@protoc_insertion_point(field_unsafe_arena_release:beeremote.GetJobsRequest.by_job_id_and_path)
  if (query_case() == kByJobIdAndPath) {
    clear_has_query();
    auto* temp = _impl_.query_.by_job_id_and_path_;
    _impl_.query_.by_job_id_and_path_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void GetJobsRequest::unsafe_arena_set_allocated_by_job_id_and_path(::beeremote::GetJobsRequest_QueryIdAndPath* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_query();
  if (value) {
    set_has_by_job_id_and_path();
    _impl_.query_.by_job_id_and_path_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.GetJobsRequest.by_job_id_and_path)
}
inline ::beeremote::GetJobsRequest_QueryIdAndPath* GetJobsRequest::_internal_mutable_by_job_id_and_path() {
  if (query_case() != kByJobIdAndPath) {
    clear_query();
    set_has_by_job_id_and_path();
    _impl_.query_.by_job_id_and_path_ =
        ::google::protobuf::Message::DefaultConstruct<::beeremote::GetJobsRequest_QueryIdAndPath>(GetArena());
  }
  return _impl_.query_.by_job_id_and_path_;
}
inline ::beeremote::GetJobsRequest_QueryIdAndPath* GetJobsRequest::mutable_by_job_id_and_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::beeremote::GetJobsRequest_QueryIdAndPath* _msg = _internal_mutable_by_job_id_and_path();
  // @@protoc_insertion_point(field_mutable:beeremote.GetJobsRequest.by_job_id_and_path)
  return _msg;
}

// string by_exact_path = 2;
inline bool GetJobsRequest::has_by_exact_path() const {
  return query_case() == kByExactPath;
}
inline void GetJobsRequest::set_has_by_exact_path() {
  _impl_._oneof_case_[0] = kByExactPath;
}
inline void GetJobsRequest::clear_by_exact_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (query_case() == kByExactPath) {
    _impl_.query_.by_exact_path_.Destroy();
    clear_has_query();
  }
}
inline const std::string& GetJobsRequest::by_exact_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsRequest.by_exact_path)
  return _internal_by_exact_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetJobsRequest::set_by_exact_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (query_case() != kByExactPath) {
    clear_query();

    set_has_by_exact_path();
    _impl_.query_.by_exact_path_.InitDefault();
  }
  _impl_.query_.by_exact_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.GetJobsRequest.by_exact_path)
}
inline std::string* GetJobsRequest::mutable_by_exact_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_by_exact_path();
  // @@protoc_insertion_point(field_mutable:beeremote.GetJobsRequest.by_exact_path)
  return _s;
}
inline const std::string& GetJobsRequest::_internal_by_exact_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (query_case() != kByExactPath) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.query_.by_exact_path_.Get();
}
inline void GetJobsRequest::_internal_set_by_exact_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (query_case() != kByExactPath) {
    clear_query();

    set_has_by_exact_path();
    _impl_.query_.by_exact_path_.InitDefault();
  }
  _impl_.query_.by_exact_path_.Set(value, GetArena());
}
inline std::string* GetJobsRequest::_internal_mutable_by_exact_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (query_case() != kByExactPath) {
    clear_query();

    set_has_by_exact_path();
    _impl_.query_.by_exact_path_.InitDefault();
  }
  return _impl_.query_.by_exact_path_.Mutable( GetArena());
}
inline std::string* GetJobsRequest::release_by_exact_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.GetJobsRequest.by_exact_path)
  if (query_case() != kByExactPath) {
    return nullptr;
  }
  clear_has_query();
  return _impl_.query_.by_exact_path_.Release();
}
inline void GetJobsRequest::set_allocated_by_exact_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_query()) {
    clear_query();
  }
  if (value != nullptr) {
    set_has_by_exact_path();
    _impl_.query_.by_exact_path_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.GetJobsRequest.by_exact_path)
}

// string by_path_prefix = 3;
inline bool GetJobsRequest::has_by_path_prefix() const {
  return query_case() == kByPathPrefix;
}
inline void GetJobsRequest::set_has_by_path_prefix() {
  _impl_._oneof_case_[0] = kByPathPrefix;
}
inline void GetJobsRequest::clear_by_path_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (query_case() == kByPathPrefix) {
    _impl_.query_.by_path_prefix_.Destroy();
    clear_has_query();
  }
}
inline const std::string& GetJobsRequest::by_path_prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsRequest.by_path_prefix)
  return _internal_by_path_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetJobsRequest::set_by_path_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (query_case() != kByPathPrefix) {
    clear_query();

    set_has_by_path_prefix();
    _impl_.query_.by_path_prefix_.InitDefault();
  }
  _impl_.query_.by_path_prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.GetJobsRequest.by_path_prefix)
}
inline std::string* GetJobsRequest::mutable_by_path_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_by_path_prefix();
  // @@protoc_insertion_point(field_mutable:beeremote.GetJobsRequest.by_path_prefix)
  return _s;
}
inline const std::string& GetJobsRequest::_internal_by_path_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (query_case() != kByPathPrefix) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.query_.by_path_prefix_.Get();
}
inline void GetJobsRequest::_internal_set_by_path_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (query_case() != kByPathPrefix) {
    clear_query();

    set_has_by_path_prefix();
    _impl_.query_.by_path_prefix_.InitDefault();
  }
  _impl_.query_.by_path_prefix_.Set(value, GetArena());
}
inline std::string* GetJobsRequest::_internal_mutable_by_path_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (query_case() != kByPathPrefix) {
    clear_query();

    set_has_by_path_prefix();
    _impl_.query_.by_path_prefix_.InitDefault();
  }
  return _impl_.query_.by_path_prefix_.Mutable( GetArena());
}
inline std::string* GetJobsRequest::release_by_path_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.GetJobsRequest.by_path_prefix)
  if (query_case() != kByPathPrefix) {
    return nullptr;
  }
  clear_has_query();
  return _impl_.query_.by_path_prefix_.Release();
}
inline void GetJobsRequest::set_allocated_by_path_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_query()) {
    clear_query();
  }
  if (value != nullptr) {
    set_has_by_path_prefix();
    _impl_.query_.by_path_prefix_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.GetJobsRequest.by_path_prefix)
}

// bool include_work_requests = 4;
inline void GetJobsRequest::clear_include_work_requests() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_work_requests_ = false;
}
inline bool GetJobsRequest::include_work_requests() const {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsRequest.include_work_requests)
  return _internal_include_work_requests();
}
inline void GetJobsRequest::set_include_work_requests(bool value) {
  _internal_set_include_work_requests(value);
  // @@protoc_insertion_point(field_set:beeremote.GetJobsRequest.include_work_requests)
}
inline bool GetJobsRequest::_internal_include_work_requests() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_work_requests_;
}
inline void GetJobsRequest::_internal_set_include_work_requests(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_work_requests_ = value;
}

// bool include_work_results = 5;
inline void GetJobsRequest::clear_include_work_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_work_results_ = false;
}
inline bool GetJobsRequest::include_work_results() const {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsRequest.include_work_results)
  return _internal_include_work_results();
}
inline void GetJobsRequest::set_include_work_results(bool value) {
  _internal_set_include_work_results(value);
  // @@protoc_insertion_point(field_set:beeremote.GetJobsRequest.include_work_results)
}
inline bool GetJobsRequest::_internal_include_work_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_work_results_;
}
inline void GetJobsRequest::_internal_set_include_work_results(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_work_results_ = value;
}

// bool update_work_results = 6;
inline void GetJobsRequest::clear_update_work_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_work_results_ = false;
}
inline bool GetJobsRequest::update_work_results() const {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsRequest.update_work_results)
  return _internal_update_work_results();
}
inline void GetJobsRequest::set_update_work_results(bool value) {
  _internal_set_update_work_results(value);
  // @@protoc_insertion_point(field_set:beeremote.GetJobsRequest.update_work_results)
}
inline bool GetJobsRequest::_internal_update_work_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.update_work_results_;
}
inline void GetJobsRequest::_internal_set_update_work_results(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_work_results_ = value;
}

inline bool GetJobsRequest::has_query() const {
  return query_case() != QUERY_NOT_SET;
}
inline void GetJobsRequest::clear_has_query() {
  _impl_._oneof_case_[0] = QUERY_NOT_SET;
}
inline GetJobsRequest::QueryCase GetJobsRequest::query_case() const {
  return GetJobsRequest::QueryCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetJobsResponse

// string path = 1;
inline void GetJobsResponse::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& GetJobsResponse::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsResponse.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetJobsResponse::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:beeremote.GetJobsResponse.path)
}
inline std::string* GetJobsResponse::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:beeremote.GetJobsResponse.path)
  return _s;
}
inline const std::string& GetJobsResponse::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void GetJobsResponse::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* GetJobsResponse::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* GetJobsResponse::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.GetJobsResponse.path)
  return _impl_.path_.Release();
}
inline void GetJobsResponse::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:beeremote.GetJobsResponse.path)
}

// repeated .beeremote.JobResult results = 2;
inline int GetJobsResponse::_internal_results_size() const {
  return _internal_results().size();
}
inline int GetJobsResponse::results_size() const {
  return _internal_results_size();
}
inline void GetJobsResponse::clear_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.results_.Clear();
}
inline ::beeremote::JobResult* GetJobsResponse::mutable_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:beeremote.GetJobsResponse.results)
  return _internal_mutable_results()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>* GetJobsResponse::mutable_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:beeremote.GetJobsResponse.results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_results();
}
inline const ::beeremote::JobResult& GetJobsResponse::results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.GetJobsResponse.results)
  return _internal_results().Get(index);
}
inline ::beeremote::JobResult* GetJobsResponse::add_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::beeremote::JobResult* _add = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add:beeremote.GetJobsResponse.results)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>& GetJobsResponse::results() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:beeremote.GetJobsResponse.results)
  return _internal_results();
}
inline const ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>&
GetJobsResponse::_internal_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<::beeremote::JobResult>*
GetJobsResponse::_internal_mutable_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// UpdateWorkRequest

// .flex.Work work = 1;
inline bool UpdateWorkRequest::has_work() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.work_ != nullptr);
  return value;
}
inline const ::flex::Work& UpdateWorkRequest::_internal_work() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::flex::Work* p = _impl_.work_;
  return p != nullptr ? *p : reinterpret_cast<const ::flex::Work&>(::flex::_Work_default_instance_);
}
inline const ::flex::Work& UpdateWorkRequest::work() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.UpdateWorkRequest.work)
  return _internal_work();
}
inline void UpdateWorkRequest::unsafe_arena_set_allocated_work(::flex::Work* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.work_);
  }
  _impl_.work_ = reinterpret_cast<::flex::Work*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:beeremote.UpdateWorkRequest.work)
}
inline ::flex::Work* UpdateWorkRequest::release_work() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::flex::Work* released = _impl_.work_;
  _impl_.work_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::flex::Work* UpdateWorkRequest::unsafe_arena_release_work() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:beeremote.UpdateWorkRequest.work)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::flex::Work* temp = _impl_.work_;
  _impl_.work_ = nullptr;
  return temp;
}
inline ::flex::Work* UpdateWorkRequest::_internal_mutable_work() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.work_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::flex::Work>(GetArena());
    _impl_.work_ = reinterpret_cast<::flex::Work*>(p);
  }
  return _impl_.work_;
}
inline ::flex::Work* UpdateWorkRequest::mutable_work() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::flex::Work* _msg = _internal_mutable_work();
  // @@protoc_insertion_point(field_mutable:beeremote.UpdateWorkRequest.work)
  return _msg;
}
inline void UpdateWorkRequest::set_allocated_work(::flex::Work* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.work_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.work_ = reinterpret_cast<::flex::Work*>(value);
  // @@protoc_insertion_point(field_set_allocated:beeremote.UpdateWorkRequest.work)
}

// -------------------------------------------------------------------

// UpdateWorkResponse

// -------------------------------------------------------------------

// GetRSTConfigRequest

// -------------------------------------------------------------------

// GetRSTConfigResponse

// repeated .flex.RemoteStorageTarget rsts = 1;
inline int GetRSTConfigResponse::_internal_rsts_size() const {
  return _internal_rsts().size();
}
inline int GetRSTConfigResponse::rsts_size() const {
  return _internal_rsts_size();
}
inline ::flex::RemoteStorageTarget* GetRSTConfigResponse::mutable_rsts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:beeremote.GetRSTConfigResponse.rsts)
  return _internal_mutable_rsts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::flex::RemoteStorageTarget>* GetRSTConfigResponse::mutable_rsts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:beeremote.GetRSTConfigResponse.rsts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_rsts();
}
inline const ::flex::RemoteStorageTarget& GetRSTConfigResponse::rsts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:beeremote.GetRSTConfigResponse.rsts)
  return _internal_rsts().Get(index);
}
inline ::flex::RemoteStorageTarget* GetRSTConfigResponse::add_rsts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::flex::RemoteStorageTarget* _add = _internal_mutable_rsts()->Add();
  // @@protoc_insertion_point(field_add:beeremote.GetRSTConfigResponse.rsts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::flex::RemoteStorageTarget>& GetRSTConfigResponse::rsts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:beeremote.GetRSTConfigResponse.rsts)
  return _internal_rsts();
}
inline const ::google::protobuf::RepeatedPtrField<::flex::RemoteStorageTarget>&
GetRSTConfigResponse::_internal_rsts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rsts_;
}
inline ::google::protobuf::RepeatedPtrField<::flex::RemoteStorageTarget>*
GetRSTConfigResponse::_internal_mutable_rsts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.rsts_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace beeremote


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::beeremote::Job_State> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::beeremote::Job_State>() {
  return ::beeremote::Job_State_descriptor();
}
template <>
struct is_proto_enum<::beeremote::UpdateJobsRequest_NewState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::beeremote::UpdateJobsRequest_NewState>() {
  return ::beeremote::UpdateJobsRequest_NewState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // beeremote_2eproto_2epb_2eh

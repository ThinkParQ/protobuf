// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: flex.proto
// Protobuf C++ Version: 5.29.2

#include "flex.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace flex {

inline constexpr WorkRequest_Segment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : offset_start_{::int64_t{0}},
        offset_stop_{::int64_t{0}},
        parts_start_{0},
        parts_stop_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkRequest_Segment::WorkRequest_Segment(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorkRequest_SegmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkRequest_SegmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkRequest_SegmentDefaultTypeInternal() {}
  union {
    WorkRequest_Segment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkRequest_SegmentDefaultTypeInternal _WorkRequest_Segment_default_instance_;

inline constexpr Work_Status::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_{static_cast< ::flex::Work_State >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Work_Status::Work_Status(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Work_StatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Work_StatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Work_StatusDefaultTypeInternal() {}
  union {
    Work_Status _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Work_StatusDefaultTypeInternal _Work_Status_default_instance_;

inline constexpr Work_Part::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entity_tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        checksum_sha256_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_start_{::int64_t{0}},
        offset_stop_{::int64_t{0}},
        part_number_{0},
        completed_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Work_Part::Work_Part(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Work_PartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Work_PartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Work_PartDefaultTypeInternal() {}
  union {
    Work_Part _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Work_PartDefaultTypeInternal _Work_Part_default_instance_;

inline constexpr UpdateWorkRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : job_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_state_{static_cast< ::flex::UpdateWorkRequest_NewState >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateWorkRequest::UpdateWorkRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateWorkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateWorkRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateWorkRequestDefaultTypeInternal() {}
  union {
    UpdateWorkRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateWorkRequestDefaultTypeInternal _UpdateWorkRequest_default_instance_;

inline constexpr UpdateConfigResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{static_cast< ::flex::UpdateConfigResponse_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateConfigResponse::UpdateConfigResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateConfigResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateConfigResponseDefaultTypeInternal() {}
  union {
    UpdateConfigResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateConfigResponseDefaultTypeInternal _UpdateConfigResponse_default_instance_;

inline constexpr RemoteStorageTarget_S3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : endpoint_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        partition_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        region_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bucket_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        access_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secret_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RemoteStorageTarget_S3::RemoteStorageTarget_S3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoteStorageTarget_S3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoteStorageTarget_S3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoteStorageTarget_S3DefaultTypeInternal() {}
  union {
    RemoteStorageTarget_S3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoteStorageTarget_S3DefaultTypeInternal _RemoteStorageTarget_S3_default_instance_;

inline constexpr RemoteStorageTarget_Policies::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : fast_start_max_size_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RemoteStorageTarget_Policies::RemoteStorageTarget_Policies(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoteStorageTarget_PoliciesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoteStorageTarget_PoliciesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoteStorageTarget_PoliciesDefaultTypeInternal() {}
  union {
    RemoteStorageTarget_Policies _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoteStorageTarget_PoliciesDefaultTypeInternal _RemoteStorageTarget_Policies_default_instance_;

inline constexpr RemoteStorageTarget_POSIX::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RemoteStorageTarget_POSIX::RemoteStorageTarget_POSIX(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoteStorageTarget_POSIXDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoteStorageTarget_POSIXDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoteStorageTarget_POSIXDefaultTypeInternal() {}
  union {
    RemoteStorageTarget_POSIX _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoteStorageTarget_POSIXDefaultTypeInternal _RemoteStorageTarget_POSIX_default_instance_;

inline constexpr HeartbeatRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : include_stats_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HeartbeatRequest::HeartbeatRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeartbeatRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatRequestDefaultTypeInternal() {}
  union {
    HeartbeatRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatRequestDefaultTypeInternal _HeartbeatRequest_default_instance_;

inline constexpr BulkUpdateWorkResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BulkUpdateWorkResponse::BulkUpdateWorkResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BulkUpdateWorkResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BulkUpdateWorkResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BulkUpdateWorkResponseDefaultTypeInternal() {}
  union {
    BulkUpdateWorkResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BulkUpdateWorkResponseDefaultTypeInternal _BulkUpdateWorkResponse_default_instance_;

inline constexpr BulkUpdateWorkRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : new_state_{static_cast< ::flex::BulkUpdateWorkRequest_NewState >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BulkUpdateWorkRequest::BulkUpdateWorkRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BulkUpdateWorkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BulkUpdateWorkRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BulkUpdateWorkRequestDefaultTypeInternal() {}
  union {
    BulkUpdateWorkRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BulkUpdateWorkRequestDefaultTypeInternal _BulkUpdateWorkRequest_default_instance_;

inline constexpr BeeRemoteNode::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mgmtd_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mgmtd_tls_cert_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        auth_secret_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mgmtd_tls_disable_verification_{false},
        mgmtd_tls_disable_{false},
        mgmtd_use_proxy_{false},
        auth_disable_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BeeRemoteNode::BeeRemoteNode(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BeeRemoteNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BeeRemoteNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BeeRemoteNodeDefaultTypeInternal() {}
  union {
    BeeRemoteNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BeeRemoteNodeDefaultTypeInternal _BeeRemoteNode_default_instance_;

inline constexpr Work::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parts_{},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        job_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr},
        job_builder_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Work::Work(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkDefaultTypeInternal() {}
  union {
    Work _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkDefaultTypeInternal _Work_default_instance_;

inline constexpr RemoteStorageTarget_Azure::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        s3_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RemoteStorageTarget_Azure::RemoteStorageTarget_Azure(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoteStorageTarget_AzureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoteStorageTarget_AzureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoteStorageTarget_AzureDefaultTypeInternal() {}
  union {
    RemoteStorageTarget_Azure _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoteStorageTarget_AzureDefaultTypeInternal _RemoteStorageTarget_Azure_default_instance_;

inline constexpr NodeStats::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        timestamp_{nullptr},
        active_requests_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR NodeStats::NodeStats(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeStatsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeStatsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeStatsDefaultTypeInternal() {}
  union {
    NodeStats _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeStatsDefaultTypeInternal _NodeStats_default_instance_;

inline constexpr JobLockedInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stub_url_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        externalid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mtime_{nullptr},
        remote_mtime_{nullptr},
        read_write_locked_{false},
        exists_{false},
        mode_{0u},
        size_{::int64_t{0}},
        remote_size_{::int64_t{0}},
        stub_url_rst_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR JobLockedInfo::JobLockedInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JobLockedInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JobLockedInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JobLockedInfoDefaultTypeInternal() {}
  union {
    JobLockedInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JobLockedInfoDefaultTypeInternal _JobLockedInfo_default_instance_;

inline constexpr UpdateWorkResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        work_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateWorkResponse::UpdateWorkResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateWorkResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateWorkResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateWorkResponseDefaultTypeInternal() {}
  union {
    UpdateWorkResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateWorkResponseDefaultTypeInternal _UpdateWorkResponse_default_instance_;

inline constexpr SyncJob::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        remote_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        locked_info_{nullptr},
        operation_{static_cast< ::flex::SyncJob_Operation >(0)},
        overwrite_{false},
        flatten_{false},
        update_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SyncJob::SyncJob(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SyncJobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncJobDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncJobDefaultTypeInternal() {}
  union {
    SyncJob _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncJobDefaultTypeInternal _SyncJob_default_instance_;

inline constexpr SubmitWorkResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        work_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitWorkResponse::SubmitWorkResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitWorkResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitWorkResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitWorkResponseDefaultTypeInternal() {}
  union {
    SubmitWorkResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitWorkResponseDefaultTypeInternal _SubmitWorkResponse_default_instance_;

inline constexpr RemoteStorageTarget::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        policies_{nullptr},
        id_{0u},
        type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RemoteStorageTarget::RemoteStorageTarget(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoteStorageTargetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoteStorageTargetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoteStorageTargetDefaultTypeInternal() {}
  union {
    RemoteStorageTarget _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoteStorageTargetDefaultTypeInternal _RemoteStorageTarget_default_instance_;

inline constexpr JobRequestCfg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        remotepath_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        locked_info_{nullptr},
        remotestoragetarget_{0u},
        download_{false},
        stub_local_{false},
        overwrite_{false},
        flatten_{false},
        force_{false},
        update_{false} {}

template <typename>
PROTOBUF_CONSTEXPR JobRequestCfg::JobRequestCfg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct JobRequestCfgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR JobRequestCfgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~JobRequestCfgDefaultTypeInternal() {}
  union {
    JobRequestCfg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 JobRequestCfgDefaultTypeInternal _JobRequestCfg_default_instance_;

inline constexpr HeartbeatResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_stats_{nullptr},
        is_ready_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HeartbeatResponse::HeartbeatResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeartbeatResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeartbeatResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeartbeatResponseDefaultTypeInternal() {}
  union {
    HeartbeatResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeartbeatResponseDefaultTypeInternal _HeartbeatResponse_default_instance_;

inline constexpr UpdateConfigRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        rsts_{},
        bee_remote_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateConfigRequest::UpdateConfigRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateConfigRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateConfigRequestDefaultTypeInternal() {}
  union {
    UpdateConfigRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateConfigRequestDefaultTypeInternal _UpdateConfigRequest_default_instance_;

inline constexpr MockJob::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        external_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        locked_info_{nullptr},
        cfg_{nullptr},
        file_size_{::int64_t{0}},
        num_test_segments_{0},
        should_fail_{false} {}

template <typename>
PROTOBUF_CONSTEXPR MockJob::MockJob(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MockJobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MockJobDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MockJobDefaultTypeInternal() {}
  union {
    MockJob _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MockJobDefaultTypeInternal _MockJob_default_instance_;

inline constexpr BuilderJob::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cfg_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR BuilderJob::BuilderJob(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BuilderJobDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BuilderJobDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BuilderJobDefaultTypeInternal() {}
  union {
    BuilderJob _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BuilderJobDefaultTypeInternal _BuilderJob_default_instance_;

inline constexpr WorkRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        job_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        request_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        external_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        segment_{nullptr},
        remote_storage_target_{0u},
        stub_local_{false},
        update_{false},
        Type_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR WorkRequest::WorkRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WorkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkRequestDefaultTypeInternal() {}
  union {
    WorkRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkRequestDefaultTypeInternal _WorkRequest_default_instance_;

inline constexpr SubmitWorkRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        request_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitWorkRequest::SubmitWorkRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitWorkRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitWorkRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitWorkRequestDefaultTypeInternal() {}
  union {
    SubmitWorkRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitWorkRequestDefaultTypeInternal _SubmitWorkRequest_default_instance_;
}  // namespace flex
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_flex_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_flex_2eproto = nullptr;
const ::uint32_t
    TableStruct_flex_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::HeartbeatRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::HeartbeatRequest, _impl_.include_stats_),
        PROTOBUF_FIELD_OFFSET(::flex::HeartbeatResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::HeartbeatResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::HeartbeatResponse, _impl_.is_ready_),
        PROTOBUF_FIELD_OFFSET(::flex::HeartbeatResponse, _impl_.node_stats_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::flex::NodeStats, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::NodeStats, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::NodeStats, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::flex::NodeStats, _impl_.active_requests_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::flex::SubmitWorkRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::SubmitWorkRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::SubmitWorkRequest, _impl_.request_),
        0,
        PROTOBUF_FIELD_OFFSET(::flex::SubmitWorkResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::SubmitWorkResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::SubmitWorkResponse, _impl_.work_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::UpdateWorkRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::UpdateWorkRequest, _impl_.job_id_),
        PROTOBUF_FIELD_OFFSET(::flex::UpdateWorkRequest, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::flex::UpdateWorkRequest, _impl_.new_state_),
        PROTOBUF_FIELD_OFFSET(::flex::UpdateWorkResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::UpdateWorkResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::UpdateWorkResponse, _impl_.work_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::BulkUpdateWorkRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::BulkUpdateWorkRequest, _impl_.new_state_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::BulkUpdateWorkResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::BulkUpdateWorkResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::flex::BulkUpdateWorkResponse, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.read_write_locked_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.exists_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.mtime_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.remote_size_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.remote_mtime_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.stub_url_rst_id_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.stub_url_path_),
        PROTOBUF_FIELD_OFFSET(::flex::JobLockedInfo, _impl_.externalid_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.remotestoragetarget_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.remotepath_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.download_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.stub_local_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.overwrite_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.flatten_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.force_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.locked_info_),
        PROTOBUF_FIELD_OFFSET(::flex::JobRequestCfg, _impl_.update_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest_Segment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest_Segment, _impl_.offset_start_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest_Segment, _impl_.offset_stop_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest_Segment, _impl_.parts_start_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest_Segment, _impl_.parts_stop_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_.job_id_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_.external_id_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_.segment_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_.remote_storage_target_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_.stub_local_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_.update_),
        PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_.Type_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::flex::BuilderJob, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::BuilderJob, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::BuilderJob, _impl_.cfg_),
        0,
        PROTOBUF_FIELD_OFFSET(::flex::MockJob, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::MockJob, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::MockJob, _impl_.num_test_segments_),
        PROTOBUF_FIELD_OFFSET(::flex::MockJob, _impl_.file_size_),
        PROTOBUF_FIELD_OFFSET(::flex::MockJob, _impl_.external_id_),
        PROTOBUF_FIELD_OFFSET(::flex::MockJob, _impl_.should_fail_),
        PROTOBUF_FIELD_OFFSET(::flex::MockJob, _impl_.locked_info_),
        PROTOBUF_FIELD_OFFSET(::flex::MockJob, _impl_.cfg_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::flex::SyncJob, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::SyncJob, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::SyncJob, _impl_.operation_),
        PROTOBUF_FIELD_OFFSET(::flex::SyncJob, _impl_.overwrite_),
        PROTOBUF_FIELD_OFFSET(::flex::SyncJob, _impl_.remote_path_),
        PROTOBUF_FIELD_OFFSET(::flex::SyncJob, _impl_.flatten_),
        PROTOBUF_FIELD_OFFSET(::flex::SyncJob, _impl_.locked_info_),
        PROTOBUF_FIELD_OFFSET(::flex::SyncJob, _impl_.update_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::Work_Status, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::Work_Status, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::flex::Work_Status, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::Work_Part, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::Work_Part, _impl_.part_number_),
        PROTOBUF_FIELD_OFFSET(::flex::Work_Part, _impl_.offset_start_),
        PROTOBUF_FIELD_OFFSET(::flex::Work_Part, _impl_.offset_stop_),
        PROTOBUF_FIELD_OFFSET(::flex::Work_Part, _impl_.entity_tag_),
        PROTOBUF_FIELD_OFFSET(::flex::Work_Part, _impl_.checksum_sha256_),
        PROTOBUF_FIELD_OFFSET(::flex::Work_Part, _impl_.completed_),
        PROTOBUF_FIELD_OFFSET(::flex::Work, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::Work, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::Work, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::flex::Work, _impl_.job_id_),
        PROTOBUF_FIELD_OFFSET(::flex::Work, _impl_.request_id_),
        PROTOBUF_FIELD_OFFSET(::flex::Work, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::flex::Work, _impl_.parts_),
        PROTOBUF_FIELD_OFFSET(::flex::Work, _impl_.job_builder_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::flex::UpdateConfigRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::UpdateConfigRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::UpdateConfigRequest, _impl_.bee_remote_),
        PROTOBUF_FIELD_OFFSET(::flex::UpdateConfigRequest, _impl_.rsts_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::UpdateConfigResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::UpdateConfigResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::flex::UpdateConfigResponse, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _impl_.mgmtd_address_),
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _impl_.mgmtd_tls_cert_),
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _impl_.mgmtd_tls_disable_verification_),
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _impl_.mgmtd_tls_disable_),
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _impl_.mgmtd_use_proxy_),
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _impl_.auth_secret_),
        PROTOBUF_FIELD_OFFSET(::flex::BeeRemoteNode, _impl_.auth_disable_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_Policies, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_Policies, _impl_.fast_start_max_size_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_S3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_S3, _impl_.endpoint_url_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_S3, _impl_.partition_id_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_S3, _impl_.region_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_S3, _impl_.bucket_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_S3, _impl_.access_key_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_S3, _impl_.secret_key_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_Azure, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_Azure, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_Azure, _impl_.s3_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_Azure, _impl_.account_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_POSIX, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget_POSIX, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget, _impl_.policies_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget, _impl_.type_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::flex::HeartbeatRequest)},
        {9, 19, -1, sizeof(::flex::HeartbeatResponse)},
        {21, 31, -1, sizeof(::flex::NodeStats)},
        {33, 42, -1, sizeof(::flex::SubmitWorkRequest)},
        {43, 52, -1, sizeof(::flex::SubmitWorkResponse)},
        {53, -1, -1, sizeof(::flex::UpdateWorkRequest)},
        {64, 73, -1, sizeof(::flex::UpdateWorkResponse)},
        {74, -1, -1, sizeof(::flex::BulkUpdateWorkRequest)},
        {83, -1, -1, sizeof(::flex::BulkUpdateWorkResponse)},
        {93, 111, -1, sizeof(::flex::JobLockedInfo)},
        {121, 139, -1, sizeof(::flex::JobRequestCfg)},
        {149, -1, -1, sizeof(::flex::WorkRequest_Segment)},
        {161, 181, -1, sizeof(::flex::WorkRequest)},
        {192, 201, -1, sizeof(::flex::BuilderJob)},
        {202, 216, -1, sizeof(::flex::MockJob)},
        {222, 236, -1, sizeof(::flex::SyncJob)},
        {242, -1, -1, sizeof(::flex::Work_Status)},
        {252, -1, -1, sizeof(::flex::Work_Part)},
        {266, 280, -1, sizeof(::flex::Work)},
        {286, 296, -1, sizeof(::flex::UpdateConfigRequest)},
        {298, -1, -1, sizeof(::flex::UpdateConfigResponse)},
        {308, -1, -1, sizeof(::flex::BeeRemoteNode)},
        {325, -1, -1, sizeof(::flex::RemoteStorageTarget_Policies)},
        {334, -1, -1, sizeof(::flex::RemoteStorageTarget_S3)},
        {348, 358, -1, sizeof(::flex::RemoteStorageTarget_Azure)},
        {360, -1, -1, sizeof(::flex::RemoteStorageTarget_POSIX)},
        {369, 385, -1, sizeof(::flex::RemoteStorageTarget)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::flex::_HeartbeatRequest_default_instance_._instance,
    &::flex::_HeartbeatResponse_default_instance_._instance,
    &::flex::_NodeStats_default_instance_._instance,
    &::flex::_SubmitWorkRequest_default_instance_._instance,
    &::flex::_SubmitWorkResponse_default_instance_._instance,
    &::flex::_UpdateWorkRequest_default_instance_._instance,
    &::flex::_UpdateWorkResponse_default_instance_._instance,
    &::flex::_BulkUpdateWorkRequest_default_instance_._instance,
    &::flex::_BulkUpdateWorkResponse_default_instance_._instance,
    &::flex::_JobLockedInfo_default_instance_._instance,
    &::flex::_JobRequestCfg_default_instance_._instance,
    &::flex::_WorkRequest_Segment_default_instance_._instance,
    &::flex::_WorkRequest_default_instance_._instance,
    &::flex::_BuilderJob_default_instance_._instance,
    &::flex::_MockJob_default_instance_._instance,
    &::flex::_SyncJob_default_instance_._instance,
    &::flex::_Work_Status_default_instance_._instance,
    &::flex::_Work_Part_default_instance_._instance,
    &::flex::_Work_default_instance_._instance,
    &::flex::_UpdateConfigRequest_default_instance_._instance,
    &::flex::_UpdateConfigResponse_default_instance_._instance,
    &::flex::_BeeRemoteNode_default_instance_._instance,
    &::flex::_RemoteStorageTarget_Policies_default_instance_._instance,
    &::flex::_RemoteStorageTarget_S3_default_instance_._instance,
    &::flex::_RemoteStorageTarget_Azure_default_instance_._instance,
    &::flex::_RemoteStorageTarget_POSIX_default_instance_._instance,
    &::flex::_RemoteStorageTarget_default_instance_._instance,
};
const char descriptor_table_protodef_flex_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nflex.proto\022\004flex\032\037google/protobuf/time"
    "stamp.proto\")\n\020HeartbeatRequest\022\025\n\rinclu"
    "de_stats\030\001 \001(\010\"J\n\021HeartbeatResponse\022\020\n\010i"
    "s_ready\030\001 \001(\010\022#\n\nnode_stats\030\002 \001(\0132\017.flex"
    ".NodeStats\"S\n\tNodeStats\022-\n\ttimestamp\030\001 \001"
    "(\0132\032.google.protobuf.Timestamp\022\027\n\017active"
    "_requests\030\002 \001(\003\"7\n\021SubmitWorkRequest\022\"\n\007"
    "request\030\001 \001(\0132\021.flex.WorkRequest\".\n\022Subm"
    "itWorkResponse\022\030\n\004work\030\001 \001(\0132\n.flex.Work"
    "\"\230\001\n\021UpdateWorkRequest\022\016\n\006job_id\030\001 \001(\t\022\022"
    "\n\nrequest_id\030\002 \001(\t\0223\n\tnew_state\030\003 \001(\0162 ."
    "flex.UpdateWorkRequest.NewState\"*\n\010NewSt"
    "ate\022\017\n\013UNSPECIFIED\020\000\022\r\n\tCANCELLED\020\001\".\n\022U"
    "pdateWorkResponse\022\030\n\004work\030\001 \001(\0132\n.flex.W"
    "ork\"|\n\025BulkUpdateWorkRequest\0227\n\tnew_stat"
    "e\030\001 \001(\0162$.flex.BulkUpdateWorkRequest.New"
    "State\"*\n\010NewState\022\017\n\013UNSPECIFIED\020\000\022\r\n\tUN"
    "CHANGED\020\001\":\n\026BulkUpdateWorkResponse\022\017\n\007s"
    "uccess\030\001 \001(\010\022\017\n\007message\030\002 \001(\t\"\214\002\n\rJobLoc"
    "kedInfo\022\031\n\021read_write_locked\030\001 \001(\010\022\016\n\006ex"
    "ists\030\002 \001(\010\022\014\n\004size\030\003 \001(\003\022\014\n\004mode\030\004 \001(\r\022)"
    "\n\005mtime\030\005 \001(\0132\032.google.protobuf.Timestam"
    "p\022\023\n\013remote_size\030\006 \001(\003\0220\n\014remote_mtime\030\007"
    " \001(\0132\032.google.protobuf.Timestamp\022\027\n\017stub"
    "_url_rst_id\030\010 \001(\r\022\025\n\rstub_url_path\030\t \001(\t"
    "\022\022\n\nexternalId\030\n \001(\t\"\361\001\n\rJobRequestCfg\022\033"
    "\n\023remoteStorageTarget\030\001 \001(\r\022\014\n\004path\030\002 \001("
    "\t\022\022\n\nremotePath\030\003 \001(\t\022\020\n\010download\030\004 \001(\010\022"
    "\022\n\nstub_local\030\005 \001(\010\022\021\n\toverwrite\030\006 \001(\010\022\017"
    "\n\007flatten\030\007 \001(\010\022\r\n\005force\030\010 \001(\010\022(\n\013locked"
    "_info\030\t \001(\0132\023.flex.JobLockedInfo\022\023\n\006upda"
    "te\030\n \001(\010H\000\210\001\001B\t\n\007_update\"\235\003\n\013WorkRequest"
    "\022\016\n\006job_id\030\001 \001(\t\022\022\n\nrequest_id\030\002 \001(\t\022\023\n\013"
    "external_id\030\003 \001(\t\022\014\n\004path\030\004 \001(\t\022*\n\007segme"
    "nt\030\005 \001(\0132\031.flex.WorkRequest.Segment\022\035\n\025r"
    "emote_storage_target\030\006 \001(\r\022\035\n\004mock\030\n \001(\013"
    "2\r.flex.MockJobH\000\022\035\n\004sync\030\013 \001(\0132\r.flex.S"
    "yncJobH\000\022#\n\007builder\030\014 \001(\0132\020.flex.Builder"
    "JobH\000\022\022\n\nstub_local\030\010 \001(\010\022\023\n\006update\030\t \001("
    "\010H\001\210\001\001\032]\n\007Segment\022\024\n\014offset_start\030\001 \001(\003\022"
    "\023\n\013offset_stop\030\002 \001(\003\022\023\n\013parts_start\030\003 \001("
    "\005\022\022\n\nparts_stop\030\004 \001(\005B\006\n\004TypeB\t\n\007_update"
    "\".\n\nBuilderJob\022 \n\003cfg\030\001 \001(\0132\023.flex.JobRe"
    "questCfg\"\255\001\n\007MockJob\022\031\n\021num_test_segment"
    "s\030\001 \001(\005\022\021\n\tfile_size\030\002 \001(\003\022\023\n\013external_i"
    "d\030\003 \001(\t\022\023\n\013should_fail\030\004 \001(\010\022(\n\013locked_i"
    "nfo\030\006 \001(\0132\023.flex.JobLockedInfo\022 \n\003cfg\030\007 "
    "\001(\0132\023.flex.JobRequestCfg\"\360\001\n\007SyncJob\022*\n\t"
    "operation\030\001 \001(\0162\027.flex.SyncJob.Operation"
    "\022\021\n\toverwrite\030\002 \001(\010\022\023\n\013remote_path\030\003 \001(\t"
    "\022\017\n\007flatten\030\005 \001(\010\022(\n\013locked_info\030\006 \001(\0132\023"
    ".flex.JobLockedInfo\022\023\n\006update\030\007 \001(\010H\000\210\001\001"
    "\"6\n\tOperation\022\017\n\013UNSPECIFIED\020\000\022\n\n\006UPLOAD"
    "\020\001\022\014\n\010DOWNLOAD\020\002B\t\n\007_update\"\333\003\n\004Work\022\014\n\004"
    "path\030\001 \001(\t\022\016\n\006job_id\030\002 \001(\t\022\022\n\nrequest_id"
    "\030\003 \001(\t\022!\n\006status\030\004 \001(\0132\021.flex.Work.Statu"
    "s\022\036\n\005parts\030\005 \003(\0132\017.flex.Work.Part\022\023\n\013job"
    "_builder\030\006 \001(\010\032:\n\006Status\022\037\n\005state\030\001 \001(\0162"
    "\020.flex.Work.State\022\017\n\007message\030\002 \001(\t\032\206\001\n\004P"
    "art\022\023\n\013part_number\030\001 \001(\005\022\024\n\014offset_start"
    "\030\002 \001(\003\022\023\n\013offset_stop\030\003 \001(\003\022\022\n\nentity_ta"
    "g\030\004 \001(\t\022\027\n\017checksum_sha256\030\005 \001(\t\022\021\n\tcomp"
    "leted\030\006 \001(\010\"\203\001\n\005State\022\017\n\013UNSPECIFIED\020\000\022\013"
    "\n\007UNKNOWN\020\001\022\013\n\007CREATED\020\002\022\r\n\tSCHEDULED\020\003\022"
    "\013\n\007RUNNING\020\004\022\t\n\005ERROR\020\006\022\n\n\006FAILED\020\007\022\r\n\tC"
    "ANCELLED\020\010\022\r\n\tCOMPLETED\020\t\"g\n\023UpdateConfi"
    "gRequest\022\'\n\nbee_remote\030\001 \001(\0132\023.flex.BeeR"
    "emoteNode\022\'\n\004rsts\030\002 \003(\0132\031.flex.RemoteSto"
    "rageTarget\"\234\001\n\024UpdateConfigResponse\0221\n\006r"
    "esult\030\001 \001(\0162!.flex.UpdateConfigResponse."
    "Result\022\017\n\007message\030\002 \001(\t\"@\n\006Result\022\017\n\013UNS"
    "PECIFIED\020\000\022\013\n\007SUCCESS\020\001\022\013\n\007PARTIAL\020\002\022\013\n\007"
    "FAILURE\020\003\"\342\001\n\rBeeRemoteNode\022\n\n\002id\030\001 \001(\t\022"
    "\017\n\007address\030\002 \001(\t\022\025\n\rmgmtd_address\030\003 \001(\t\022"
    "\026\n\016mgmtd_tls_cert\030\004 \001(\014\022&\n\036mgmtd_tls_dis"
    "able_verification\030\005 \001(\010\022\031\n\021mgmtd_tls_dis"
    "able\030\006 \001(\010\022\027\n\017mgmtd_use_proxy\030\t \001(\010\022\023\n\013a"
    "uth_secret\030\007 \001(\014\022\024\n\014auth_disable\030\010 \001(\010\"\213"
    "\004\n\023RemoteStorageTarget\022\n\n\002id\030\001 \001(\r\022\014\n\004na"
    "me\030\002 \001(\t\0224\n\010policies\030\003 \001(\0132\".flex.Remote"
    "StorageTarget.Policies\022*\n\002s3\030\004 \001(\0132\034.fle"
    "x.RemoteStorageTarget.S3H\000\0220\n\005posix\030\005 \001("
    "\0132\037.flex.RemoteStorageTarget.POSIXH\000\0220\n\005"
    "azure\030\006 \001(\0132\037.flex.RemoteStorageTarget.A"
    "zureH\000\022\016\n\004mock\030\007 \001(\tH\000\032\'\n\010Policies\022\033\n\023fa"
    "st_start_max_size\030\001 \001(\003\032x\n\002S3\022\024\n\014endpoin"
    "t_url\030\001 \001(\t\022\024\n\014partition_id\030\002 \001(\t\022\016\n\006reg"
    "ion\030\003 \001(\t\022\016\n\006bucket\030\004 \001(\t\022\022\n\naccess_key\030"
    "\005 \001(\t\022\022\n\nsecret_key\030\006 \001(\t\032B\n\005Azure\022(\n\002s3"
    "\030\001 \001(\0132\034.flex.RemoteStorageTarget.S3\022\017\n\007"
    "account\030\002 \001(\t\032\025\n\005POSIX\022\014\n\004path\030\001 \001(\tB\006\n\004"
    "type2\340\002\n\nWorkerNode\022E\n\014UpdateConfig\022\031.fl"
    "ex.UpdateConfigRequest\032\032.flex.UpdateConf"
    "igResponse\022<\n\tHeartbeat\022\026.flex.Heartbeat"
    "Request\032\027.flex.HeartbeatResponse\022\?\n\nSubm"
    "itWork\022\027.flex.SubmitWorkRequest\032\030.flex.S"
    "ubmitWorkResponse\022\?\n\nUpdateWork\022\027.flex.U"
    "pdateWorkRequest\032\030.flex.UpdateWorkRespon"
    "se\022K\n\016BulkUpdateWork\022\033.flex.BulkUpdateWo"
    "rkRequest\032\034.flex.BulkUpdateWorkResponseB"
    "\'Z%github.com/thinkparq/protobuf/go/flex"
    "b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_flex_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_flex_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_flex_2eproto = {
    false,
    false,
    4048,
    descriptor_table_protodef_flex_2eproto,
    "flex.proto",
    &descriptor_table_flex_2eproto_once,
    descriptor_table_flex_2eproto_deps,
    1,
    27,
    schemas,
    file_default_instances,
    TableStruct_flex_2eproto::offsets,
    file_level_enum_descriptors_flex_2eproto,
    file_level_service_descriptors_flex_2eproto,
};
namespace flex {
const ::google::protobuf::EnumDescriptor* UpdateWorkRequest_NewState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_flex_2eproto);
  return file_level_enum_descriptors_flex_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t UpdateWorkRequest_NewState_internal_data_[] = {
    131072u, 0u, };
bool UpdateWorkRequest_NewState_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr UpdateWorkRequest_NewState UpdateWorkRequest::UNSPECIFIED;
constexpr UpdateWorkRequest_NewState UpdateWorkRequest::CANCELLED;
constexpr UpdateWorkRequest_NewState UpdateWorkRequest::NewState_MIN;
constexpr UpdateWorkRequest_NewState UpdateWorkRequest::NewState_MAX;
constexpr int UpdateWorkRequest::NewState_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* BulkUpdateWorkRequest_NewState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_flex_2eproto);
  return file_level_enum_descriptors_flex_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t BulkUpdateWorkRequest_NewState_internal_data_[] = {
    131072u, 0u, };
bool BulkUpdateWorkRequest_NewState_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr BulkUpdateWorkRequest_NewState BulkUpdateWorkRequest::UNSPECIFIED;
constexpr BulkUpdateWorkRequest_NewState BulkUpdateWorkRequest::UNCHANGED;
constexpr BulkUpdateWorkRequest_NewState BulkUpdateWorkRequest::NewState_MIN;
constexpr BulkUpdateWorkRequest_NewState BulkUpdateWorkRequest::NewState_MAX;
constexpr int BulkUpdateWorkRequest::NewState_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* SyncJob_Operation_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_flex_2eproto);
  return file_level_enum_descriptors_flex_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t SyncJob_Operation_internal_data_[] = {
    196608u, 0u, };
bool SyncJob_Operation_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr SyncJob_Operation SyncJob::UNSPECIFIED;
constexpr SyncJob_Operation SyncJob::UPLOAD;
constexpr SyncJob_Operation SyncJob::DOWNLOAD;
constexpr SyncJob_Operation SyncJob::Operation_MIN;
constexpr SyncJob_Operation SyncJob::Operation_MAX;
constexpr int SyncJob::Operation_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Work_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_flex_2eproto);
  return file_level_enum_descriptors_flex_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t Work_State_internal_data_[] = {
    327680u, 32u, 30u, };
bool Work_State_IsValid(int value) {
  return 0 <= value && value <= 9 && ((991u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Work_State Work::UNSPECIFIED;
constexpr Work_State Work::UNKNOWN;
constexpr Work_State Work::CREATED;
constexpr Work_State Work::SCHEDULED;
constexpr Work_State Work::RUNNING;
constexpr Work_State Work::ERROR;
constexpr Work_State Work::FAILED;
constexpr Work_State Work::CANCELLED;
constexpr Work_State Work::COMPLETED;
constexpr Work_State Work::State_MIN;
constexpr Work_State Work::State_MAX;
constexpr int Work::State_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* UpdateConfigResponse_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_flex_2eproto);
  return file_level_enum_descriptors_flex_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t UpdateConfigResponse_Result_internal_data_[] = {
    262144u, 0u, };
bool UpdateConfigResponse_Result_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr UpdateConfigResponse_Result UpdateConfigResponse::UNSPECIFIED;
constexpr UpdateConfigResponse_Result UpdateConfigResponse::SUCCESS;
constexpr UpdateConfigResponse_Result UpdateConfigResponse::PARTIAL;
constexpr UpdateConfigResponse_Result UpdateConfigResponse::FAILURE;
constexpr UpdateConfigResponse_Result UpdateConfigResponse::Result_MIN;
constexpr UpdateConfigResponse_Result UpdateConfigResponse::Result_MAX;
constexpr int UpdateConfigResponse::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class HeartbeatRequest::_Internal {
 public:
};

HeartbeatRequest::HeartbeatRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.HeartbeatRequest)
}
HeartbeatRequest::HeartbeatRequest(
    ::google::protobuf::Arena* arena, const HeartbeatRequest& from)
    : HeartbeatRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE HeartbeatRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HeartbeatRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.include_stats_ = {};
}
HeartbeatRequest::~HeartbeatRequest() {
  // @@protoc_insertion_point(destructor:flex.HeartbeatRequest)
  SharedDtor(*this);
}
inline void HeartbeatRequest::SharedDtor(MessageLite& self) {
  HeartbeatRequest& this_ = static_cast<HeartbeatRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* HeartbeatRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeartbeatRequest(arena);
}
constexpr auto HeartbeatRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HeartbeatRequest),
                                            alignof(HeartbeatRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeartbeatRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeartbeatRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeartbeatRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeartbeatRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeartbeatRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeartbeatRequest>(), &HeartbeatRequest::ByteSizeLong,
            &HeartbeatRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_._cached_size_),
        false,
    },
    &HeartbeatRequest::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeartbeatRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> HeartbeatRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::HeartbeatRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool include_stats = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HeartbeatRequest, _impl_.include_stats_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.include_stats_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool include_stats = 1;
    {PROTOBUF_FIELD_OFFSET(HeartbeatRequest, _impl_.include_stats_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void HeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.HeartbeatRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.include_stats_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeartbeatRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeartbeatRequest& this_ = static_cast<const HeartbeatRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeartbeatRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeartbeatRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.HeartbeatRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool include_stats = 1;
          if (this_._internal_include_stats() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_include_stats(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.HeartbeatRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeartbeatRequest::ByteSizeLong(const MessageLite& base) {
          const HeartbeatRequest& this_ = static_cast<const HeartbeatRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeartbeatRequest::ByteSizeLong() const {
          const HeartbeatRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.HeartbeatRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool include_stats = 1;
            if (this_._internal_include_stats() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeartbeatRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeartbeatRequest*>(&to_msg);
  auto& from = static_cast<const HeartbeatRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.HeartbeatRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_include_stats() != 0) {
    _this->_impl_.include_stats_ = from._impl_.include_stats_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeartbeatRequest::CopyFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeartbeatRequest::InternalSwap(HeartbeatRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.include_stats_, other->_impl_.include_stats_);
}

::google::protobuf::Metadata HeartbeatRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeartbeatResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HeartbeatResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_._has_bits_);
};

HeartbeatResponse::HeartbeatResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.HeartbeatResponse)
}
inline PROTOBUF_NDEBUG_INLINE HeartbeatResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::HeartbeatResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HeartbeatResponse::HeartbeatResponse(
    ::google::protobuf::Arena* arena,
    const HeartbeatResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeartbeatResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_stats_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::NodeStats>(
                              arena, *from._impl_.node_stats_)
                        : nullptr;
  _impl_.is_ready_ = from._impl_.is_ready_;

  // @@protoc_insertion_point(copy_constructor:flex.HeartbeatResponse)
}
inline PROTOBUF_NDEBUG_INLINE HeartbeatResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void HeartbeatResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_stats_),
           0,
           offsetof(Impl_, is_ready_) -
               offsetof(Impl_, node_stats_) +
               sizeof(Impl_::is_ready_));
}
HeartbeatResponse::~HeartbeatResponse() {
  // @@protoc_insertion_point(destructor:flex.HeartbeatResponse)
  SharedDtor(*this);
}
inline void HeartbeatResponse::SharedDtor(MessageLite& self) {
  HeartbeatResponse& this_ = static_cast<HeartbeatResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.node_stats_;
  this_._impl_.~Impl_();
}

inline void* HeartbeatResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeartbeatResponse(arena);
}
constexpr auto HeartbeatResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HeartbeatResponse),
                                            alignof(HeartbeatResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeartbeatResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeartbeatResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeartbeatResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeartbeatResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeartbeatResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeartbeatResponse>(), &HeartbeatResponse::ByteSizeLong,
            &HeartbeatResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_._cached_size_),
        false,
    },
    &HeartbeatResponse::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeartbeatResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> HeartbeatResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::HeartbeatResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .flex.NodeStats node_stats = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.node_stats_)}},
    // bool is_ready = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HeartbeatResponse, _impl_.is_ready_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.is_ready_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_ready = 1;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.is_ready_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .flex.NodeStats node_stats = 2;
    {PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.node_stats_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::NodeStats>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.HeartbeatResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_stats_ != nullptr);
    _impl_.node_stats_->Clear();
  }
  _impl_.is_ready_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeartbeatResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeartbeatResponse& this_ = static_cast<const HeartbeatResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeartbeatResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeartbeatResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.HeartbeatResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_ready = 1;
          if (this_._internal_is_ready() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_ready(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.NodeStats node_stats = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.node_stats_, this_._impl_.node_stats_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.HeartbeatResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeartbeatResponse::ByteSizeLong(const MessageLite& base) {
          const HeartbeatResponse& this_ = static_cast<const HeartbeatResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeartbeatResponse::ByteSizeLong() const {
          const HeartbeatResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.HeartbeatResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .flex.NodeStats node_stats = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.node_stats_);
            }
          }
           {
            // bool is_ready = 1;
            if (this_._internal_is_ready() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeartbeatResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeartbeatResponse*>(&to_msg);
  auto& from = static_cast<const HeartbeatResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.HeartbeatResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_stats_ != nullptr);
    if (_this->_impl_.node_stats_ == nullptr) {
      _this->_impl_.node_stats_ =
          ::google::protobuf::Message::CopyConstruct<::flex::NodeStats>(arena, *from._impl_.node_stats_);
    } else {
      _this->_impl_.node_stats_->MergeFrom(*from._impl_.node_stats_);
    }
  }
  if (from._internal_is_ready() != 0) {
    _this->_impl_.is_ready_ = from._impl_.is_ready_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeartbeatResponse::CopyFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeartbeatResponse::InternalSwap(HeartbeatResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.is_ready_)
      + sizeof(HeartbeatResponse::_impl_.is_ready_)
      - PROTOBUF_FIELD_OFFSET(HeartbeatResponse, _impl_.node_stats_)>(
          reinterpret_cast<char*>(&_impl_.node_stats_),
          reinterpret_cast<char*>(&other->_impl_.node_stats_));
}

::google::protobuf::Metadata HeartbeatResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeStats::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NodeStats>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeStats, _impl_._has_bits_);
};

void NodeStats::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
NodeStats::NodeStats(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.NodeStats)
}
inline PROTOBUF_NDEBUG_INLINE NodeStats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::NodeStats& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeStats::NodeStats(
    ::google::protobuf::Arena* arena,
    const NodeStats& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeStats* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.timestamp_)
                        : nullptr;
  _impl_.active_requests_ = from._impl_.active_requests_;

  // @@protoc_insertion_point(copy_constructor:flex.NodeStats)
}
inline PROTOBUF_NDEBUG_INLINE NodeStats::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeStats::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, active_requests_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::active_requests_));
}
NodeStats::~NodeStats() {
  // @@protoc_insertion_point(destructor:flex.NodeStats)
  SharedDtor(*this);
}
inline void NodeStats::SharedDtor(MessageLite& self) {
  NodeStats& this_ = static_cast<NodeStats&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* NodeStats::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeStats(arena);
}
constexpr auto NodeStats::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NodeStats),
                                            alignof(NodeStats));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeStats::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeStats_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeStats::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeStats>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeStats::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeStats>(), &NodeStats::ByteSizeLong,
            &NodeStats::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeStats, _impl_._cached_size_),
        false,
    },
    &NodeStats::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeStats::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> NodeStats::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeStats, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::NodeStats>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 active_requests = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NodeStats, _impl_.active_requests_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeStats, _impl_.active_requests_)}},
    // .google.protobuf.Timestamp timestamp = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeStats, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(NodeStats, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 active_requests = 2;
    {PROTOBUF_FIELD_OFFSET(NodeStats, _impl_.active_requests_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NodeStats::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.NodeStats)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  _impl_.active_requests_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeStats::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeStats& this_ = static_cast<const NodeStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeStats::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.NodeStats)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp timestamp = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
                stream);
          }

          // int64 active_requests = 2;
          if (this_._internal_active_requests() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_active_requests(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.NodeStats)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeStats::ByteSizeLong(const MessageLite& base) {
          const NodeStats& this_ = static_cast<const NodeStats&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeStats::ByteSizeLong() const {
          const NodeStats& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.NodeStats)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .google.protobuf.Timestamp timestamp = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
            }
          }
           {
            // int64 active_requests = 2;
            if (this_._internal_active_requests() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_active_requests());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeStats::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeStats*>(&to_msg);
  auto& from = static_cast<const NodeStats&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.NodeStats)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
    if (_this->_impl_.timestamp_ == nullptr) {
      _this->_impl_.timestamp_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_);
    } else {
      _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
    }
  }
  if (from._internal_active_requests() != 0) {
    _this->_impl_.active_requests_ = from._impl_.active_requests_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeStats::CopyFrom(const NodeStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.NodeStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeStats::InternalSwap(NodeStats* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeStats, _impl_.active_requests_)
      + sizeof(NodeStats::_impl_.active_requests_)
      - PROTOBUF_FIELD_OFFSET(NodeStats, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata NodeStats::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitWorkRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SubmitWorkRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubmitWorkRequest, _impl_._has_bits_);
};

SubmitWorkRequest::SubmitWorkRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.SubmitWorkRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitWorkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::SubmitWorkRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SubmitWorkRequest::SubmitWorkRequest(
    ::google::protobuf::Arena* arena,
    const SubmitWorkRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitWorkRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.request_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::WorkRequest>(
                              arena, *from._impl_.request_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:flex.SubmitWorkRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitWorkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SubmitWorkRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.request_ = {};
}
SubmitWorkRequest::~SubmitWorkRequest() {
  // @@protoc_insertion_point(destructor:flex.SubmitWorkRequest)
  SharedDtor(*this);
}
inline void SubmitWorkRequest::SharedDtor(MessageLite& self) {
  SubmitWorkRequest& this_ = static_cast<SubmitWorkRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.request_;
  this_._impl_.~Impl_();
}

inline void* SubmitWorkRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubmitWorkRequest(arena);
}
constexpr auto SubmitWorkRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubmitWorkRequest),
                                            alignof(SubmitWorkRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubmitWorkRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubmitWorkRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubmitWorkRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubmitWorkRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubmitWorkRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubmitWorkRequest>(), &SubmitWorkRequest::ByteSizeLong,
            &SubmitWorkRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubmitWorkRequest, _impl_._cached_size_),
        false,
    },
    &SubmitWorkRequest::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubmitWorkRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SubmitWorkRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubmitWorkRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::SubmitWorkRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .flex.WorkRequest request = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubmitWorkRequest, _impl_.request_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.WorkRequest request = 1;
    {PROTOBUF_FIELD_OFFSET(SubmitWorkRequest, _impl_.request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::WorkRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SubmitWorkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.SubmitWorkRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.request_ != nullptr);
    _impl_.request_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubmitWorkRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubmitWorkRequest& this_ = static_cast<const SubmitWorkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubmitWorkRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubmitWorkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.SubmitWorkRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.WorkRequest request = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.request_, this_._impl_.request_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.SubmitWorkRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubmitWorkRequest::ByteSizeLong(const MessageLite& base) {
          const SubmitWorkRequest& this_ = static_cast<const SubmitWorkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubmitWorkRequest::ByteSizeLong() const {
          const SubmitWorkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.SubmitWorkRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .flex.WorkRequest request = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubmitWorkRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitWorkRequest*>(&to_msg);
  auto& from = static_cast<const SubmitWorkRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.SubmitWorkRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.request_ != nullptr);
    if (_this->_impl_.request_ == nullptr) {
      _this->_impl_.request_ =
          ::google::protobuf::Message::CopyConstruct<::flex::WorkRequest>(arena, *from._impl_.request_);
    } else {
      _this->_impl_.request_->MergeFrom(*from._impl_.request_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitWorkRequest::CopyFrom(const SubmitWorkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.SubmitWorkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitWorkRequest::InternalSwap(SubmitWorkRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.request_, other->_impl_.request_);
}

::google::protobuf::Metadata SubmitWorkRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitWorkResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SubmitWorkResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubmitWorkResponse, _impl_._has_bits_);
};

SubmitWorkResponse::SubmitWorkResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.SubmitWorkResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubmitWorkResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::SubmitWorkResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SubmitWorkResponse::SubmitWorkResponse(
    ::google::protobuf::Arena* arena,
    const SubmitWorkResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitWorkResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.work_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::Work>(
                              arena, *from._impl_.work_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:flex.SubmitWorkResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubmitWorkResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SubmitWorkResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.work_ = {};
}
SubmitWorkResponse::~SubmitWorkResponse() {
  // @@protoc_insertion_point(destructor:flex.SubmitWorkResponse)
  SharedDtor(*this);
}
inline void SubmitWorkResponse::SharedDtor(MessageLite& self) {
  SubmitWorkResponse& this_ = static_cast<SubmitWorkResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.work_;
  this_._impl_.~Impl_();
}

inline void* SubmitWorkResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubmitWorkResponse(arena);
}
constexpr auto SubmitWorkResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SubmitWorkResponse),
                                            alignof(SubmitWorkResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubmitWorkResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubmitWorkResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubmitWorkResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubmitWorkResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubmitWorkResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubmitWorkResponse>(), &SubmitWorkResponse::ByteSizeLong,
            &SubmitWorkResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubmitWorkResponse, _impl_._cached_size_),
        false,
    },
    &SubmitWorkResponse::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubmitWorkResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SubmitWorkResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubmitWorkResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::SubmitWorkResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .flex.Work work = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubmitWorkResponse, _impl_.work_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.Work work = 1;
    {PROTOBUF_FIELD_OFFSET(SubmitWorkResponse, _impl_.work_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::Work>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SubmitWorkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.SubmitWorkResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.work_ != nullptr);
    _impl_.work_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubmitWorkResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubmitWorkResponse& this_ = static_cast<const SubmitWorkResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubmitWorkResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubmitWorkResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.SubmitWorkResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.Work work = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.work_, this_._impl_.work_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.SubmitWorkResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubmitWorkResponse::ByteSizeLong(const MessageLite& base) {
          const SubmitWorkResponse& this_ = static_cast<const SubmitWorkResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubmitWorkResponse::ByteSizeLong() const {
          const SubmitWorkResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.SubmitWorkResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .flex.Work work = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.work_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubmitWorkResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitWorkResponse*>(&to_msg);
  auto& from = static_cast<const SubmitWorkResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.SubmitWorkResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.work_ != nullptr);
    if (_this->_impl_.work_ == nullptr) {
      _this->_impl_.work_ =
          ::google::protobuf::Message::CopyConstruct<::flex::Work>(arena, *from._impl_.work_);
    } else {
      _this->_impl_.work_->MergeFrom(*from._impl_.work_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitWorkResponse::CopyFrom(const SubmitWorkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.SubmitWorkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitWorkResponse::InternalSwap(SubmitWorkResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.work_, other->_impl_.work_);
}

::google::protobuf::Metadata SubmitWorkResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateWorkRequest::_Internal {
 public:
};

UpdateWorkRequest::UpdateWorkRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.UpdateWorkRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateWorkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::UpdateWorkRequest& from_msg)
      : job_id_(arena, from.job_id_),
        request_id_(arena, from.request_id_),
        _cached_size_{0} {}

UpdateWorkRequest::UpdateWorkRequest(
    ::google::protobuf::Arena* arena,
    const UpdateWorkRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateWorkRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.new_state_ = from._impl_.new_state_;

  // @@protoc_insertion_point(copy_constructor:flex.UpdateWorkRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateWorkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : job_id_(arena),
        request_id_(arena),
        _cached_size_{0} {}

inline void UpdateWorkRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.new_state_ = {};
}
UpdateWorkRequest::~UpdateWorkRequest() {
  // @@protoc_insertion_point(destructor:flex.UpdateWorkRequest)
  SharedDtor(*this);
}
inline void UpdateWorkRequest::SharedDtor(MessageLite& self) {
  UpdateWorkRequest& this_ = static_cast<UpdateWorkRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.job_id_.Destroy();
  this_._impl_.request_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateWorkRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateWorkRequest(arena);
}
constexpr auto UpdateWorkRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateWorkRequest),
                                            alignof(UpdateWorkRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateWorkRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateWorkRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateWorkRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateWorkRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateWorkRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateWorkRequest>(), &UpdateWorkRequest::ByteSizeLong,
            &UpdateWorkRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateWorkRequest, _impl_._cached_size_),
        false,
    },
    &UpdateWorkRequest::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateWorkRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 47, 2> UpdateWorkRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::UpdateWorkRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string job_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateWorkRequest, _impl_.job_id_)}},
    // string request_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateWorkRequest, _impl_.request_id_)}},
    // .flex.UpdateWorkRequest.NewState new_state = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateWorkRequest, _impl_.new_state_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateWorkRequest, _impl_.new_state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string job_id = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateWorkRequest, _impl_.job_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string request_id = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateWorkRequest, _impl_.request_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .flex.UpdateWorkRequest.NewState new_state = 3;
    {PROTOBUF_FIELD_OFFSET(UpdateWorkRequest, _impl_.new_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\26\6\12\0\0\0\0\0"
    "flex.UpdateWorkRequest"
    "job_id"
    "request_id"
  }},
};

PROTOBUF_NOINLINE void UpdateWorkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.UpdateWorkRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.job_id_.ClearToEmpty();
  _impl_.request_id_.ClearToEmpty();
  _impl_.new_state_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateWorkRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateWorkRequest& this_ = static_cast<const UpdateWorkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateWorkRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateWorkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.UpdateWorkRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string job_id = 1;
          if (!this_._internal_job_id().empty()) {
            const std::string& _s = this_._internal_job_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.UpdateWorkRequest.job_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string request_id = 2;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.UpdateWorkRequest.request_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .flex.UpdateWorkRequest.NewState new_state = 3;
          if (this_._internal_new_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_new_state(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.UpdateWorkRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateWorkRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateWorkRequest& this_ = static_cast<const UpdateWorkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateWorkRequest::ByteSizeLong() const {
          const UpdateWorkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.UpdateWorkRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string job_id = 1;
            if (!this_._internal_job_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_job_id());
            }
            // string request_id = 2;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // .flex.UpdateWorkRequest.NewState new_state = 3;
            if (this_._internal_new_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_new_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateWorkRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateWorkRequest*>(&to_msg);
  auto& from = static_cast<const UpdateWorkRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.UpdateWorkRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_job_id().empty()) {
    _this->_internal_set_job_id(from._internal_job_id());
  }
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (from._internal_new_state() != 0) {
    _this->_impl_.new_state_ = from._impl_.new_state_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateWorkRequest::CopyFrom(const UpdateWorkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.UpdateWorkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateWorkRequest::InternalSwap(UpdateWorkRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.job_id_, &other->_impl_.job_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  swap(_impl_.new_state_, other->_impl_.new_state_);
}

::google::protobuf::Metadata UpdateWorkRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateWorkResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateWorkResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateWorkResponse, _impl_._has_bits_);
};

UpdateWorkResponse::UpdateWorkResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.UpdateWorkResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateWorkResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::UpdateWorkResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateWorkResponse::UpdateWorkResponse(
    ::google::protobuf::Arena* arena,
    const UpdateWorkResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateWorkResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.work_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::Work>(
                              arena, *from._impl_.work_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:flex.UpdateWorkResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateWorkResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateWorkResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.work_ = {};
}
UpdateWorkResponse::~UpdateWorkResponse() {
  // @@protoc_insertion_point(destructor:flex.UpdateWorkResponse)
  SharedDtor(*this);
}
inline void UpdateWorkResponse::SharedDtor(MessageLite& self) {
  UpdateWorkResponse& this_ = static_cast<UpdateWorkResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.work_;
  this_._impl_.~Impl_();
}

inline void* UpdateWorkResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateWorkResponse(arena);
}
constexpr auto UpdateWorkResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateWorkResponse),
                                            alignof(UpdateWorkResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateWorkResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateWorkResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateWorkResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateWorkResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateWorkResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateWorkResponse>(), &UpdateWorkResponse::ByteSizeLong,
            &UpdateWorkResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateWorkResponse, _impl_._cached_size_),
        false,
    },
    &UpdateWorkResponse::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateWorkResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> UpdateWorkResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateWorkResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::UpdateWorkResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .flex.Work work = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateWorkResponse, _impl_.work_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.Work work = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateWorkResponse, _impl_.work_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::Work>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateWorkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.UpdateWorkResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.work_ != nullptr);
    _impl_.work_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateWorkResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateWorkResponse& this_ = static_cast<const UpdateWorkResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateWorkResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateWorkResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.UpdateWorkResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.Work work = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.work_, this_._impl_.work_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.UpdateWorkResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateWorkResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateWorkResponse& this_ = static_cast<const UpdateWorkResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateWorkResponse::ByteSizeLong() const {
          const UpdateWorkResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.UpdateWorkResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .flex.Work work = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.work_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateWorkResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateWorkResponse*>(&to_msg);
  auto& from = static_cast<const UpdateWorkResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.UpdateWorkResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.work_ != nullptr);
    if (_this->_impl_.work_ == nullptr) {
      _this->_impl_.work_ =
          ::google::protobuf::Message::CopyConstruct<::flex::Work>(arena, *from._impl_.work_);
    } else {
      _this->_impl_.work_->MergeFrom(*from._impl_.work_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateWorkResponse::CopyFrom(const UpdateWorkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.UpdateWorkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateWorkResponse::InternalSwap(UpdateWorkResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.work_, other->_impl_.work_);
}

::google::protobuf::Metadata UpdateWorkResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BulkUpdateWorkRequest::_Internal {
 public:
};

BulkUpdateWorkRequest::BulkUpdateWorkRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.BulkUpdateWorkRequest)
}
BulkUpdateWorkRequest::BulkUpdateWorkRequest(
    ::google::protobuf::Arena* arena, const BulkUpdateWorkRequest& from)
    : BulkUpdateWorkRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE BulkUpdateWorkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BulkUpdateWorkRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.new_state_ = {};
}
BulkUpdateWorkRequest::~BulkUpdateWorkRequest() {
  // @@protoc_insertion_point(destructor:flex.BulkUpdateWorkRequest)
  SharedDtor(*this);
}
inline void BulkUpdateWorkRequest::SharedDtor(MessageLite& self) {
  BulkUpdateWorkRequest& this_ = static_cast<BulkUpdateWorkRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* BulkUpdateWorkRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BulkUpdateWorkRequest(arena);
}
constexpr auto BulkUpdateWorkRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BulkUpdateWorkRequest),
                                            alignof(BulkUpdateWorkRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BulkUpdateWorkRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BulkUpdateWorkRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BulkUpdateWorkRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BulkUpdateWorkRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BulkUpdateWorkRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BulkUpdateWorkRequest>(), &BulkUpdateWorkRequest::ByteSizeLong,
            &BulkUpdateWorkRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BulkUpdateWorkRequest, _impl_._cached_size_),
        false,
    },
    &BulkUpdateWorkRequest::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BulkUpdateWorkRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> BulkUpdateWorkRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::BulkUpdateWorkRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .flex.BulkUpdateWorkRequest.NewState new_state = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BulkUpdateWorkRequest, _impl_.new_state_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BulkUpdateWorkRequest, _impl_.new_state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.BulkUpdateWorkRequest.NewState new_state = 1;
    {PROTOBUF_FIELD_OFFSET(BulkUpdateWorkRequest, _impl_.new_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void BulkUpdateWorkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.BulkUpdateWorkRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_state_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BulkUpdateWorkRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BulkUpdateWorkRequest& this_ = static_cast<const BulkUpdateWorkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BulkUpdateWorkRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BulkUpdateWorkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.BulkUpdateWorkRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .flex.BulkUpdateWorkRequest.NewState new_state = 1;
          if (this_._internal_new_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_new_state(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.BulkUpdateWorkRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BulkUpdateWorkRequest::ByteSizeLong(const MessageLite& base) {
          const BulkUpdateWorkRequest& this_ = static_cast<const BulkUpdateWorkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BulkUpdateWorkRequest::ByteSizeLong() const {
          const BulkUpdateWorkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.BulkUpdateWorkRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .flex.BulkUpdateWorkRequest.NewState new_state = 1;
            if (this_._internal_new_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_new_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BulkUpdateWorkRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BulkUpdateWorkRequest*>(&to_msg);
  auto& from = static_cast<const BulkUpdateWorkRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.BulkUpdateWorkRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_new_state() != 0) {
    _this->_impl_.new_state_ = from._impl_.new_state_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BulkUpdateWorkRequest::CopyFrom(const BulkUpdateWorkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.BulkUpdateWorkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BulkUpdateWorkRequest::InternalSwap(BulkUpdateWorkRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.new_state_, other->_impl_.new_state_);
}

::google::protobuf::Metadata BulkUpdateWorkRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BulkUpdateWorkResponse::_Internal {
 public:
};

BulkUpdateWorkResponse::BulkUpdateWorkResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.BulkUpdateWorkResponse)
}
inline PROTOBUF_NDEBUG_INLINE BulkUpdateWorkResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::BulkUpdateWorkResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

BulkUpdateWorkResponse::BulkUpdateWorkResponse(
    ::google::protobuf::Arena* arena,
    const BulkUpdateWorkResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BulkUpdateWorkResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:flex.BulkUpdateWorkResponse)
}
inline PROTOBUF_NDEBUG_INLINE BulkUpdateWorkResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void BulkUpdateWorkResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
BulkUpdateWorkResponse::~BulkUpdateWorkResponse() {
  // @@protoc_insertion_point(destructor:flex.BulkUpdateWorkResponse)
  SharedDtor(*this);
}
inline void BulkUpdateWorkResponse::SharedDtor(MessageLite& self) {
  BulkUpdateWorkResponse& this_ = static_cast<BulkUpdateWorkResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BulkUpdateWorkResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BulkUpdateWorkResponse(arena);
}
constexpr auto BulkUpdateWorkResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BulkUpdateWorkResponse),
                                            alignof(BulkUpdateWorkResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BulkUpdateWorkResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BulkUpdateWorkResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BulkUpdateWorkResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BulkUpdateWorkResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BulkUpdateWorkResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BulkUpdateWorkResponse>(), &BulkUpdateWorkResponse::ByteSizeLong,
            &BulkUpdateWorkResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BulkUpdateWorkResponse, _impl_._cached_size_),
        false,
    },
    &BulkUpdateWorkResponse::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BulkUpdateWorkResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> BulkUpdateWorkResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::BulkUpdateWorkResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BulkUpdateWorkResponse, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BulkUpdateWorkResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BulkUpdateWorkResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(BulkUpdateWorkResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(BulkUpdateWorkResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\7\0\0\0\0\0"
    "flex.BulkUpdateWorkResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void BulkUpdateWorkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.BulkUpdateWorkResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BulkUpdateWorkResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BulkUpdateWorkResponse& this_ = static_cast<const BulkUpdateWorkResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BulkUpdateWorkResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BulkUpdateWorkResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.BulkUpdateWorkResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1;
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.BulkUpdateWorkResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.BulkUpdateWorkResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BulkUpdateWorkResponse::ByteSizeLong(const MessageLite& base) {
          const BulkUpdateWorkResponse& this_ = static_cast<const BulkUpdateWorkResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BulkUpdateWorkResponse::ByteSizeLong() const {
          const BulkUpdateWorkResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.BulkUpdateWorkResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // bool success = 1;
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BulkUpdateWorkResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BulkUpdateWorkResponse*>(&to_msg);
  auto& from = static_cast<const BulkUpdateWorkResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.BulkUpdateWorkResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BulkUpdateWorkResponse::CopyFrom(const BulkUpdateWorkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.BulkUpdateWorkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BulkUpdateWorkResponse::InternalSwap(BulkUpdateWorkResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata BulkUpdateWorkResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JobLockedInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<JobLockedInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_._has_bits_);
};

void JobLockedInfo::clear_mtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mtime_ != nullptr) _impl_.mtime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void JobLockedInfo::clear_remote_mtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_mtime_ != nullptr) _impl_.remote_mtime_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
JobLockedInfo::JobLockedInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.JobLockedInfo)
}
inline PROTOBUF_NDEBUG_INLINE JobLockedInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::JobLockedInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        stub_url_path_(arena, from.stub_url_path_),
        externalid_(arena, from.externalid_) {}

JobLockedInfo::JobLockedInfo(
    ::google::protobuf::Arena* arena,
    const JobLockedInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JobLockedInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.mtime_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.mtime_)
                        : nullptr;
  _impl_.remote_mtime_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.remote_mtime_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, read_write_locked_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, read_write_locked_),
           offsetof(Impl_, stub_url_rst_id_) -
               offsetof(Impl_, read_write_locked_) +
               sizeof(Impl_::stub_url_rst_id_));

  // @@protoc_insertion_point(copy_constructor:flex.JobLockedInfo)
}
inline PROTOBUF_NDEBUG_INLINE JobLockedInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        stub_url_path_(arena),
        externalid_(arena) {}

inline void JobLockedInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mtime_),
           0,
           offsetof(Impl_, stub_url_rst_id_) -
               offsetof(Impl_, mtime_) +
               sizeof(Impl_::stub_url_rst_id_));
}
JobLockedInfo::~JobLockedInfo() {
  // @@protoc_insertion_point(destructor:flex.JobLockedInfo)
  SharedDtor(*this);
}
inline void JobLockedInfo::SharedDtor(MessageLite& self) {
  JobLockedInfo& this_ = static_cast<JobLockedInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.stub_url_path_.Destroy();
  this_._impl_.externalid_.Destroy();
  delete this_._impl_.mtime_;
  delete this_._impl_.remote_mtime_;
  this_._impl_.~Impl_();
}

inline void* JobLockedInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) JobLockedInfo(arena);
}
constexpr auto JobLockedInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JobLockedInfo),
                                            alignof(JobLockedInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull JobLockedInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_JobLockedInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &JobLockedInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<JobLockedInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &JobLockedInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<JobLockedInfo>(), &JobLockedInfo::ByteSizeLong,
            &JobLockedInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_._cached_size_),
        false,
    },
    &JobLockedInfo::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* JobLockedInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 58, 2> JobLockedInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::JobLockedInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool read_write_locked = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JobLockedInfo, _impl_.read_write_locked_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.read_write_locked_)}},
    // bool exists = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JobLockedInfo, _impl_.exists_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.exists_)}},
    // int64 size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JobLockedInfo, _impl_.size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.size_)}},
    // uint32 mode = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JobLockedInfo, _impl_.mode_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.mode_)}},
    // .google.protobuf.Timestamp mtime = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.mtime_)}},
    // int64 remote_size = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(JobLockedInfo, _impl_.remote_size_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.remote_size_)}},
    // .google.protobuf.Timestamp remote_mtime = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.remote_mtime_)}},
    // uint32 stub_url_rst_id = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JobLockedInfo, _impl_.stub_url_rst_id_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.stub_url_rst_id_)}},
    // string stub_url_path = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.stub_url_path_)}},
    // string externalId = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.externalid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bool read_write_locked = 1;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.read_write_locked_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool exists = 2;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.exists_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 size = 3;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint32 mode = 4;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .google.protobuf.Timestamp mtime = 5;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.mtime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 remote_size = 6;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.remote_size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp remote_mtime = 7;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.remote_mtime_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 stub_url_rst_id = 8;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.stub_url_rst_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string stub_url_path = 9;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.stub_url_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string externalId = 10;
    {PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.externalid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\22\0\0\0\0\0\0\0\0\15\12\0\0\0\0\0"
    "flex.JobLockedInfo"
    "stub_url_path"
    "externalId"
  }},
};

PROTOBUF_NOINLINE void JobLockedInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.JobLockedInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stub_url_path_.ClearToEmpty();
  _impl_.externalid_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.mtime_ != nullptr);
      _impl_.mtime_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.remote_mtime_ != nullptr);
      _impl_.remote_mtime_->Clear();
    }
  }
  ::memset(&_impl_.read_write_locked_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.stub_url_rst_id_) -
      reinterpret_cast<char*>(&_impl_.read_write_locked_)) + sizeof(_impl_.stub_url_rst_id_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* JobLockedInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const JobLockedInfo& this_ = static_cast<const JobLockedInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* JobLockedInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const JobLockedInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.JobLockedInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool read_write_locked = 1;
          if (this_._internal_read_write_locked() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_read_write_locked(), target);
          }

          // bool exists = 2;
          if (this_._internal_exists() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_exists(), target);
          }

          // int64 size = 3;
          if (this_._internal_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_size(), target);
          }

          // uint32 mode = 4;
          if (this_._internal_mode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_mode(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp mtime = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.mtime_, this_._impl_.mtime_->GetCachedSize(), target,
                stream);
          }

          // int64 remote_size = 6;
          if (this_._internal_remote_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_remote_size(), target);
          }

          // .google.protobuf.Timestamp remote_mtime = 7;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.remote_mtime_, this_._impl_.remote_mtime_->GetCachedSize(), target,
                stream);
          }

          // uint32 stub_url_rst_id = 8;
          if (this_._internal_stub_url_rst_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                8, this_._internal_stub_url_rst_id(), target);
          }

          // string stub_url_path = 9;
          if (!this_._internal_stub_url_path().empty()) {
            const std::string& _s = this_._internal_stub_url_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.JobLockedInfo.stub_url_path");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string externalId = 10;
          if (!this_._internal_externalid().empty()) {
            const std::string& _s = this_._internal_externalid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.JobLockedInfo.externalId");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.JobLockedInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t JobLockedInfo::ByteSizeLong(const MessageLite& base) {
          const JobLockedInfo& this_ = static_cast<const JobLockedInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t JobLockedInfo::ByteSizeLong() const {
          const JobLockedInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.JobLockedInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string stub_url_path = 9;
            if (!this_._internal_stub_url_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_stub_url_path());
            }
            // string externalId = 10;
            if (!this_._internal_externalid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_externalid());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp mtime = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.mtime_);
            }
            // .google.protobuf.Timestamp remote_mtime = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.remote_mtime_);
            }
          }
           {
            // bool read_write_locked = 1;
            if (this_._internal_read_write_locked() != 0) {
              total_size += 2;
            }
            // bool exists = 2;
            if (this_._internal_exists() != 0) {
              total_size += 2;
            }
            // uint32 mode = 4;
            if (this_._internal_mode() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_mode());
            }
            // int64 size = 3;
            if (this_._internal_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_size());
            }
            // int64 remote_size = 6;
            if (this_._internal_remote_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_remote_size());
            }
            // uint32 stub_url_rst_id = 8;
            if (this_._internal_stub_url_rst_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_stub_url_rst_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void JobLockedInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JobLockedInfo*>(&to_msg);
  auto& from = static_cast<const JobLockedInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.JobLockedInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_stub_url_path().empty()) {
    _this->_internal_set_stub_url_path(from._internal_stub_url_path());
  }
  if (!from._internal_externalid().empty()) {
    _this->_internal_set_externalid(from._internal_externalid());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.mtime_ != nullptr);
      if (_this->_impl_.mtime_ == nullptr) {
        _this->_impl_.mtime_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.mtime_);
      } else {
        _this->_impl_.mtime_->MergeFrom(*from._impl_.mtime_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.remote_mtime_ != nullptr);
      if (_this->_impl_.remote_mtime_ == nullptr) {
        _this->_impl_.remote_mtime_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.remote_mtime_);
      } else {
        _this->_impl_.remote_mtime_->MergeFrom(*from._impl_.remote_mtime_);
      }
    }
  }
  if (from._internal_read_write_locked() != 0) {
    _this->_impl_.read_write_locked_ = from._impl_.read_write_locked_;
  }
  if (from._internal_exists() != 0) {
    _this->_impl_.exists_ = from._impl_.exists_;
  }
  if (from._internal_mode() != 0) {
    _this->_impl_.mode_ = from._impl_.mode_;
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  if (from._internal_remote_size() != 0) {
    _this->_impl_.remote_size_ = from._impl_.remote_size_;
  }
  if (from._internal_stub_url_rst_id() != 0) {
    _this->_impl_.stub_url_rst_id_ = from._impl_.stub_url_rst_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JobLockedInfo::CopyFrom(const JobLockedInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.JobLockedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JobLockedInfo::InternalSwap(JobLockedInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stub_url_path_, &other->_impl_.stub_url_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.externalid_, &other->_impl_.externalid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.stub_url_rst_id_)
      + sizeof(JobLockedInfo::_impl_.stub_url_rst_id_)
      - PROTOBUF_FIELD_OFFSET(JobLockedInfo, _impl_.mtime_)>(
          reinterpret_cast<char*>(&_impl_.mtime_),
          reinterpret_cast<char*>(&other->_impl_.mtime_));
}

::google::protobuf::Metadata JobLockedInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class JobRequestCfg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<JobRequestCfg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_._has_bits_);
};

JobRequestCfg::JobRequestCfg(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.JobRequestCfg)
}
inline PROTOBUF_NDEBUG_INLINE JobRequestCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::JobRequestCfg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_(arena, from.path_),
        remotepath_(arena, from.remotepath_) {}

JobRequestCfg::JobRequestCfg(
    ::google::protobuf::Arena* arena,
    const JobRequestCfg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  JobRequestCfg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.locked_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::JobLockedInfo>(
                              arena, *from._impl_.locked_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, remotestoragetarget_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, remotestoragetarget_),
           offsetof(Impl_, update_) -
               offsetof(Impl_, remotestoragetarget_) +
               sizeof(Impl_::update_));

  // @@protoc_insertion_point(copy_constructor:flex.JobRequestCfg)
}
inline PROTOBUF_NDEBUG_INLINE JobRequestCfg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_(arena),
        remotepath_(arena) {}

inline void JobRequestCfg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, locked_info_),
           0,
           offsetof(Impl_, update_) -
               offsetof(Impl_, locked_info_) +
               sizeof(Impl_::update_));
}
JobRequestCfg::~JobRequestCfg() {
  // @@protoc_insertion_point(destructor:flex.JobRequestCfg)
  SharedDtor(*this);
}
inline void JobRequestCfg::SharedDtor(MessageLite& self) {
  JobRequestCfg& this_ = static_cast<JobRequestCfg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.remotepath_.Destroy();
  delete this_._impl_.locked_info_;
  this_._impl_.~Impl_();
}

inline void* JobRequestCfg::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) JobRequestCfg(arena);
}
constexpr auto JobRequestCfg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(JobRequestCfg),
                                            alignof(JobRequestCfg));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull JobRequestCfg::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_JobRequestCfg_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &JobRequestCfg::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<JobRequestCfg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &JobRequestCfg::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<JobRequestCfg>(), &JobRequestCfg::ByteSizeLong,
            &JobRequestCfg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_._cached_size_),
        false,
    },
    &JobRequestCfg::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* JobRequestCfg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 49, 2> JobRequestCfg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::JobRequestCfg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 remoteStorageTarget = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(JobRequestCfg, _impl_.remotestoragetarget_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.remotestoragetarget_)}},
    // string path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.path_)}},
    // string remotePath = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.remotepath_)}},
    // bool download = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JobRequestCfg, _impl_.download_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.download_)}},
    // bool stub_local = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JobRequestCfg, _impl_.stub_local_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.stub_local_)}},
    // bool overwrite = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JobRequestCfg, _impl_.overwrite_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.overwrite_)}},
    // bool flatten = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JobRequestCfg, _impl_.flatten_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.flatten_)}},
    // bool force = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JobRequestCfg, _impl_.force_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.force_)}},
    // .flex.JobLockedInfo locked_info = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 0, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.locked_info_)}},
    // optional bool update = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(JobRequestCfg, _impl_.update_), 1>(),
     {80, 1, 0, PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.update_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 remoteStorageTarget = 1;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.remotestoragetarget_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string path = 2;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remotePath = 3;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.remotepath_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool download = 4;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.download_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool stub_local = 5;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.stub_local_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool overwrite = 6;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.overwrite_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool flatten = 7;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.flatten_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool force = 8;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.force_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .flex.JobLockedInfo locked_info = 9;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.locked_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool update = 10;
    {PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.update_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::JobLockedInfo>()},
  }}, {{
    "\22\0\4\12\0\0\0\0\0\0\0\0\0\0\0\0"
    "flex.JobRequestCfg"
    "path"
    "remotePath"
  }},
};

PROTOBUF_NOINLINE void JobRequestCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.JobRequestCfg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.remotepath_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.locked_info_ != nullptr);
    _impl_.locked_info_->Clear();
  }
  ::memset(&_impl_.remotestoragetarget_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.force_) -
      reinterpret_cast<char*>(&_impl_.remotestoragetarget_)) + sizeof(_impl_.force_));
  _impl_.update_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* JobRequestCfg::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const JobRequestCfg& this_ = static_cast<const JobRequestCfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* JobRequestCfg::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const JobRequestCfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.JobRequestCfg)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 remoteStorageTarget = 1;
          if (this_._internal_remotestoragetarget() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_remotestoragetarget(), target);
          }

          // string path = 2;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.JobRequestCfg.path");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string remotePath = 3;
          if (!this_._internal_remotepath().empty()) {
            const std::string& _s = this_._internal_remotepath();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.JobRequestCfg.remotePath");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool download = 4;
          if (this_._internal_download() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_download(), target);
          }

          // bool stub_local = 5;
          if (this_._internal_stub_local() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_stub_local(), target);
          }

          // bool overwrite = 6;
          if (this_._internal_overwrite() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_overwrite(), target);
          }

          // bool flatten = 7;
          if (this_._internal_flatten() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_flatten(), target);
          }

          // bool force = 8;
          if (this_._internal_force() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_force(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.JobLockedInfo locked_info = 9;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.locked_info_, this_._impl_.locked_info_->GetCachedSize(), target,
                stream);
          }

          // optional bool update = 10;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_update(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.JobRequestCfg)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t JobRequestCfg::ByteSizeLong(const MessageLite& base) {
          const JobRequestCfg& this_ = static_cast<const JobRequestCfg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t JobRequestCfg::ByteSizeLong() const {
          const JobRequestCfg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.JobRequestCfg)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string path = 2;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // string remotePath = 3;
            if (!this_._internal_remotepath().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_remotepath());
            }
          }
           {
            // .flex.JobLockedInfo locked_info = 9;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.locked_info_);
            }
          }
           {
            // uint32 remoteStorageTarget = 1;
            if (this_._internal_remotestoragetarget() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_remotestoragetarget());
            }
            // bool download = 4;
            if (this_._internal_download() != 0) {
              total_size += 2;
            }
            // bool stub_local = 5;
            if (this_._internal_stub_local() != 0) {
              total_size += 2;
            }
            // bool overwrite = 6;
            if (this_._internal_overwrite() != 0) {
              total_size += 2;
            }
            // bool flatten = 7;
            if (this_._internal_flatten() != 0) {
              total_size += 2;
            }
            // bool force = 8;
            if (this_._internal_force() != 0) {
              total_size += 2;
            }
          }
           {
            // optional bool update = 10;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void JobRequestCfg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<JobRequestCfg*>(&to_msg);
  auto& from = static_cast<const JobRequestCfg&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.JobRequestCfg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_remotepath().empty()) {
    _this->_internal_set_remotepath(from._internal_remotepath());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.locked_info_ != nullptr);
    if (_this->_impl_.locked_info_ == nullptr) {
      _this->_impl_.locked_info_ =
          ::google::protobuf::Message::CopyConstruct<::flex::JobLockedInfo>(arena, *from._impl_.locked_info_);
    } else {
      _this->_impl_.locked_info_->MergeFrom(*from._impl_.locked_info_);
    }
  }
  if (from._internal_remotestoragetarget() != 0) {
    _this->_impl_.remotestoragetarget_ = from._impl_.remotestoragetarget_;
  }
  if (from._internal_download() != 0) {
    _this->_impl_.download_ = from._impl_.download_;
  }
  if (from._internal_stub_local() != 0) {
    _this->_impl_.stub_local_ = from._impl_.stub_local_;
  }
  if (from._internal_overwrite() != 0) {
    _this->_impl_.overwrite_ = from._impl_.overwrite_;
  }
  if (from._internal_flatten() != 0) {
    _this->_impl_.flatten_ = from._impl_.flatten_;
  }
  if (from._internal_force() != 0) {
    _this->_impl_.force_ = from._impl_.force_;
  }
  if (cached_has_bits & 0x00000002u) {
    _this->_impl_.update_ = from._impl_.update_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void JobRequestCfg::CopyFrom(const JobRequestCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.JobRequestCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void JobRequestCfg::InternalSwap(JobRequestCfg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remotepath_, &other->_impl_.remotepath_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.update_)
      + sizeof(JobRequestCfg::_impl_.update_)
      - PROTOBUF_FIELD_OFFSET(JobRequestCfg, _impl_.locked_info_)>(
          reinterpret_cast<char*>(&_impl_.locked_info_),
          reinterpret_cast<char*>(&other->_impl_.locked_info_));
}

::google::protobuf::Metadata JobRequestCfg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WorkRequest_Segment::_Internal {
 public:
};

WorkRequest_Segment::WorkRequest_Segment(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.WorkRequest.Segment)
}
WorkRequest_Segment::WorkRequest_Segment(
    ::google::protobuf::Arena* arena, const WorkRequest_Segment& from)
    : WorkRequest_Segment(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE WorkRequest_Segment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorkRequest_Segment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_start_),
           0,
           offsetof(Impl_, parts_stop_) -
               offsetof(Impl_, offset_start_) +
               sizeof(Impl_::parts_stop_));
}
WorkRequest_Segment::~WorkRequest_Segment() {
  // @@protoc_insertion_point(destructor:flex.WorkRequest.Segment)
  SharedDtor(*this);
}
inline void WorkRequest_Segment::SharedDtor(MessageLite& self) {
  WorkRequest_Segment& this_ = static_cast<WorkRequest_Segment&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* WorkRequest_Segment::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WorkRequest_Segment(arena);
}
constexpr auto WorkRequest_Segment::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WorkRequest_Segment),
                                            alignof(WorkRequest_Segment));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WorkRequest_Segment::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WorkRequest_Segment_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WorkRequest_Segment::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WorkRequest_Segment>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WorkRequest_Segment::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WorkRequest_Segment>(), &WorkRequest_Segment::ByteSizeLong,
            &WorkRequest_Segment::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_._cached_size_),
        false,
    },
    &WorkRequest_Segment::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WorkRequest_Segment::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> WorkRequest_Segment::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::WorkRequest_Segment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 parts_stop = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkRequest_Segment, _impl_.parts_stop_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.parts_stop_)}},
    // int64 offset_start = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkRequest_Segment, _impl_.offset_start_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.offset_start_)}},
    // int64 offset_stop = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WorkRequest_Segment, _impl_.offset_stop_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.offset_stop_)}},
    // int32 parts_start = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkRequest_Segment, _impl_.parts_start_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.parts_start_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 offset_start = 1;
    {PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.offset_start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 offset_stop = 2;
    {PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.offset_stop_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 parts_start = 3;
    {PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.parts_start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 parts_stop = 4;
    {PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.parts_stop_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void WorkRequest_Segment::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.WorkRequest.Segment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.offset_start_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.parts_stop_) -
      reinterpret_cast<char*>(&_impl_.offset_start_)) + sizeof(_impl_.parts_stop_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WorkRequest_Segment::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WorkRequest_Segment& this_ = static_cast<const WorkRequest_Segment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WorkRequest_Segment::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WorkRequest_Segment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.WorkRequest.Segment)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 offset_start = 1;
          if (this_._internal_offset_start() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_offset_start(), target);
          }

          // int64 offset_stop = 2;
          if (this_._internal_offset_stop() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_offset_stop(), target);
          }

          // int32 parts_start = 3;
          if (this_._internal_parts_start() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_parts_start(), target);
          }

          // int32 parts_stop = 4;
          if (this_._internal_parts_stop() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_parts_stop(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.WorkRequest.Segment)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WorkRequest_Segment::ByteSizeLong(const MessageLite& base) {
          const WorkRequest_Segment& this_ = static_cast<const WorkRequest_Segment&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WorkRequest_Segment::ByteSizeLong() const {
          const WorkRequest_Segment& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.WorkRequest.Segment)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 offset_start = 1;
            if (this_._internal_offset_start() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_offset_start());
            }
            // int64 offset_stop = 2;
            if (this_._internal_offset_stop() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_offset_stop());
            }
            // int32 parts_start = 3;
            if (this_._internal_parts_start() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_parts_start());
            }
            // int32 parts_stop = 4;
            if (this_._internal_parts_stop() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_parts_stop());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WorkRequest_Segment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WorkRequest_Segment*>(&to_msg);
  auto& from = static_cast<const WorkRequest_Segment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.WorkRequest.Segment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_offset_start() != 0) {
    _this->_impl_.offset_start_ = from._impl_.offset_start_;
  }
  if (from._internal_offset_stop() != 0) {
    _this->_impl_.offset_stop_ = from._impl_.offset_stop_;
  }
  if (from._internal_parts_start() != 0) {
    _this->_impl_.parts_start_ = from._impl_.parts_start_;
  }
  if (from._internal_parts_stop() != 0) {
    _this->_impl_.parts_stop_ = from._impl_.parts_stop_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkRequest_Segment::CopyFrom(const WorkRequest_Segment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.WorkRequest.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WorkRequest_Segment::InternalSwap(WorkRequest_Segment* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.parts_stop_)
      + sizeof(WorkRequest_Segment::_impl_.parts_stop_)
      - PROTOBUF_FIELD_OFFSET(WorkRequest_Segment, _impl_.offset_start_)>(
          reinterpret_cast<char*>(&_impl_.offset_start_),
          reinterpret_cast<char*>(&other->_impl_.offset_start_));
}

::google::protobuf::Metadata WorkRequest_Segment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WorkRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WorkRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::flex::WorkRequest, _impl_._oneof_case_);
};

void WorkRequest::set_allocated_mock(::flex::MockJob* mock) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Type();
  if (mock) {
    ::google::protobuf::Arena* submessage_arena = mock->GetArena();
    if (message_arena != submessage_arena) {
      mock = ::google::protobuf::internal::GetOwnedMessage(message_arena, mock, submessage_arena);
    }
    set_has_mock();
    _impl_.Type_.mock_ = mock;
  }
  // @@protoc_insertion_point(field_set_allocated:flex.WorkRequest.mock)
}
void WorkRequest::set_allocated_sync(::flex::SyncJob* sync) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Type();
  if (sync) {
    ::google::protobuf::Arena* submessage_arena = sync->GetArena();
    if (message_arena != submessage_arena) {
      sync = ::google::protobuf::internal::GetOwnedMessage(message_arena, sync, submessage_arena);
    }
    set_has_sync();
    _impl_.Type_.sync_ = sync;
  }
  // @@protoc_insertion_point(field_set_allocated:flex.WorkRequest.sync)
}
void WorkRequest::set_allocated_builder(::flex::BuilderJob* builder) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Type();
  if (builder) {
    ::google::protobuf::Arena* submessage_arena = builder->GetArena();
    if (message_arena != submessage_arena) {
      builder = ::google::protobuf::internal::GetOwnedMessage(message_arena, builder, submessage_arena);
    }
    set_has_builder();
    _impl_.Type_.builder_ = builder;
  }
  // @@protoc_insertion_point(field_set_allocated:flex.WorkRequest.builder)
}
WorkRequest::WorkRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.WorkRequest)
}
inline PROTOBUF_NDEBUG_INLINE WorkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::WorkRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        job_id_(arena, from.job_id_),
        request_id_(arena, from.request_id_),
        external_id_(arena, from.external_id_),
        path_(arena, from.path_),
        Type_{},
        _oneof_case_{from._oneof_case_[0]} {}

WorkRequest::WorkRequest(
    ::google::protobuf::Arena* arena,
    const WorkRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WorkRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.segment_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::WorkRequest_Segment>(
                              arena, *from._impl_.segment_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, remote_storage_target_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, remote_storage_target_),
           offsetof(Impl_, update_) -
               offsetof(Impl_, remote_storage_target_) +
               sizeof(Impl_::update_));
  switch (Type_case()) {
    case TYPE_NOT_SET:
      break;
      case kMock:
        _impl_.Type_.mock_ = ::google::protobuf::Message::CopyConstruct<::flex::MockJob>(arena, *from._impl_.Type_.mock_);
        break;
      case kSync:
        _impl_.Type_.sync_ = ::google::protobuf::Message::CopyConstruct<::flex::SyncJob>(arena, *from._impl_.Type_.sync_);
        break;
      case kBuilder:
        _impl_.Type_.builder_ = ::google::protobuf::Message::CopyConstruct<::flex::BuilderJob>(arena, *from._impl_.Type_.builder_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:flex.WorkRequest)
}
inline PROTOBUF_NDEBUG_INLINE WorkRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        job_id_(arena),
        request_id_(arena),
        external_id_(arena),
        path_(arena),
        Type_{},
        _oneof_case_{} {}

inline void WorkRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, segment_),
           0,
           offsetof(Impl_, update_) -
               offsetof(Impl_, segment_) +
               sizeof(Impl_::update_));
}
WorkRequest::~WorkRequest() {
  // @@protoc_insertion_point(destructor:flex.WorkRequest)
  SharedDtor(*this);
}
inline void WorkRequest::SharedDtor(MessageLite& self) {
  WorkRequest& this_ = static_cast<WorkRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.job_id_.Destroy();
  this_._impl_.request_id_.Destroy();
  this_._impl_.external_id_.Destroy();
  this_._impl_.path_.Destroy();
  delete this_._impl_.segment_;
  if (this_.has_Type()) {
    this_.clear_Type();
  }
  this_._impl_.~Impl_();
}

void WorkRequest::clear_Type() {
// @@protoc_insertion_point(one_of_clear_start:flex.WorkRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (Type_case()) {
    case kMock: {
      if (GetArena() == nullptr) {
        delete _impl_.Type_.mock_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.Type_.mock_);
      }
      break;
    }
    case kSync: {
      if (GetArena() == nullptr) {
        delete _impl_.Type_.sync_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.Type_.sync_);
      }
      break;
    }
    case kBuilder: {
      if (GetArena() == nullptr) {
        delete _impl_.Type_.builder_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.Type_.builder_);
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* WorkRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WorkRequest(arena);
}
constexpr auto WorkRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WorkRequest),
                                            alignof(WorkRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WorkRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WorkRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WorkRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WorkRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WorkRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WorkRequest>(), &WorkRequest::ByteSizeLong,
            &WorkRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_._cached_size_),
        false,
    },
    &WorkRequest::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WorkRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 4, 64, 2> WorkRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::WorkRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string job_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.job_id_)}},
    // string request_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.request_id_)}},
    // string external_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.external_id_)}},
    // string path = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.path_)}},
    // .flex.WorkRequest.Segment segment = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.segment_)}},
    // uint32 remote_storage_target = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkRequest, _impl_.remote_storage_target_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.remote_storage_target_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool stub_local = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WorkRequest, _impl_.stub_local_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.stub_local_)}},
    // optional bool update = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(WorkRequest, _impl_.update_), 1>(),
     {72, 1, 0, PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.update_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string job_id = 1;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.job_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string request_id = 2;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string external_id = 3;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.external_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string path = 4;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .flex.WorkRequest.Segment segment = 5;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.segment_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 remote_storage_target = 6;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.remote_storage_target_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool stub_local = 8;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.stub_local_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // optional bool update = 9;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.update_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .flex.MockJob mock = 10;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.Type_.mock_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .flex.SyncJob sync = 11;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.Type_.sync_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .flex.BuilderJob builder = 12;
    {PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.Type_.builder_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::WorkRequest_Segment>()},
    {::_pbi::TcParser::GetTable<::flex::MockJob>()},
    {::_pbi::TcParser::GetTable<::flex::SyncJob>()},
    {::_pbi::TcParser::GetTable<::flex::BuilderJob>()},
  }}, {{
    "\20\6\12\13\4\0\0\0\0\0\0\0\0\0\0\0"
    "flex.WorkRequest"
    "job_id"
    "request_id"
    "external_id"
    "path"
  }},
};

PROTOBUF_NOINLINE void WorkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.WorkRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.job_id_.ClearToEmpty();
  _impl_.request_id_.ClearToEmpty();
  _impl_.external_id_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.segment_ != nullptr);
    _impl_.segment_->Clear();
  }
  ::memset(&_impl_.remote_storage_target_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.stub_local_) -
      reinterpret_cast<char*>(&_impl_.remote_storage_target_)) + sizeof(_impl_.stub_local_));
  _impl_.update_ = false;
  clear_Type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WorkRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WorkRequest& this_ = static_cast<const WorkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WorkRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WorkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.WorkRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string job_id = 1;
          if (!this_._internal_job_id().empty()) {
            const std::string& _s = this_._internal_job_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.WorkRequest.job_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string request_id = 2;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.WorkRequest.request_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string external_id = 3;
          if (!this_._internal_external_id().empty()) {
            const std::string& _s = this_._internal_external_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.WorkRequest.external_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string path = 4;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.WorkRequest.path");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.WorkRequest.Segment segment = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.segment_, this_._impl_.segment_->GetCachedSize(), target,
                stream);
          }

          // uint32 remote_storage_target = 6;
          if (this_._internal_remote_storage_target() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_remote_storage_target(), target);
          }

          // bool stub_local = 8;
          if (this_._internal_stub_local() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_stub_local(), target);
          }

          // optional bool update = 9;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_update(), target);
          }

          switch (this_.Type_case()) {
            case kMock: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.Type_.mock_, this_._impl_.Type_.mock_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSync: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.Type_.sync_, this_._impl_.Type_.sync_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kBuilder: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.Type_.builder_, this_._impl_.Type_.builder_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.WorkRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WorkRequest::ByteSizeLong(const MessageLite& base) {
          const WorkRequest& this_ = static_cast<const WorkRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WorkRequest::ByteSizeLong() const {
          const WorkRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.WorkRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string job_id = 1;
            if (!this_._internal_job_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_job_id());
            }
            // string request_id = 2;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
            // string external_id = 3;
            if (!this_._internal_external_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_external_id());
            }
            // string path = 4;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
          }
           {
            // .flex.WorkRequest.Segment segment = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.segment_);
            }
          }
           {
            // uint32 remote_storage_target = 6;
            if (this_._internal_remote_storage_target() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_remote_storage_target());
            }
            // bool stub_local = 8;
            if (this_._internal_stub_local() != 0) {
              total_size += 2;
            }
          }
           {
            // optional bool update = 9;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2;
            }
          }
          switch (this_.Type_case()) {
            // .flex.MockJob mock = 10;
            case kMock: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.Type_.mock_);
              break;
            }
            // .flex.SyncJob sync = 11;
            case kSync: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.Type_.sync_);
              break;
            }
            // .flex.BuilderJob builder = 12;
            case kBuilder: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.Type_.builder_);
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WorkRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WorkRequest*>(&to_msg);
  auto& from = static_cast<const WorkRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.WorkRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_job_id().empty()) {
    _this->_internal_set_job_id(from._internal_job_id());
  }
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  if (!from._internal_external_id().empty()) {
    _this->_internal_set_external_id(from._internal_external_id());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.segment_ != nullptr);
    if (_this->_impl_.segment_ == nullptr) {
      _this->_impl_.segment_ =
          ::google::protobuf::Message::CopyConstruct<::flex::WorkRequest_Segment>(arena, *from._impl_.segment_);
    } else {
      _this->_impl_.segment_->MergeFrom(*from._impl_.segment_);
    }
  }
  if (from._internal_remote_storage_target() != 0) {
    _this->_impl_.remote_storage_target_ = from._impl_.remote_storage_target_;
  }
  if (from._internal_stub_local() != 0) {
    _this->_impl_.stub_local_ = from._impl_.stub_local_;
  }
  if (cached_has_bits & 0x00000002u) {
    _this->_impl_.update_ = from._impl_.update_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_Type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMock: {
        if (oneof_needs_init) {
          _this->_impl_.Type_.mock_ =
              ::google::protobuf::Message::CopyConstruct<::flex::MockJob>(arena, *from._impl_.Type_.mock_);
        } else {
          _this->_impl_.Type_.mock_->MergeFrom(from._internal_mock());
        }
        break;
      }
      case kSync: {
        if (oneof_needs_init) {
          _this->_impl_.Type_.sync_ =
              ::google::protobuf::Message::CopyConstruct<::flex::SyncJob>(arena, *from._impl_.Type_.sync_);
        } else {
          _this->_impl_.Type_.sync_->MergeFrom(from._internal_sync());
        }
        break;
      }
      case kBuilder: {
        if (oneof_needs_init) {
          _this->_impl_.Type_.builder_ =
              ::google::protobuf::Message::CopyConstruct<::flex::BuilderJob>(arena, *from._impl_.Type_.builder_);
        } else {
          _this->_impl_.Type_.builder_->MergeFrom(from._internal_builder());
        }
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkRequest::CopyFrom(const WorkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.WorkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WorkRequest::InternalSwap(WorkRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.job_id_, &other->_impl_.job_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.external_id_, &other->_impl_.external_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.update_)
      + sizeof(WorkRequest::_impl_.update_)
      - PROTOBUF_FIELD_OFFSET(WorkRequest, _impl_.segment_)>(
          reinterpret_cast<char*>(&_impl_.segment_),
          reinterpret_cast<char*>(&other->_impl_.segment_));
  swap(_impl_.Type_, other->_impl_.Type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata WorkRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BuilderJob::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BuilderJob>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BuilderJob, _impl_._has_bits_);
};

BuilderJob::BuilderJob(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.BuilderJob)
}
inline PROTOBUF_NDEBUG_INLINE BuilderJob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::BuilderJob& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

BuilderJob::BuilderJob(
    ::google::protobuf::Arena* arena,
    const BuilderJob& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BuilderJob* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cfg_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::JobRequestCfg>(
                              arena, *from._impl_.cfg_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:flex.BuilderJob)
}
inline PROTOBUF_NDEBUG_INLINE BuilderJob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void BuilderJob::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cfg_ = {};
}
BuilderJob::~BuilderJob() {
  // @@protoc_insertion_point(destructor:flex.BuilderJob)
  SharedDtor(*this);
}
inline void BuilderJob::SharedDtor(MessageLite& self) {
  BuilderJob& this_ = static_cast<BuilderJob&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.cfg_;
  this_._impl_.~Impl_();
}

inline void* BuilderJob::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BuilderJob(arena);
}
constexpr auto BuilderJob::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BuilderJob),
                                            alignof(BuilderJob));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BuilderJob::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BuilderJob_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BuilderJob::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BuilderJob>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BuilderJob::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BuilderJob>(), &BuilderJob::ByteSizeLong,
            &BuilderJob::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BuilderJob, _impl_._cached_size_),
        false,
    },
    &BuilderJob::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BuilderJob::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BuilderJob::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BuilderJob, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::BuilderJob>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .flex.JobRequestCfg cfg = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(BuilderJob, _impl_.cfg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.JobRequestCfg cfg = 1;
    {PROTOBUF_FIELD_OFFSET(BuilderJob, _impl_.cfg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::JobRequestCfg>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void BuilderJob::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.BuilderJob)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.cfg_ != nullptr);
    _impl_.cfg_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BuilderJob::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BuilderJob& this_ = static_cast<const BuilderJob&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BuilderJob::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BuilderJob& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.BuilderJob)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.JobRequestCfg cfg = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.cfg_, this_._impl_.cfg_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.BuilderJob)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BuilderJob::ByteSizeLong(const MessageLite& base) {
          const BuilderJob& this_ = static_cast<const BuilderJob&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BuilderJob::ByteSizeLong() const {
          const BuilderJob& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.BuilderJob)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .flex.JobRequestCfg cfg = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cfg_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BuilderJob::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BuilderJob*>(&to_msg);
  auto& from = static_cast<const BuilderJob&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.BuilderJob)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.cfg_ != nullptr);
    if (_this->_impl_.cfg_ == nullptr) {
      _this->_impl_.cfg_ =
          ::google::protobuf::Message::CopyConstruct<::flex::JobRequestCfg>(arena, *from._impl_.cfg_);
    } else {
      _this->_impl_.cfg_->MergeFrom(*from._impl_.cfg_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BuilderJob::CopyFrom(const BuilderJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.BuilderJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BuilderJob::InternalSwap(BuilderJob* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.cfg_, other->_impl_.cfg_);
}

::google::protobuf::Metadata BuilderJob::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MockJob::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MockJob>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MockJob, _impl_._has_bits_);
};

MockJob::MockJob(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.MockJob)
}
inline PROTOBUF_NDEBUG_INLINE MockJob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::MockJob& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        external_id_(arena, from.external_id_) {}

MockJob::MockJob(
    ::google::protobuf::Arena* arena,
    const MockJob& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MockJob* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.locked_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::JobLockedInfo>(
                              arena, *from._impl_.locked_info_)
                        : nullptr;
  _impl_.cfg_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::flex::JobRequestCfg>(
                              arena, *from._impl_.cfg_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, file_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, file_size_),
           offsetof(Impl_, should_fail_) -
               offsetof(Impl_, file_size_) +
               sizeof(Impl_::should_fail_));

  // @@protoc_insertion_point(copy_constructor:flex.MockJob)
}
inline PROTOBUF_NDEBUG_INLINE MockJob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        external_id_(arena) {}

inline void MockJob::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, locked_info_),
           0,
           offsetof(Impl_, should_fail_) -
               offsetof(Impl_, locked_info_) +
               sizeof(Impl_::should_fail_));
}
MockJob::~MockJob() {
  // @@protoc_insertion_point(destructor:flex.MockJob)
  SharedDtor(*this);
}
inline void MockJob::SharedDtor(MessageLite& self) {
  MockJob& this_ = static_cast<MockJob&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.external_id_.Destroy();
  delete this_._impl_.locked_info_;
  delete this_._impl_.cfg_;
  this_._impl_.~Impl_();
}

inline void* MockJob::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MockJob(arena);
}
constexpr auto MockJob::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MockJob),
                                            alignof(MockJob));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MockJob::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MockJob_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MockJob::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MockJob>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MockJob::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MockJob>(), &MockJob::ByteSizeLong,
            &MockJob::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MockJob, _impl_._cached_size_),
        false,
    },
    &MockJob::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MockJob::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 32, 2> MockJob::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MockJob, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967184,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::MockJob>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 num_test_segments = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MockJob, _impl_.num_test_segments_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MockJob, _impl_.num_test_segments_)}},
    // int64 file_size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MockJob, _impl_.file_size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MockJob, _impl_.file_size_)}},
    // string external_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MockJob, _impl_.external_id_)}},
    // bool should_fail = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MockJob, _impl_.should_fail_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MockJob, _impl_.should_fail_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .flex.JobLockedInfo locked_info = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(MockJob, _impl_.locked_info_)}},
    // .flex.JobRequestCfg cfg = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(MockJob, _impl_.cfg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 num_test_segments = 1;
    {PROTOBUF_FIELD_OFFSET(MockJob, _impl_.num_test_segments_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 file_size = 2;
    {PROTOBUF_FIELD_OFFSET(MockJob, _impl_.file_size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string external_id = 3;
    {PROTOBUF_FIELD_OFFSET(MockJob, _impl_.external_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool should_fail = 4;
    {PROTOBUF_FIELD_OFFSET(MockJob, _impl_.should_fail_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .flex.JobLockedInfo locked_info = 6;
    {PROTOBUF_FIELD_OFFSET(MockJob, _impl_.locked_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .flex.JobRequestCfg cfg = 7;
    {PROTOBUF_FIELD_OFFSET(MockJob, _impl_.cfg_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::JobLockedInfo>()},
    {::_pbi::TcParser::GetTable<::flex::JobRequestCfg>()},
  }}, {{
    "\14\0\0\13\0\0\0\0"
    "flex.MockJob"
    "external_id"
  }},
};

PROTOBUF_NOINLINE void MockJob::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.MockJob)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.external_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.locked_info_ != nullptr);
      _impl_.locked_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.cfg_ != nullptr);
      _impl_.cfg_->Clear();
    }
  }
  ::memset(&_impl_.file_size_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.should_fail_) -
      reinterpret_cast<char*>(&_impl_.file_size_)) + sizeof(_impl_.should_fail_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MockJob::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MockJob& this_ = static_cast<const MockJob&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MockJob::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MockJob& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.MockJob)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 num_test_segments = 1;
          if (this_._internal_num_test_segments() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_num_test_segments(), target);
          }

          // int64 file_size = 2;
          if (this_._internal_file_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_file_size(), target);
          }

          // string external_id = 3;
          if (!this_._internal_external_id().empty()) {
            const std::string& _s = this_._internal_external_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.MockJob.external_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool should_fail = 4;
          if (this_._internal_should_fail() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_should_fail(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.JobLockedInfo locked_info = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.locked_info_, this_._impl_.locked_info_->GetCachedSize(), target,
                stream);
          }

          // .flex.JobRequestCfg cfg = 7;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.cfg_, this_._impl_.cfg_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.MockJob)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MockJob::ByteSizeLong(const MessageLite& base) {
          const MockJob& this_ = static_cast<const MockJob&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MockJob::ByteSizeLong() const {
          const MockJob& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.MockJob)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string external_id = 3;
            if (!this_._internal_external_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_external_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .flex.JobLockedInfo locked_info = 6;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.locked_info_);
            }
            // .flex.JobRequestCfg cfg = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cfg_);
            }
          }
           {
            // int64 file_size = 2;
            if (this_._internal_file_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_file_size());
            }
            // int32 num_test_segments = 1;
            if (this_._internal_num_test_segments() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_num_test_segments());
            }
            // bool should_fail = 4;
            if (this_._internal_should_fail() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MockJob::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MockJob*>(&to_msg);
  auto& from = static_cast<const MockJob&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.MockJob)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_external_id().empty()) {
    _this->_internal_set_external_id(from._internal_external_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.locked_info_ != nullptr);
      if (_this->_impl_.locked_info_ == nullptr) {
        _this->_impl_.locked_info_ =
            ::google::protobuf::Message::CopyConstruct<::flex::JobLockedInfo>(arena, *from._impl_.locked_info_);
      } else {
        _this->_impl_.locked_info_->MergeFrom(*from._impl_.locked_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.cfg_ != nullptr);
      if (_this->_impl_.cfg_ == nullptr) {
        _this->_impl_.cfg_ =
            ::google::protobuf::Message::CopyConstruct<::flex::JobRequestCfg>(arena, *from._impl_.cfg_);
      } else {
        _this->_impl_.cfg_->MergeFrom(*from._impl_.cfg_);
      }
    }
  }
  if (from._internal_file_size() != 0) {
    _this->_impl_.file_size_ = from._impl_.file_size_;
  }
  if (from._internal_num_test_segments() != 0) {
    _this->_impl_.num_test_segments_ = from._impl_.num_test_segments_;
  }
  if (from._internal_should_fail() != 0) {
    _this->_impl_.should_fail_ = from._impl_.should_fail_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MockJob::CopyFrom(const MockJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.MockJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MockJob::InternalSwap(MockJob* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.external_id_, &other->_impl_.external_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MockJob, _impl_.should_fail_)
      + sizeof(MockJob::_impl_.should_fail_)
      - PROTOBUF_FIELD_OFFSET(MockJob, _impl_.locked_info_)>(
          reinterpret_cast<char*>(&_impl_.locked_info_),
          reinterpret_cast<char*>(&other->_impl_.locked_info_));
}

::google::protobuf::Metadata MockJob::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SyncJob::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SyncJob>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SyncJob, _impl_._has_bits_);
};

SyncJob::SyncJob(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.SyncJob)
}
inline PROTOBUF_NDEBUG_INLINE SyncJob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::SyncJob& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        remote_path_(arena, from.remote_path_) {}

SyncJob::SyncJob(
    ::google::protobuf::Arena* arena,
    const SyncJob& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SyncJob* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.locked_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::JobLockedInfo>(
                              arena, *from._impl_.locked_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, operation_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, operation_),
           offsetof(Impl_, update_) -
               offsetof(Impl_, operation_) +
               sizeof(Impl_::update_));

  // @@protoc_insertion_point(copy_constructor:flex.SyncJob)
}
inline PROTOBUF_NDEBUG_INLINE SyncJob::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        remote_path_(arena) {}

inline void SyncJob::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, locked_info_),
           0,
           offsetof(Impl_, update_) -
               offsetof(Impl_, locked_info_) +
               sizeof(Impl_::update_));
}
SyncJob::~SyncJob() {
  // @@protoc_insertion_point(destructor:flex.SyncJob)
  SharedDtor(*this);
}
inline void SyncJob::SharedDtor(MessageLite& self) {
  SyncJob& this_ = static_cast<SyncJob&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.remote_path_.Destroy();
  delete this_._impl_.locked_info_;
  this_._impl_.~Impl_();
}

inline void* SyncJob::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SyncJob(arena);
}
constexpr auto SyncJob::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SyncJob),
                                            alignof(SyncJob));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SyncJob::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SyncJob_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SyncJob::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SyncJob>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SyncJob::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SyncJob>(), &SyncJob::ByteSizeLong,
            &SyncJob::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SyncJob, _impl_._cached_size_),
        false,
    },
    &SyncJob::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SyncJob::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 32, 2> SyncJob::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SyncJob, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967176,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::SyncJob>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .flex.SyncJob.Operation operation = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SyncJob, _impl_.operation_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.operation_)}},
    // bool overwrite = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SyncJob, _impl_.overwrite_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.overwrite_)}},
    // string remote_path = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.remote_path_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool flatten = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SyncJob, _impl_.flatten_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.flatten_)}},
    // .flex.JobLockedInfo locked_info = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.locked_info_)}},
    // optional bool update = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SyncJob, _impl_.update_), 1>(),
     {56, 1, 0, PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.update_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.SyncJob.Operation operation = 1;
    {PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.operation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool overwrite = 2;
    {PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.overwrite_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string remote_path = 3;
    {PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.remote_path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool flatten = 5;
    {PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.flatten_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .flex.JobLockedInfo locked_info = 6;
    {PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.locked_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool update = 7;
    {PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.update_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::JobLockedInfo>()},
  }}, {{
    "\14\0\0\13\0\0\0\0"
    "flex.SyncJob"
    "remote_path"
  }},
};

PROTOBUF_NOINLINE void SyncJob::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.SyncJob)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.remote_path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.locked_info_ != nullptr);
    _impl_.locked_info_->Clear();
  }
  ::memset(&_impl_.operation_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.flatten_) -
      reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.flatten_));
  _impl_.update_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SyncJob::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SyncJob& this_ = static_cast<const SyncJob&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SyncJob::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SyncJob& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.SyncJob)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .flex.SyncJob.Operation operation = 1;
          if (this_._internal_operation() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_operation(), target);
          }

          // bool overwrite = 2;
          if (this_._internal_overwrite() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_overwrite(), target);
          }

          // string remote_path = 3;
          if (!this_._internal_remote_path().empty()) {
            const std::string& _s = this_._internal_remote_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.SyncJob.remote_path");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bool flatten = 5;
          if (this_._internal_flatten() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_flatten(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.JobLockedInfo locked_info = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.locked_info_, this_._impl_.locked_info_->GetCachedSize(), target,
                stream);
          }

          // optional bool update = 7;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_update(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.SyncJob)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SyncJob::ByteSizeLong(const MessageLite& base) {
          const SyncJob& this_ = static_cast<const SyncJob&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SyncJob::ByteSizeLong() const {
          const SyncJob& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.SyncJob)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string remote_path = 3;
            if (!this_._internal_remote_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_remote_path());
            }
          }
           {
            // .flex.JobLockedInfo locked_info = 6;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.locked_info_);
            }
          }
           {
            // .flex.SyncJob.Operation operation = 1;
            if (this_._internal_operation() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_operation());
            }
            // bool overwrite = 2;
            if (this_._internal_overwrite() != 0) {
              total_size += 2;
            }
            // bool flatten = 5;
            if (this_._internal_flatten() != 0) {
              total_size += 2;
            }
          }
           {
            // optional bool update = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SyncJob::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SyncJob*>(&to_msg);
  auto& from = static_cast<const SyncJob&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.SyncJob)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_remote_path().empty()) {
    _this->_internal_set_remote_path(from._internal_remote_path());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.locked_info_ != nullptr);
    if (_this->_impl_.locked_info_ == nullptr) {
      _this->_impl_.locked_info_ =
          ::google::protobuf::Message::CopyConstruct<::flex::JobLockedInfo>(arena, *from._impl_.locked_info_);
    } else {
      _this->_impl_.locked_info_->MergeFrom(*from._impl_.locked_info_);
    }
  }
  if (from._internal_operation() != 0) {
    _this->_impl_.operation_ = from._impl_.operation_;
  }
  if (from._internal_overwrite() != 0) {
    _this->_impl_.overwrite_ = from._impl_.overwrite_;
  }
  if (from._internal_flatten() != 0) {
    _this->_impl_.flatten_ = from._impl_.flatten_;
  }
  if (cached_has_bits & 0x00000002u) {
    _this->_impl_.update_ = from._impl_.update_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SyncJob::CopyFrom(const SyncJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.SyncJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SyncJob::InternalSwap(SyncJob* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remote_path_, &other->_impl_.remote_path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.update_)
      + sizeof(SyncJob::_impl_.update_)
      - PROTOBUF_FIELD_OFFSET(SyncJob, _impl_.locked_info_)>(
          reinterpret_cast<char*>(&_impl_.locked_info_),
          reinterpret_cast<char*>(&other->_impl_.locked_info_));
}

::google::protobuf::Metadata SyncJob::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Work_Status::_Internal {
 public:
};

Work_Status::Work_Status(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.Work.Status)
}
inline PROTOBUF_NDEBUG_INLINE Work_Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::Work_Status& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

Work_Status::Work_Status(
    ::google::protobuf::Arena* arena,
    const Work_Status& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Work_Status* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.state_ = from._impl_.state_;

  // @@protoc_insertion_point(copy_constructor:flex.Work.Status)
}
inline PROTOBUF_NDEBUG_INLINE Work_Status::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void Work_Status::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.state_ = {};
}
Work_Status::~Work_Status() {
  // @@protoc_insertion_point(destructor:flex.Work.Status)
  SharedDtor(*this);
}
inline void Work_Status::SharedDtor(MessageLite& self) {
  Work_Status& this_ = static_cast<Work_Status&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Work_Status::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Work_Status(arena);
}
constexpr auto Work_Status::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Work_Status),
                                            alignof(Work_Status));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Work_Status::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Work_Status_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Work_Status::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Work_Status>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Work_Status::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Work_Status>(), &Work_Status::ByteSizeLong,
            &Work_Status::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Work_Status, _impl_._cached_size_),
        false,
    },
    &Work_Status::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Work_Status::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 32, 2> Work_Status::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::Work_Status>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Work_Status, _impl_.message_)}},
    // .flex.Work.State state = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Work_Status, _impl_.state_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Work_Status, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.Work.State state = 1;
    {PROTOBUF_FIELD_OFFSET(Work_Status, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(Work_Status, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\20\0\7\0\0\0\0\0"
    "flex.Work.Status"
    "message"
  }},
};

PROTOBUF_NOINLINE void Work_Status::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.Work.Status)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.state_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Work_Status::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Work_Status& this_ = static_cast<const Work_Status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Work_Status::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Work_Status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.Work.Status)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .flex.Work.State state = 1;
          if (this_._internal_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_state(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.Work.Status.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.Work.Status)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Work_Status::ByteSizeLong(const MessageLite& base) {
          const Work_Status& this_ = static_cast<const Work_Status&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Work_Status::ByteSizeLong() const {
          const Work_Status& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.Work.Status)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // .flex.Work.State state = 1;
            if (this_._internal_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_state());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Work_Status::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Work_Status*>(&to_msg);
  auto& from = static_cast<const Work_Status&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.Work.Status)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_state() != 0) {
    _this->_impl_.state_ = from._impl_.state_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Work_Status::CopyFrom(const Work_Status& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.Work.Status)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Work_Status::InternalSwap(Work_Status* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.state_, other->_impl_.state_);
}

::google::protobuf::Metadata Work_Status::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Work_Part::_Internal {
 public:
};

Work_Part::Work_Part(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.Work.Part)
}
inline PROTOBUF_NDEBUG_INLINE Work_Part::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::Work_Part& from_msg)
      : entity_tag_(arena, from.entity_tag_),
        checksum_sha256_(arena, from.checksum_sha256_),
        _cached_size_{0} {}

Work_Part::Work_Part(
    ::google::protobuf::Arena* arena,
    const Work_Part& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Work_Part* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_start_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_start_),
           offsetof(Impl_, completed_) -
               offsetof(Impl_, offset_start_) +
               sizeof(Impl_::completed_));

  // @@protoc_insertion_point(copy_constructor:flex.Work.Part)
}
inline PROTOBUF_NDEBUG_INLINE Work_Part::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entity_tag_(arena),
        checksum_sha256_(arena),
        _cached_size_{0} {}

inline void Work_Part::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_start_),
           0,
           offsetof(Impl_, completed_) -
               offsetof(Impl_, offset_start_) +
               sizeof(Impl_::completed_));
}
Work_Part::~Work_Part() {
  // @@protoc_insertion_point(destructor:flex.Work.Part)
  SharedDtor(*this);
}
inline void Work_Part::SharedDtor(MessageLite& self) {
  Work_Part& this_ = static_cast<Work_Part&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_tag_.Destroy();
  this_._impl_.checksum_sha256_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Work_Part::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Work_Part(arena);
}
constexpr auto Work_Part::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Work_Part),
                                            alignof(Work_Part));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Work_Part::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Work_Part_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Work_Part::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Work_Part>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Work_Part::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Work_Part>(), &Work_Part::ByteSizeLong,
            &Work_Part::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Work_Part, _impl_._cached_size_),
        false,
    },
    &Work_Part::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Work_Part::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 48, 2> Work_Part::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::Work_Part>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 part_number = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Work_Part, _impl_.part_number_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.part_number_)}},
    // int64 offset_start = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Work_Part, _impl_.offset_start_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.offset_start_)}},
    // int64 offset_stop = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Work_Part, _impl_.offset_stop_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.offset_stop_)}},
    // string entity_tag = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.entity_tag_)}},
    // string checksum_sha256 = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.checksum_sha256_)}},
    // bool completed = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Work_Part, _impl_.completed_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.completed_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 part_number = 1;
    {PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.part_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 offset_start = 2;
    {PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.offset_start_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 offset_stop = 3;
    {PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.offset_stop_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string entity_tag = 4;
    {PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.entity_tag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string checksum_sha256 = 5;
    {PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.checksum_sha256_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool completed = 6;
    {PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.completed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\16\0\0\0\12\17\0\0"
    "flex.Work.Part"
    "entity_tag"
    "checksum_sha256"
  }},
};

PROTOBUF_NOINLINE void Work_Part::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.Work.Part)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_tag_.ClearToEmpty();
  _impl_.checksum_sha256_.ClearToEmpty();
  ::memset(&_impl_.offset_start_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.completed_) -
      reinterpret_cast<char*>(&_impl_.offset_start_)) + sizeof(_impl_.completed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Work_Part::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Work_Part& this_ = static_cast<const Work_Part&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Work_Part::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Work_Part& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.Work.Part)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 part_number = 1;
          if (this_._internal_part_number() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_part_number(), target);
          }

          // int64 offset_start = 2;
          if (this_._internal_offset_start() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_offset_start(), target);
          }

          // int64 offset_stop = 3;
          if (this_._internal_offset_stop() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_offset_stop(), target);
          }

          // string entity_tag = 4;
          if (!this_._internal_entity_tag().empty()) {
            const std::string& _s = this_._internal_entity_tag();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.Work.Part.entity_tag");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string checksum_sha256 = 5;
          if (!this_._internal_checksum_sha256().empty()) {
            const std::string& _s = this_._internal_checksum_sha256();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.Work.Part.checksum_sha256");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bool completed = 6;
          if (this_._internal_completed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_completed(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.Work.Part)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Work_Part::ByteSizeLong(const MessageLite& base) {
          const Work_Part& this_ = static_cast<const Work_Part&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Work_Part::ByteSizeLong() const {
          const Work_Part& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.Work.Part)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string entity_tag = 4;
            if (!this_._internal_entity_tag().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_entity_tag());
            }
            // string checksum_sha256 = 5;
            if (!this_._internal_checksum_sha256().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_checksum_sha256());
            }
            // int64 offset_start = 2;
            if (this_._internal_offset_start() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_offset_start());
            }
            // int64 offset_stop = 3;
            if (this_._internal_offset_stop() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_offset_stop());
            }
            // int32 part_number = 1;
            if (this_._internal_part_number() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_part_number());
            }
            // bool completed = 6;
            if (this_._internal_completed() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Work_Part::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Work_Part*>(&to_msg);
  auto& from = static_cast<const Work_Part&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.Work.Part)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_entity_tag().empty()) {
    _this->_internal_set_entity_tag(from._internal_entity_tag());
  }
  if (!from._internal_checksum_sha256().empty()) {
    _this->_internal_set_checksum_sha256(from._internal_checksum_sha256());
  }
  if (from._internal_offset_start() != 0) {
    _this->_impl_.offset_start_ = from._impl_.offset_start_;
  }
  if (from._internal_offset_stop() != 0) {
    _this->_impl_.offset_stop_ = from._impl_.offset_stop_;
  }
  if (from._internal_part_number() != 0) {
    _this->_impl_.part_number_ = from._impl_.part_number_;
  }
  if (from._internal_completed() != 0) {
    _this->_impl_.completed_ = from._impl_.completed_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Work_Part::CopyFrom(const Work_Part& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.Work.Part)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Work_Part::InternalSwap(Work_Part* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_tag_, &other->_impl_.entity_tag_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.checksum_sha256_, &other->_impl_.checksum_sha256_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.completed_)
      + sizeof(Work_Part::_impl_.completed_)
      - PROTOBUF_FIELD_OFFSET(Work_Part, _impl_.offset_start_)>(
          reinterpret_cast<char*>(&_impl_.offset_start_),
          reinterpret_cast<char*>(&other->_impl_.offset_start_));
}

::google::protobuf::Metadata Work_Part::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Work::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Work>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Work, _impl_._has_bits_);
};

Work::Work(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.Work)
}
inline PROTOBUF_NDEBUG_INLINE Work::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::Work& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parts_{visibility, arena, from.parts_},
        path_(arena, from.path_),
        job_id_(arena, from.job_id_),
        request_id_(arena, from.request_id_) {}

Work::Work(
    ::google::protobuf::Arena* arena,
    const Work& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Work* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::Work_Status>(
                              arena, *from._impl_.status_)
                        : nullptr;
  _impl_.job_builder_ = from._impl_.job_builder_;

  // @@protoc_insertion_point(copy_constructor:flex.Work)
}
inline PROTOBUF_NDEBUG_INLINE Work::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        parts_{visibility, arena},
        path_(arena),
        job_id_(arena),
        request_id_(arena) {}

inline void Work::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, job_builder_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::job_builder_));
}
Work::~Work() {
  // @@protoc_insertion_point(destructor:flex.Work)
  SharedDtor(*this);
}
inline void Work::SharedDtor(MessageLite& self) {
  Work& this_ = static_cast<Work&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.job_id_.Destroy();
  this_._impl_.request_id_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* Work::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Work(arena);
}
constexpr auto Work::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Work, _impl_.parts_) +
          decltype(Work::_impl_.parts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Work), alignof(Work), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Work::PlacementNew_,
                                 sizeof(Work),
                                 alignof(Work));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Work::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Work_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Work::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Work>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Work::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Work>(), &Work::ByteSizeLong,
            &Work::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Work, _impl_._cached_size_),
        false,
    },
    &Work::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Work::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 38, 2> Work::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Work, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::Work>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Work, _impl_.path_)}},
    // string job_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Work, _impl_.job_id_)}},
    // string request_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Work, _impl_.request_id_)}},
    // .flex.Work.Status status = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Work, _impl_.status_)}},
    // repeated .flex.Work.Part parts = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(Work, _impl_.parts_)}},
    // bool job_builder = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Work, _impl_.job_builder_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Work, _impl_.job_builder_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1;
    {PROTOBUF_FIELD_OFFSET(Work, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string job_id = 2;
    {PROTOBUF_FIELD_OFFSET(Work, _impl_.job_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string request_id = 3;
    {PROTOBUF_FIELD_OFFSET(Work, _impl_.request_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .flex.Work.Status status = 4;
    {PROTOBUF_FIELD_OFFSET(Work, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .flex.Work.Part parts = 5;
    {PROTOBUF_FIELD_OFFSET(Work, _impl_.parts_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool job_builder = 6;
    {PROTOBUF_FIELD_OFFSET(Work, _impl_.job_builder_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::Work_Status>()},
    {::_pbi::TcParser::GetTable<::flex::Work_Part>()},
  }}, {{
    "\11\4\6\12\0\0\0\0"
    "flex.Work"
    "path"
    "job_id"
    "request_id"
  }},
};

PROTOBUF_NOINLINE void Work::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.Work)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parts_.Clear();
  _impl_.path_.ClearToEmpty();
  _impl_.job_id_.ClearToEmpty();
  _impl_.request_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.job_builder_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Work::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Work& this_ = static_cast<const Work&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Work::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Work& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.Work)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string path = 1;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.Work.path");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string job_id = 2;
          if (!this_._internal_job_id().empty()) {
            const std::string& _s = this_._internal_job_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.Work.job_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string request_id = 3;
          if (!this_._internal_request_id().empty()) {
            const std::string& _s = this_._internal_request_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.Work.request_id");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.Work.Status status = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
                stream);
          }

          // repeated .flex.Work.Part parts = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_parts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_parts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool job_builder = 6;
          if (this_._internal_job_builder() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_job_builder(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.Work)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Work::ByteSizeLong(const MessageLite& base) {
          const Work& this_ = static_cast<const Work&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Work::ByteSizeLong() const {
          const Work& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.Work)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .flex.Work.Part parts = 5;
            {
              total_size += 1UL * this_._internal_parts_size();
              for (const auto& msg : this_._internal_parts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string path = 1;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // string job_id = 2;
            if (!this_._internal_job_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_job_id());
            }
            // string request_id = 3;
            if (!this_._internal_request_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_request_id());
            }
          }
           {
            // .flex.Work.Status status = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
            }
          }
           {
            // bool job_builder = 6;
            if (this_._internal_job_builder() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Work::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Work*>(&to_msg);
  auto& from = static_cast<const Work&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.Work)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_parts()->MergeFrom(
      from._internal_parts());
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_job_id().empty()) {
    _this->_internal_set_job_id(from._internal_job_id());
  }
  if (!from._internal_request_id().empty()) {
    _this->_internal_set_request_id(from._internal_request_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ =
          ::google::protobuf::Message::CopyConstruct<::flex::Work_Status>(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  if (from._internal_job_builder() != 0) {
    _this->_impl_.job_builder_ = from._impl_.job_builder_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Work::CopyFrom(const Work& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.Work)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Work::InternalSwap(Work* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parts_.InternalSwap(&other->_impl_.parts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.job_id_, &other->_impl_.job_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.request_id_, &other->_impl_.request_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Work, _impl_.job_builder_)
      + sizeof(Work::_impl_.job_builder_)
      - PROTOBUF_FIELD_OFFSET(Work, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata Work::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateConfigRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UpdateConfigRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateConfigRequest, _impl_._has_bits_);
};

UpdateConfigRequest::UpdateConfigRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.UpdateConfigRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateConfigRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::UpdateConfigRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        rsts_{visibility, arena, from.rsts_} {}

UpdateConfigRequest::UpdateConfigRequest(
    ::google::protobuf::Arena* arena,
    const UpdateConfigRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateConfigRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bee_remote_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::BeeRemoteNode>(
                              arena, *from._impl_.bee_remote_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:flex.UpdateConfigRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateConfigRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        rsts_{visibility, arena} {}

inline void UpdateConfigRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bee_remote_ = {};
}
UpdateConfigRequest::~UpdateConfigRequest() {
  // @@protoc_insertion_point(destructor:flex.UpdateConfigRequest)
  SharedDtor(*this);
}
inline void UpdateConfigRequest::SharedDtor(MessageLite& self) {
  UpdateConfigRequest& this_ = static_cast<UpdateConfigRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.bee_remote_;
  this_._impl_.~Impl_();
}

inline void* UpdateConfigRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateConfigRequest(arena);
}
constexpr auto UpdateConfigRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateConfigRequest, _impl_.rsts_) +
          decltype(UpdateConfigRequest::_impl_.rsts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(UpdateConfigRequest), alignof(UpdateConfigRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateConfigRequest::PlacementNew_,
                                 sizeof(UpdateConfigRequest),
                                 alignof(UpdateConfigRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateConfigRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateConfigRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateConfigRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateConfigRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateConfigRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateConfigRequest>(), &UpdateConfigRequest::ByteSizeLong,
            &UpdateConfigRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateConfigRequest, _impl_._cached_size_),
        false,
    },
    &UpdateConfigRequest::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateConfigRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> UpdateConfigRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateConfigRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::UpdateConfigRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .flex.RemoteStorageTarget rsts = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(UpdateConfigRequest, _impl_.rsts_)}},
    // .flex.BeeRemoteNode bee_remote = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateConfigRequest, _impl_.bee_remote_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.BeeRemoteNode bee_remote = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateConfigRequest, _impl_.bee_remote_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .flex.RemoteStorageTarget rsts = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateConfigRequest, _impl_.rsts_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::BeeRemoteNode>()},
    {::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UpdateConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.UpdateConfigRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rsts_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bee_remote_ != nullptr);
    _impl_.bee_remote_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateConfigRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateConfigRequest& this_ = static_cast<const UpdateConfigRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateConfigRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateConfigRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.UpdateConfigRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.BeeRemoteNode bee_remote = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.bee_remote_, this_._impl_.bee_remote_->GetCachedSize(), target,
                stream);
          }

          // repeated .flex.RemoteStorageTarget rsts = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rsts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rsts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.UpdateConfigRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateConfigRequest::ByteSizeLong(const MessageLite& base) {
          const UpdateConfigRequest& this_ = static_cast<const UpdateConfigRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateConfigRequest::ByteSizeLong() const {
          const UpdateConfigRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.UpdateConfigRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .flex.RemoteStorageTarget rsts = 2;
            {
              total_size += 1UL * this_._internal_rsts_size();
              for (const auto& msg : this_._internal_rsts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .flex.BeeRemoteNode bee_remote = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bee_remote_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateConfigRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateConfigRequest*>(&to_msg);
  auto& from = static_cast<const UpdateConfigRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.UpdateConfigRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rsts()->MergeFrom(
      from._internal_rsts());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.bee_remote_ != nullptr);
    if (_this->_impl_.bee_remote_ == nullptr) {
      _this->_impl_.bee_remote_ =
          ::google::protobuf::Message::CopyConstruct<::flex::BeeRemoteNode>(arena, *from._impl_.bee_remote_);
    } else {
      _this->_impl_.bee_remote_->MergeFrom(*from._impl_.bee_remote_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateConfigRequest::CopyFrom(const UpdateConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.UpdateConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateConfigRequest::InternalSwap(UpdateConfigRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.rsts_.InternalSwap(&other->_impl_.rsts_);
  swap(_impl_.bee_remote_, other->_impl_.bee_remote_);
}

::google::protobuf::Metadata UpdateConfigRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateConfigResponse::_Internal {
 public:
};

UpdateConfigResponse::UpdateConfigResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.UpdateConfigResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateConfigResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::UpdateConfigResponse& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

UpdateConfigResponse::UpdateConfigResponse(
    ::google::protobuf::Arena* arena,
    const UpdateConfigResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateConfigResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:flex.UpdateConfigResponse)
}
inline PROTOBUF_NDEBUG_INLINE UpdateConfigResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void UpdateConfigResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
UpdateConfigResponse::~UpdateConfigResponse() {
  // @@protoc_insertion_point(destructor:flex.UpdateConfigResponse)
  SharedDtor(*this);
}
inline void UpdateConfigResponse::SharedDtor(MessageLite& self) {
  UpdateConfigResponse& this_ = static_cast<UpdateConfigResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateConfigResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateConfigResponse(arena);
}
constexpr auto UpdateConfigResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateConfigResponse),
                                            alignof(UpdateConfigResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateConfigResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateConfigResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateConfigResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateConfigResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateConfigResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateConfigResponse>(), &UpdateConfigResponse::ByteSizeLong,
            &UpdateConfigResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateConfigResponse, _impl_._cached_size_),
        false,
    },
    &UpdateConfigResponse::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateConfigResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 41, 2> UpdateConfigResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::UpdateConfigResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateConfigResponse, _impl_.message_)}},
    // .flex.UpdateConfigResponse.Result result = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateConfigResponse, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateConfigResponse, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.UpdateConfigResponse.Result result = 1;
    {PROTOBUF_FIELD_OFFSET(UpdateConfigResponse, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(UpdateConfigResponse, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\7\0\0\0\0\0"
    "flex.UpdateConfigResponse"
    "message"
  }},
};

PROTOBUF_NOINLINE void UpdateConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.UpdateConfigResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateConfigResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateConfigResponse& this_ = static_cast<const UpdateConfigResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateConfigResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateConfigResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.UpdateConfigResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .flex.UpdateConfigResponse.Result result = 1;
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_result(), target);
          }

          // string message = 2;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.UpdateConfigResponse.message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.UpdateConfigResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateConfigResponse::ByteSizeLong(const MessageLite& base) {
          const UpdateConfigResponse& this_ = static_cast<const UpdateConfigResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateConfigResponse::ByteSizeLong() const {
          const UpdateConfigResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.UpdateConfigResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string message = 2;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
            // .flex.UpdateConfigResponse.Result result = 1;
            if (this_._internal_result() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateConfigResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateConfigResponse*>(&to_msg);
  auto& from = static_cast<const UpdateConfigResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.UpdateConfigResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateConfigResponse::CopyFrom(const UpdateConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.UpdateConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateConfigResponse::InternalSwap(UpdateConfigResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata UpdateConfigResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BeeRemoteNode::_Internal {
 public:
};

BeeRemoteNode::BeeRemoteNode(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.BeeRemoteNode)
}
inline PROTOBUF_NDEBUG_INLINE BeeRemoteNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::BeeRemoteNode& from_msg)
      : id_(arena, from.id_),
        address_(arena, from.address_),
        mgmtd_address_(arena, from.mgmtd_address_),
        mgmtd_tls_cert_(arena, from.mgmtd_tls_cert_),
        auth_secret_(arena, from.auth_secret_),
        _cached_size_{0} {}

BeeRemoteNode::BeeRemoteNode(
    ::google::protobuf::Arena* arena,
    const BeeRemoteNode& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BeeRemoteNode* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mgmtd_tls_disable_verification_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, mgmtd_tls_disable_verification_),
           offsetof(Impl_, auth_disable_) -
               offsetof(Impl_, mgmtd_tls_disable_verification_) +
               sizeof(Impl_::auth_disable_));

  // @@protoc_insertion_point(copy_constructor:flex.BeeRemoteNode)
}
inline PROTOBUF_NDEBUG_INLINE BeeRemoteNode::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        address_(arena),
        mgmtd_address_(arena),
        mgmtd_tls_cert_(arena),
        auth_secret_(arena),
        _cached_size_{0} {}

inline void BeeRemoteNode::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mgmtd_tls_disable_verification_),
           0,
           offsetof(Impl_, auth_disable_) -
               offsetof(Impl_, mgmtd_tls_disable_verification_) +
               sizeof(Impl_::auth_disable_));
}
BeeRemoteNode::~BeeRemoteNode() {
  // @@protoc_insertion_point(destructor:flex.BeeRemoteNode)
  SharedDtor(*this);
}
inline void BeeRemoteNode::SharedDtor(MessageLite& self) {
  BeeRemoteNode& this_ = static_cast<BeeRemoteNode&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.address_.Destroy();
  this_._impl_.mgmtd_address_.Destroy();
  this_._impl_.mgmtd_tls_cert_.Destroy();
  this_._impl_.auth_secret_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BeeRemoteNode::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BeeRemoteNode(arena);
}
constexpr auto BeeRemoteNode::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BeeRemoteNode),
                                            alignof(BeeRemoteNode));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BeeRemoteNode::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BeeRemoteNode_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BeeRemoteNode::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BeeRemoteNode>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BeeRemoteNode::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BeeRemoteNode>(), &BeeRemoteNode::ByteSizeLong,
            &BeeRemoteNode::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_._cached_size_),
        false,
    },
    &BeeRemoteNode::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BeeRemoteNode::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 57, 2> BeeRemoteNode::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::BeeRemoteNode>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.id_)}},
    // string address = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.address_)}},
    // string mgmtd_address = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_address_)}},
    // bytes mgmtd_tls_cert = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_tls_cert_)}},
    // bool mgmtd_tls_disable_verification = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BeeRemoteNode, _impl_.mgmtd_tls_disable_verification_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_tls_disable_verification_)}},
    // bool mgmtd_tls_disable = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BeeRemoteNode, _impl_.mgmtd_tls_disable_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_tls_disable_)}},
    // bytes auth_secret = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.auth_secret_)}},
    // bool auth_disable = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BeeRemoteNode, _impl_.auth_disable_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.auth_disable_)}},
    // bool mgmtd_use_proxy = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(BeeRemoteNode, _impl_.mgmtd_use_proxy_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_use_proxy_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string address = 2;
    {PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mgmtd_address = 3;
    {PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes mgmtd_tls_cert = 4;
    {PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_tls_cert_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool mgmtd_tls_disable_verification = 5;
    {PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_tls_disable_verification_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool mgmtd_tls_disable = 6;
    {PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_tls_disable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bytes auth_secret = 7;
    {PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.auth_secret_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool auth_disable = 8;
    {PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.auth_disable_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool mgmtd_use_proxy = 9;
    {PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_use_proxy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\22\2\7\15\0\0\0\0\0\0\0\0\0\0\0\0"
    "flex.BeeRemoteNode"
    "id"
    "address"
    "mgmtd_address"
  }},
};

PROTOBUF_NOINLINE void BeeRemoteNode::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.BeeRemoteNode)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  _impl_.mgmtd_address_.ClearToEmpty();
  _impl_.mgmtd_tls_cert_.ClearToEmpty();
  _impl_.auth_secret_.ClearToEmpty();
  ::memset(&_impl_.mgmtd_tls_disable_verification_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.auth_disable_) -
      reinterpret_cast<char*>(&_impl_.mgmtd_tls_disable_verification_)) + sizeof(_impl_.auth_disable_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BeeRemoteNode::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BeeRemoteNode& this_ = static_cast<const BeeRemoteNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BeeRemoteNode::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BeeRemoteNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.BeeRemoteNode)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.BeeRemoteNode.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string address = 2;
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.BeeRemoteNode.address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string mgmtd_address = 3;
          if (!this_._internal_mgmtd_address().empty()) {
            const std::string& _s = this_._internal_mgmtd_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.BeeRemoteNode.mgmtd_address");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bytes mgmtd_tls_cert = 4;
          if (!this_._internal_mgmtd_tls_cert().empty()) {
            const std::string& _s = this_._internal_mgmtd_tls_cert();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // bool mgmtd_tls_disable_verification = 5;
          if (this_._internal_mgmtd_tls_disable_verification() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_mgmtd_tls_disable_verification(), target);
          }

          // bool mgmtd_tls_disable = 6;
          if (this_._internal_mgmtd_tls_disable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_mgmtd_tls_disable(), target);
          }

          // bytes auth_secret = 7;
          if (!this_._internal_auth_secret().empty()) {
            const std::string& _s = this_._internal_auth_secret();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          // bool auth_disable = 8;
          if (this_._internal_auth_disable() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_auth_disable(), target);
          }

          // bool mgmtd_use_proxy = 9;
          if (this_._internal_mgmtd_use_proxy() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                9, this_._internal_mgmtd_use_proxy(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.BeeRemoteNode)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BeeRemoteNode::ByteSizeLong(const MessageLite& base) {
          const BeeRemoteNode& this_ = static_cast<const BeeRemoteNode&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BeeRemoteNode::ByteSizeLong() const {
          const BeeRemoteNode& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.BeeRemoteNode)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string address = 2;
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
            // string mgmtd_address = 3;
            if (!this_._internal_mgmtd_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_mgmtd_address());
            }
            // bytes mgmtd_tls_cert = 4;
            if (!this_._internal_mgmtd_tls_cert().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_mgmtd_tls_cert());
            }
            // bytes auth_secret = 7;
            if (!this_._internal_auth_secret().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_auth_secret());
            }
            // bool mgmtd_tls_disable_verification = 5;
            if (this_._internal_mgmtd_tls_disable_verification() != 0) {
              total_size += 2;
            }
            // bool mgmtd_tls_disable = 6;
            if (this_._internal_mgmtd_tls_disable() != 0) {
              total_size += 2;
            }
            // bool mgmtd_use_proxy = 9;
            if (this_._internal_mgmtd_use_proxy() != 0) {
              total_size += 2;
            }
            // bool auth_disable = 8;
            if (this_._internal_auth_disable() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BeeRemoteNode::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BeeRemoteNode*>(&to_msg);
  auto& from = static_cast<const BeeRemoteNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.BeeRemoteNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_mgmtd_address().empty()) {
    _this->_internal_set_mgmtd_address(from._internal_mgmtd_address());
  }
  if (!from._internal_mgmtd_tls_cert().empty()) {
    _this->_internal_set_mgmtd_tls_cert(from._internal_mgmtd_tls_cert());
  }
  if (!from._internal_auth_secret().empty()) {
    _this->_internal_set_auth_secret(from._internal_auth_secret());
  }
  if (from._internal_mgmtd_tls_disable_verification() != 0) {
    _this->_impl_.mgmtd_tls_disable_verification_ = from._impl_.mgmtd_tls_disable_verification_;
  }
  if (from._internal_mgmtd_tls_disable() != 0) {
    _this->_impl_.mgmtd_tls_disable_ = from._impl_.mgmtd_tls_disable_;
  }
  if (from._internal_mgmtd_use_proxy() != 0) {
    _this->_impl_.mgmtd_use_proxy_ = from._impl_.mgmtd_use_proxy_;
  }
  if (from._internal_auth_disable() != 0) {
    _this->_impl_.auth_disable_ = from._impl_.auth_disable_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BeeRemoteNode::CopyFrom(const BeeRemoteNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.BeeRemoteNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BeeRemoteNode::InternalSwap(BeeRemoteNode* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mgmtd_address_, &other->_impl_.mgmtd_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mgmtd_tls_cert_, &other->_impl_.mgmtd_tls_cert_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.auth_secret_, &other->_impl_.auth_secret_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.auth_disable_)
      + sizeof(BeeRemoteNode::_impl_.auth_disable_)
      - PROTOBUF_FIELD_OFFSET(BeeRemoteNode, _impl_.mgmtd_tls_disable_verification_)>(
          reinterpret_cast<char*>(&_impl_.mgmtd_tls_disable_verification_),
          reinterpret_cast<char*>(&other->_impl_.mgmtd_tls_disable_verification_));
}

::google::protobuf::Metadata BeeRemoteNode::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoteStorageTarget_Policies::_Internal {
 public:
};

RemoteStorageTarget_Policies::RemoteStorageTarget_Policies(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.RemoteStorageTarget.Policies)
}
RemoteStorageTarget_Policies::RemoteStorageTarget_Policies(
    ::google::protobuf::Arena* arena, const RemoteStorageTarget_Policies& from)
    : RemoteStorageTarget_Policies(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RemoteStorageTarget_Policies::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RemoteStorageTarget_Policies::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.fast_start_max_size_ = {};
}
RemoteStorageTarget_Policies::~RemoteStorageTarget_Policies() {
  // @@protoc_insertion_point(destructor:flex.RemoteStorageTarget.Policies)
  SharedDtor(*this);
}
inline void RemoteStorageTarget_Policies::SharedDtor(MessageLite& self) {
  RemoteStorageTarget_Policies& this_ = static_cast<RemoteStorageTarget_Policies&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RemoteStorageTarget_Policies::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RemoteStorageTarget_Policies(arena);
}
constexpr auto RemoteStorageTarget_Policies::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RemoteStorageTarget_Policies),
                                            alignof(RemoteStorageTarget_Policies));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RemoteStorageTarget_Policies::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RemoteStorageTarget_Policies_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RemoteStorageTarget_Policies::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RemoteStorageTarget_Policies>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RemoteStorageTarget_Policies::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RemoteStorageTarget_Policies>(), &RemoteStorageTarget_Policies::ByteSizeLong,
            &RemoteStorageTarget_Policies::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Policies, _impl_._cached_size_),
        false,
    },
    &RemoteStorageTarget_Policies::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RemoteStorageTarget_Policies::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> RemoteStorageTarget_Policies::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget_Policies>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 fast_start_max_size = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RemoteStorageTarget_Policies, _impl_.fast_start_max_size_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Policies, _impl_.fast_start_max_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 fast_start_max_size = 1;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Policies, _impl_.fast_start_max_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RemoteStorageTarget_Policies::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.RemoteStorageTarget.Policies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fast_start_max_size_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RemoteStorageTarget_Policies::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RemoteStorageTarget_Policies& this_ = static_cast<const RemoteStorageTarget_Policies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RemoteStorageTarget_Policies::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RemoteStorageTarget_Policies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.RemoteStorageTarget.Policies)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 fast_start_max_size = 1;
          if (this_._internal_fast_start_max_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_fast_start_max_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.RemoteStorageTarget.Policies)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RemoteStorageTarget_Policies::ByteSizeLong(const MessageLite& base) {
          const RemoteStorageTarget_Policies& this_ = static_cast<const RemoteStorageTarget_Policies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RemoteStorageTarget_Policies::ByteSizeLong() const {
          const RemoteStorageTarget_Policies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.RemoteStorageTarget.Policies)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 fast_start_max_size = 1;
            if (this_._internal_fast_start_max_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_fast_start_max_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RemoteStorageTarget_Policies::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoteStorageTarget_Policies*>(&to_msg);
  auto& from = static_cast<const RemoteStorageTarget_Policies&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.RemoteStorageTarget.Policies)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fast_start_max_size() != 0) {
    _this->_impl_.fast_start_max_size_ = from._impl_.fast_start_max_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoteStorageTarget_Policies::CopyFrom(const RemoteStorageTarget_Policies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.RemoteStorageTarget.Policies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoteStorageTarget_Policies::InternalSwap(RemoteStorageTarget_Policies* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.fast_start_max_size_, other->_impl_.fast_start_max_size_);
}

::google::protobuf::Metadata RemoteStorageTarget_Policies::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoteStorageTarget_S3::_Internal {
 public:
};

RemoteStorageTarget_S3::RemoteStorageTarget_S3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.RemoteStorageTarget.S3)
}
inline PROTOBUF_NDEBUG_INLINE RemoteStorageTarget_S3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::RemoteStorageTarget_S3& from_msg)
      : endpoint_url_(arena, from.endpoint_url_),
        partition_id_(arena, from.partition_id_),
        region_(arena, from.region_),
        bucket_(arena, from.bucket_),
        access_key_(arena, from.access_key_),
        secret_key_(arena, from.secret_key_),
        _cached_size_{0} {}

RemoteStorageTarget_S3::RemoteStorageTarget_S3(
    ::google::protobuf::Arena* arena,
    const RemoteStorageTarget_S3& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoteStorageTarget_S3* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:flex.RemoteStorageTarget.S3)
}
inline PROTOBUF_NDEBUG_INLINE RemoteStorageTarget_S3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : endpoint_url_(arena),
        partition_id_(arena),
        region_(arena),
        bucket_(arena),
        access_key_(arena),
        secret_key_(arena),
        _cached_size_{0} {}

inline void RemoteStorageTarget_S3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RemoteStorageTarget_S3::~RemoteStorageTarget_S3() {
  // @@protoc_insertion_point(destructor:flex.RemoteStorageTarget.S3)
  SharedDtor(*this);
}
inline void RemoteStorageTarget_S3::SharedDtor(MessageLite& self) {
  RemoteStorageTarget_S3& this_ = static_cast<RemoteStorageTarget_S3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.endpoint_url_.Destroy();
  this_._impl_.partition_id_.Destroy();
  this_._impl_.region_.Destroy();
  this_._impl_.bucket_.Destroy();
  this_._impl_.access_key_.Destroy();
  this_._impl_.secret_key_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RemoteStorageTarget_S3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RemoteStorageTarget_S3(arena);
}
constexpr auto RemoteStorageTarget_S3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RemoteStorageTarget_S3),
                                            alignof(RemoteStorageTarget_S3));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RemoteStorageTarget_S3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RemoteStorageTarget_S3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RemoteStorageTarget_S3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RemoteStorageTarget_S3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RemoteStorageTarget_S3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RemoteStorageTarget_S3>(), &RemoteStorageTarget_S3::ByteSizeLong,
            &RemoteStorageTarget_S3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_._cached_size_),
        false,
    },
    &RemoteStorageTarget_S3::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RemoteStorageTarget_S3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 92, 2> RemoteStorageTarget_S3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget_S3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string endpoint_url = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.endpoint_url_)}},
    // string partition_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.partition_id_)}},
    // string region = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.region_)}},
    // string bucket = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.bucket_)}},
    // string access_key = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.access_key_)}},
    // string secret_key = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.secret_key_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string endpoint_url = 1;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.endpoint_url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string partition_id = 2;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.partition_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string region = 3;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.region_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bucket = 4;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.bucket_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string access_key = 5;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.access_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string secret_key = 6;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_S3, _impl_.secret_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\14\14\6\6\12\12\0"
    "flex.RemoteStorageTarget.S3"
    "endpoint_url"
    "partition_id"
    "region"
    "bucket"
    "access_key"
    "secret_key"
  }},
};

PROTOBUF_NOINLINE void RemoteStorageTarget_S3::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.RemoteStorageTarget.S3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.endpoint_url_.ClearToEmpty();
  _impl_.partition_id_.ClearToEmpty();
  _impl_.region_.ClearToEmpty();
  _impl_.bucket_.ClearToEmpty();
  _impl_.access_key_.ClearToEmpty();
  _impl_.secret_key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RemoteStorageTarget_S3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RemoteStorageTarget_S3& this_ = static_cast<const RemoteStorageTarget_S3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RemoteStorageTarget_S3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RemoteStorageTarget_S3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.RemoteStorageTarget.S3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string endpoint_url = 1;
          if (!this_._internal_endpoint_url().empty()) {
            const std::string& _s = this_._internal_endpoint_url();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.S3.endpoint_url");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string partition_id = 2;
          if (!this_._internal_partition_id().empty()) {
            const std::string& _s = this_._internal_partition_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.S3.partition_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string region = 3;
          if (!this_._internal_region().empty()) {
            const std::string& _s = this_._internal_region();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.S3.region");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string bucket = 4;
          if (!this_._internal_bucket().empty()) {
            const std::string& _s = this_._internal_bucket();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.S3.bucket");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string access_key = 5;
          if (!this_._internal_access_key().empty()) {
            const std::string& _s = this_._internal_access_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.S3.access_key");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string secret_key = 6;
          if (!this_._internal_secret_key().empty()) {
            const std::string& _s = this_._internal_secret_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.S3.secret_key");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.RemoteStorageTarget.S3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RemoteStorageTarget_S3::ByteSizeLong(const MessageLite& base) {
          const RemoteStorageTarget_S3& this_ = static_cast<const RemoteStorageTarget_S3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RemoteStorageTarget_S3::ByteSizeLong() const {
          const RemoteStorageTarget_S3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.RemoteStorageTarget.S3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string endpoint_url = 1;
            if (!this_._internal_endpoint_url().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_endpoint_url());
            }
            // string partition_id = 2;
            if (!this_._internal_partition_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_partition_id());
            }
            // string region = 3;
            if (!this_._internal_region().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_region());
            }
            // string bucket = 4;
            if (!this_._internal_bucket().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bucket());
            }
            // string access_key = 5;
            if (!this_._internal_access_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_access_key());
            }
            // string secret_key = 6;
            if (!this_._internal_secret_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_secret_key());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RemoteStorageTarget_S3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoteStorageTarget_S3*>(&to_msg);
  auto& from = static_cast<const RemoteStorageTarget_S3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.RemoteStorageTarget.S3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_endpoint_url().empty()) {
    _this->_internal_set_endpoint_url(from._internal_endpoint_url());
  }
  if (!from._internal_partition_id().empty()) {
    _this->_internal_set_partition_id(from._internal_partition_id());
  }
  if (!from._internal_region().empty()) {
    _this->_internal_set_region(from._internal_region());
  }
  if (!from._internal_bucket().empty()) {
    _this->_internal_set_bucket(from._internal_bucket());
  }
  if (!from._internal_access_key().empty()) {
    _this->_internal_set_access_key(from._internal_access_key());
  }
  if (!from._internal_secret_key().empty()) {
    _this->_internal_set_secret_key(from._internal_secret_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoteStorageTarget_S3::CopyFrom(const RemoteStorageTarget_S3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.RemoteStorageTarget.S3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoteStorageTarget_S3::InternalSwap(RemoteStorageTarget_S3* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.endpoint_url_, &other->_impl_.endpoint_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.partition_id_, &other->_impl_.partition_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.region_, &other->_impl_.region_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bucket_, &other->_impl_.bucket_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.access_key_, &other->_impl_.access_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secret_key_, &other->_impl_.secret_key_, arena);
}

::google::protobuf::Metadata RemoteStorageTarget_S3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoteStorageTarget_Azure::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RemoteStorageTarget_Azure>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Azure, _impl_._has_bits_);
};

RemoteStorageTarget_Azure::RemoteStorageTarget_Azure(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.RemoteStorageTarget.Azure)
}
inline PROTOBUF_NDEBUG_INLINE RemoteStorageTarget_Azure::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::RemoteStorageTarget_Azure& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_(arena, from.account_) {}

RemoteStorageTarget_Azure::RemoteStorageTarget_Azure(
    ::google::protobuf::Arena* arena,
    const RemoteStorageTarget_Azure& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoteStorageTarget_Azure* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.s3_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_S3>(
                              arena, *from._impl_.s3_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:flex.RemoteStorageTarget.Azure)
}
inline PROTOBUF_NDEBUG_INLINE RemoteStorageTarget_Azure::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_(arena) {}

inline void RemoteStorageTarget_Azure::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.s3_ = {};
}
RemoteStorageTarget_Azure::~RemoteStorageTarget_Azure() {
  // @@protoc_insertion_point(destructor:flex.RemoteStorageTarget.Azure)
  SharedDtor(*this);
}
inline void RemoteStorageTarget_Azure::SharedDtor(MessageLite& self) {
  RemoteStorageTarget_Azure& this_ = static_cast<RemoteStorageTarget_Azure&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_.Destroy();
  delete this_._impl_.s3_;
  this_._impl_.~Impl_();
}

inline void* RemoteStorageTarget_Azure::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RemoteStorageTarget_Azure(arena);
}
constexpr auto RemoteStorageTarget_Azure::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RemoteStorageTarget_Azure),
                                            alignof(RemoteStorageTarget_Azure));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RemoteStorageTarget_Azure::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RemoteStorageTarget_Azure_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RemoteStorageTarget_Azure::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RemoteStorageTarget_Azure>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RemoteStorageTarget_Azure::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RemoteStorageTarget_Azure>(), &RemoteStorageTarget_Azure::ByteSizeLong,
            &RemoteStorageTarget_Azure::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Azure, _impl_._cached_size_),
        false,
    },
    &RemoteStorageTarget_Azure::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RemoteStorageTarget_Azure::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 46, 2> RemoteStorageTarget_Azure::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Azure, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget_Azure>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string account = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Azure, _impl_.account_)}},
    // .flex.RemoteStorageTarget.S3 s3 = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Azure, _impl_.s3_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .flex.RemoteStorageTarget.S3 s3 = 1;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Azure, _impl_.s3_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string account = 2;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_Azure, _impl_.account_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget_S3>()},
  }}, {{
    "\36\0\7\0\0\0\0\0"
    "flex.RemoteStorageTarget.Azure"
    "account"
  }},
};

PROTOBUF_NOINLINE void RemoteStorageTarget_Azure::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.RemoteStorageTarget.Azure)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.account_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.s3_ != nullptr);
    _impl_.s3_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RemoteStorageTarget_Azure::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RemoteStorageTarget_Azure& this_ = static_cast<const RemoteStorageTarget_Azure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RemoteStorageTarget_Azure::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RemoteStorageTarget_Azure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.RemoteStorageTarget.Azure)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.RemoteStorageTarget.S3 s3 = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.s3_, this_._impl_.s3_->GetCachedSize(), target,
                stream);
          }

          // string account = 2;
          if (!this_._internal_account().empty()) {
            const std::string& _s = this_._internal_account();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.Azure.account");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.RemoteStorageTarget.Azure)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RemoteStorageTarget_Azure::ByteSizeLong(const MessageLite& base) {
          const RemoteStorageTarget_Azure& this_ = static_cast<const RemoteStorageTarget_Azure&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RemoteStorageTarget_Azure::ByteSizeLong() const {
          const RemoteStorageTarget_Azure& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.RemoteStorageTarget.Azure)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string account = 2;
            if (!this_._internal_account().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account());
            }
          }
           {
            // .flex.RemoteStorageTarget.S3 s3 = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.s3_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RemoteStorageTarget_Azure::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoteStorageTarget_Azure*>(&to_msg);
  auto& from = static_cast<const RemoteStorageTarget_Azure&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.RemoteStorageTarget.Azure)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_account().empty()) {
    _this->_internal_set_account(from._internal_account());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.s3_ != nullptr);
    if (_this->_impl_.s3_ == nullptr) {
      _this->_impl_.s3_ =
          ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_S3>(arena, *from._impl_.s3_);
    } else {
      _this->_impl_.s3_->MergeFrom(*from._impl_.s3_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoteStorageTarget_Azure::CopyFrom(const RemoteStorageTarget_Azure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.RemoteStorageTarget.Azure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoteStorageTarget_Azure::InternalSwap(RemoteStorageTarget_Azure* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_, &other->_impl_.account_, arena);
  swap(_impl_.s3_, other->_impl_.s3_);
}

::google::protobuf::Metadata RemoteStorageTarget_Azure::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoteStorageTarget_POSIX::_Internal {
 public:
};

RemoteStorageTarget_POSIX::RemoteStorageTarget_POSIX(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.RemoteStorageTarget.POSIX)
}
inline PROTOBUF_NDEBUG_INLINE RemoteStorageTarget_POSIX::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::RemoteStorageTarget_POSIX& from_msg)
      : path_(arena, from.path_),
        _cached_size_{0} {}

RemoteStorageTarget_POSIX::RemoteStorageTarget_POSIX(
    ::google::protobuf::Arena* arena,
    const RemoteStorageTarget_POSIX& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoteStorageTarget_POSIX* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:flex.RemoteStorageTarget.POSIX)
}
inline PROTOBUF_NDEBUG_INLINE RemoteStorageTarget_POSIX::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_(arena),
        _cached_size_{0} {}

inline void RemoteStorageTarget_POSIX::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RemoteStorageTarget_POSIX::~RemoteStorageTarget_POSIX() {
  // @@protoc_insertion_point(destructor:flex.RemoteStorageTarget.POSIX)
  SharedDtor(*this);
}
inline void RemoteStorageTarget_POSIX::SharedDtor(MessageLite& self) {
  RemoteStorageTarget_POSIX& this_ = static_cast<RemoteStorageTarget_POSIX&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RemoteStorageTarget_POSIX::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RemoteStorageTarget_POSIX(arena);
}
constexpr auto RemoteStorageTarget_POSIX::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RemoteStorageTarget_POSIX),
                                            alignof(RemoteStorageTarget_POSIX));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RemoteStorageTarget_POSIX::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RemoteStorageTarget_POSIX_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RemoteStorageTarget_POSIX::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RemoteStorageTarget_POSIX>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RemoteStorageTarget_POSIX::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RemoteStorageTarget_POSIX>(), &RemoteStorageTarget_POSIX::ByteSizeLong,
            &RemoteStorageTarget_POSIX::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_POSIX, _impl_._cached_size_),
        false,
    },
    &RemoteStorageTarget_POSIX::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RemoteStorageTarget_POSIX::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 43, 2> RemoteStorageTarget_POSIX::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget_POSIX>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_POSIX, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget_POSIX, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\4\0\0\0\0\0\0"
    "flex.RemoteStorageTarget.POSIX"
    "path"
  }},
};

PROTOBUF_NOINLINE void RemoteStorageTarget_POSIX::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.RemoteStorageTarget.POSIX)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RemoteStorageTarget_POSIX::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RemoteStorageTarget_POSIX& this_ = static_cast<const RemoteStorageTarget_POSIX&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RemoteStorageTarget_POSIX::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RemoteStorageTarget_POSIX& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.RemoteStorageTarget.POSIX)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string path = 1;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.POSIX.path");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.RemoteStorageTarget.POSIX)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RemoteStorageTarget_POSIX::ByteSizeLong(const MessageLite& base) {
          const RemoteStorageTarget_POSIX& this_ = static_cast<const RemoteStorageTarget_POSIX&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RemoteStorageTarget_POSIX::ByteSizeLong() const {
          const RemoteStorageTarget_POSIX& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.RemoteStorageTarget.POSIX)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string path = 1;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RemoteStorageTarget_POSIX::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoteStorageTarget_POSIX*>(&to_msg);
  auto& from = static_cast<const RemoteStorageTarget_POSIX&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.RemoteStorageTarget.POSIX)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoteStorageTarget_POSIX::CopyFrom(const RemoteStorageTarget_POSIX& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.RemoteStorageTarget.POSIX)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoteStorageTarget_POSIX::InternalSwap(RemoteStorageTarget_POSIX* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
}

::google::protobuf::Metadata RemoteStorageTarget_POSIX::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoteStorageTarget::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RemoteStorageTarget>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::flex::RemoteStorageTarget, _impl_._oneof_case_);
};

void RemoteStorageTarget::set_allocated_s3(::flex::RemoteStorageTarget_S3* s3) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (s3) {
    ::google::protobuf::Arena* submessage_arena = s3->GetArena();
    if (message_arena != submessage_arena) {
      s3 = ::google::protobuf::internal::GetOwnedMessage(message_arena, s3, submessage_arena);
    }
    set_has_s3();
    _impl_.type_.s3_ = s3;
  }
  // @@protoc_insertion_point(field_set_allocated:flex.RemoteStorageTarget.s3)
}
void RemoteStorageTarget::set_allocated_posix(::flex::RemoteStorageTarget_POSIX* posix) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (posix) {
    ::google::protobuf::Arena* submessage_arena = posix->GetArena();
    if (message_arena != submessage_arena) {
      posix = ::google::protobuf::internal::GetOwnedMessage(message_arena, posix, submessage_arena);
    }
    set_has_posix();
    _impl_.type_.posix_ = posix;
  }
  // @@protoc_insertion_point(field_set_allocated:flex.RemoteStorageTarget.posix)
}
void RemoteStorageTarget::set_allocated_azure(::flex::RemoteStorageTarget_Azure* azure) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_type();
  if (azure) {
    ::google::protobuf::Arena* submessage_arena = azure->GetArena();
    if (message_arena != submessage_arena) {
      azure = ::google::protobuf::internal::GetOwnedMessage(message_arena, azure, submessage_arena);
    }
    set_has_azure();
    _impl_.type_.azure_ = azure;
  }
  // @@protoc_insertion_point(field_set_allocated:flex.RemoteStorageTarget.azure)
}
RemoteStorageTarget::RemoteStorageTarget(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:flex.RemoteStorageTarget)
}
inline PROTOBUF_NDEBUG_INLINE RemoteStorageTarget::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::flex::RemoteStorageTarget& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        type_{},
        _oneof_case_{from._oneof_case_[0]} {}

RemoteStorageTarget::RemoteStorageTarget(
    ::google::protobuf::Arena* arena,
    const RemoteStorageTarget& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoteStorageTarget* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.policies_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_Policies>(
                              arena, *from._impl_.policies_)
                        : nullptr;
  _impl_.id_ = from._impl_.id_;
  switch (type_case()) {
    case TYPE_NOT_SET:
      break;
      case kS3:
        _impl_.type_.s3_ = ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_S3>(arena, *from._impl_.type_.s3_);
        break;
      case kPosix:
        _impl_.type_.posix_ = ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_POSIX>(arena, *from._impl_.type_.posix_);
        break;
      case kAzure:
        _impl_.type_.azure_ = ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_Azure>(arena, *from._impl_.type_.azure_);
        break;
      case kMock:
        new (&_impl_.type_.mock_) decltype(_impl_.type_.mock_){arena, from._impl_.type_.mock_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:flex.RemoteStorageTarget)
}
inline PROTOBUF_NDEBUG_INLINE RemoteStorageTarget::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        type_{},
        _oneof_case_{} {}

inline void RemoteStorageTarget::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, policies_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, policies_) +
               sizeof(Impl_::id_));
}
RemoteStorageTarget::~RemoteStorageTarget() {
  // @@protoc_insertion_point(destructor:flex.RemoteStorageTarget)
  SharedDtor(*this);
}
inline void RemoteStorageTarget::SharedDtor(MessageLite& self) {
  RemoteStorageTarget& this_ = static_cast<RemoteStorageTarget&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.policies_;
  if (this_.has_type()) {
    this_.clear_type();
  }
  this_._impl_.~Impl_();
}

void RemoteStorageTarget::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:flex.RemoteStorageTarget)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (type_case()) {
    case kS3: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.s3_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.s3_);
      }
      break;
    }
    case kPosix: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.posix_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.posix_);
      }
      break;
    }
    case kAzure: {
      if (GetArena() == nullptr) {
        delete _impl_.type_.azure_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.type_.azure_);
      }
      break;
    }
    case kMock: {
      _impl_.type_.mock_.Destroy();
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TYPE_NOT_SET;
}


inline void* RemoteStorageTarget::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RemoteStorageTarget(arena);
}
constexpr auto RemoteStorageTarget::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RemoteStorageTarget),
                                            alignof(RemoteStorageTarget));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RemoteStorageTarget::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RemoteStorageTarget_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RemoteStorageTarget::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RemoteStorageTarget>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RemoteStorageTarget::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RemoteStorageTarget>(), &RemoteStorageTarget::ByteSizeLong,
            &RemoteStorageTarget::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_._cached_size_),
        false,
    },
    &RemoteStorageTarget::kDescriptorMethods,
    &descriptor_table_flex_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RemoteStorageTarget::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 7, 4, 41, 2> RemoteStorageTarget::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_._has_bits_),
    0, // no _extensions_
    7, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RemoteStorageTarget, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.name_)}},
    // .flex.RemoteStorageTarget.Policies policies = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.policies_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .flex.RemoteStorageTarget.Policies policies = 3;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.policies_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .flex.RemoteStorageTarget.S3 s3 = 4;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.type_.s3_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .flex.RemoteStorageTarget.POSIX posix = 5;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.type_.posix_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .flex.RemoteStorageTarget.Azure azure = 6;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.type_.azure_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // string mock = 7;
    {PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.type_.mock_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget_Policies>()},
    {::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget_S3>()},
    {::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget_POSIX>()},
    {::_pbi::TcParser::GetTable<::flex::RemoteStorageTarget_Azure>()},
  }}, {{
    "\30\0\4\0\0\0\0\4"
    "flex.RemoteStorageTarget"
    "name"
    "mock"
  }},
};

PROTOBUF_NOINLINE void RemoteStorageTarget::Clear() {
// @@protoc_insertion_point(message_clear_start:flex.RemoteStorageTarget)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.policies_ != nullptr);
    _impl_.policies_->Clear();
  }
  _impl_.id_ = 0u;
  clear_type();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RemoteStorageTarget::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RemoteStorageTarget& this_ = static_cast<const RemoteStorageTarget&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RemoteStorageTarget::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RemoteStorageTarget& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:flex.RemoteStorageTarget)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 id = 1;
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_id(), target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .flex.RemoteStorageTarget.Policies policies = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.policies_, this_._impl_.policies_->GetCachedSize(), target,
                stream);
          }

          switch (this_.type_case()) {
            case kS3: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.type_.s3_, this_._impl_.type_.s3_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPosix: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.type_.posix_, this_._impl_.type_.posix_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kAzure: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.type_.azure_, this_._impl_.type_.azure_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMock: {
              const std::string& _s = this_._internal_mock();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "flex.RemoteStorageTarget.mock");
              target = stream->WriteStringMaybeAliased(7, _s, target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:flex.RemoteStorageTarget)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RemoteStorageTarget::ByteSizeLong(const MessageLite& base) {
          const RemoteStorageTarget& this_ = static_cast<const RemoteStorageTarget&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RemoteStorageTarget::ByteSizeLong() const {
          const RemoteStorageTarget& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:flex.RemoteStorageTarget)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
           {
            // .flex.RemoteStorageTarget.Policies policies = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.policies_);
            }
          }
           {
            // uint32 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_id());
            }
          }
          switch (this_.type_case()) {
            // .flex.RemoteStorageTarget.S3 s3 = 4;
            case kS3: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.s3_);
              break;
            }
            // .flex.RemoteStorageTarget.POSIX posix = 5;
            case kPosix: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.posix_);
              break;
            }
            // .flex.RemoteStorageTarget.Azure azure = 6;
            case kAzure: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.type_.azure_);
              break;
            }
            // string mock = 7;
            case kMock: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_mock());
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RemoteStorageTarget::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoteStorageTarget*>(&to_msg);
  auto& from = static_cast<const RemoteStorageTarget&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:flex.RemoteStorageTarget)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.policies_ != nullptr);
    if (_this->_impl_.policies_ == nullptr) {
      _this->_impl_.policies_ =
          ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_Policies>(arena, *from._impl_.policies_);
    } else {
      _this->_impl_.policies_->MergeFrom(*from._impl_.policies_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kS3: {
        if (oneof_needs_init) {
          _this->_impl_.type_.s3_ =
              ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_S3>(arena, *from._impl_.type_.s3_);
        } else {
          _this->_impl_.type_.s3_->MergeFrom(from._internal_s3());
        }
        break;
      }
      case kPosix: {
        if (oneof_needs_init) {
          _this->_impl_.type_.posix_ =
              ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_POSIX>(arena, *from._impl_.type_.posix_);
        } else {
          _this->_impl_.type_.posix_->MergeFrom(from._internal_posix());
        }
        break;
      }
      case kAzure: {
        if (oneof_needs_init) {
          _this->_impl_.type_.azure_ =
              ::google::protobuf::Message::CopyConstruct<::flex::RemoteStorageTarget_Azure>(arena, *from._impl_.type_.azure_);
        } else {
          _this->_impl_.type_.azure_->MergeFrom(from._internal_azure());
        }
        break;
      }
      case kMock: {
        if (oneof_needs_init) {
          _this->_impl_.type_.mock_.InitDefault();
        }
        _this->_impl_.type_.mock_.Set(from._internal_mock(), arena);
        break;
      }
      case TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoteStorageTarget::CopyFrom(const RemoteStorageTarget& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flex.RemoteStorageTarget)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoteStorageTarget::InternalSwap(RemoteStorageTarget* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.id_)
      + sizeof(RemoteStorageTarget::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(RemoteStorageTarget, _impl_.policies_)>(
          reinterpret_cast<char*>(&_impl_.policies_),
          reinterpret_cast<char*>(&other->_impl_.policies_));
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RemoteStorageTarget::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace flex
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_flex_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

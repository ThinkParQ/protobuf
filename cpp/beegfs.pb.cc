// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: beegfs.proto
// Protobuf C++ Version: 5.29.2

#include "beegfs.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace beegfs {

inline constexpr LegacyId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : num_id_{0u},
        node_type_{static_cast< ::beegfs::NodeType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LegacyId::LegacyId(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LegacyIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LegacyIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LegacyIdDefaultTypeInternal() {}
  union {
    LegacyId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LegacyIdDefaultTypeInternal _LegacyId_default_instance_;

inline constexpr EntityIdSet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        alias_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        legacy_id_{nullptr},
        uid_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR EntityIdSet::EntityIdSet(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityIdSetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityIdSetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityIdSetDefaultTypeInternal() {}
  union {
    EntityIdSet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityIdSetDefaultTypeInternal _EntityIdSet_default_instance_;
}  // namespace beegfs
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_beegfs_2eproto[8];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_beegfs_2eproto = nullptr;
const ::uint32_t
    TableStruct_beegfs_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::beegfs::LegacyId, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::beegfs::LegacyId, _impl_.num_id_),
        PROTOBUF_FIELD_OFFSET(::beegfs::LegacyId, _impl_.node_type_),
        PROTOBUF_FIELD_OFFSET(::beegfs::EntityIdSet, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::beegfs::EntityIdSet, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::beegfs::EntityIdSet, _impl_.uid_),
        PROTOBUF_FIELD_OFFSET(::beegfs::EntityIdSet, _impl_.alias_),
        PROTOBUF_FIELD_OFFSET(::beegfs::EntityIdSet, _impl_.legacy_id_),
        2,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::beegfs::LegacyId)},
        {10, 21, -1, sizeof(::beegfs::EntityIdSet)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::beegfs::_LegacyId_default_instance_._instance,
    &::beegfs::_EntityIdSet_default_instance_._instance,
};
const char descriptor_table_protodef_beegfs_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014beegfs.proto\022\006beegfs\"\?\n\010LegacyId\022\016\n\006nu"
    "m_id\030\001 \001(\r\022#\n\tnode_type\030\002 \001(\0162\020.beegfs.N"
    "odeType\"}\n\013EntityIdSet\022\020\n\003uid\030\001 \001(\003H\000\210\001\001"
    "\022\022\n\005alias\030\002 \001(\tH\001\210\001\001\022(\n\tlegacy_id\030\003 \001(\0132"
    "\020.beegfs.LegacyIdH\002\210\001\001B\006\n\004_uidB\010\n\006_alias"
    "B\014\n\n_legacy_id*Z\n\nEntityType\022\033\n\027ENTITY_T"
    "YPE_UNSPECIFIED\020\000\022\010\n\004NODE\020\001\022\n\n\006TARGET\020\002\022"
    "\017\n\013BUDDY_GROUP\020\003\022\010\n\004POOL\020\004*n\n\010NodeType\022\031"
    "\n\025NODE_TYPE_UNSPECIFIED\020\000\022\n\n\006CLIENT\020\001\022\010\n"
    "\004META\020\002\022\013\n\007STORAGE\020\003\022\016\n\nMANAGEMENT\020\004\022\n\n\006"
    "REMOTE\020\005\022\010\n\004SYNC\020\006*^\n\021ReachabilityState\022"
    "\"\n\036REACHABILITY_STATE_UNSPECIFIED\020\000\022\n\n\006O"
    "NLINE\020\001\022\014\n\010POFFLINE\020\002\022\013\n\007OFFLINE\020\003*Z\n\020Co"
    "nsistencyState\022!\n\035CONSISTENCY_STATE_UNSP"
    "ECIFIED\020\000\022\010\n\004GOOD\020\001\022\020\n\014NEEDS_RESYNC\020\002\022\007\n"
    "\003BAD\020\003*Q\n\014CapacityPool\022\035\n\031CAPACITY_POOL_"
    "UNSPECIFIED\020\000\022\n\n\006NORMAL\020\001\022\007\n\003LOW\020\002\022\r\n\tEM"
    "ERGENCY\020\003*;\n\007NicType\022\030\n\024NIC_TYPE_UNSPECI"
    "FIED\020\000\022\014\n\010ETHERNET\020\001\022\010\n\004RDMA\020\002*]\n\013QuotaI"
    "dType\022\035\n\031QUOTA_ID_TYPE_UNSPECIFIED\020\000\022\026\n\022"
    "QUOTA_ID_TYPE_USER\020\001\022\027\n\023QUOTA_ID_TYPE_GR"
    "OUP\020\002*S\n\tQuotaType\022\032\n\026QUOTA_TYPE_UNSPECI"
    "FIED\020\000\022\024\n\020QUOTA_TYPE_SPACE\020\001\022\024\n\020QUOTA_TY"
    "PE_INODE\020\002B)Z\'github.com/thinkparq/proto"
    "buf/go/beegfsb\006proto3"
};
static ::absl::once_flag descriptor_table_beegfs_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_beegfs_2eproto = {
    false,
    false,
    981,
    descriptor_table_protodef_beegfs_2eproto,
    "beegfs.proto",
    &descriptor_table_beegfs_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_beegfs_2eproto::offsets,
    file_level_enum_descriptors_beegfs_2eproto,
    file_level_service_descriptors_beegfs_2eproto,
};
namespace beegfs {
const ::google::protobuf::EnumDescriptor* EntityType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beegfs_2eproto);
  return file_level_enum_descriptors_beegfs_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t EntityType_internal_data_[] = {
    327680u, 0u, };
bool EntityType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* NodeType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beegfs_2eproto);
  return file_level_enum_descriptors_beegfs_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t NodeType_internal_data_[] = {
    458752u, 0u, };
bool NodeType_IsValid(int value) {
  return 0 <= value && value <= 6;
}
const ::google::protobuf::EnumDescriptor* ReachabilityState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beegfs_2eproto);
  return file_level_enum_descriptors_beegfs_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ReachabilityState_internal_data_[] = {
    262144u, 0u, };
bool ReachabilityState_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* ConsistencyState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beegfs_2eproto);
  return file_level_enum_descriptors_beegfs_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t ConsistencyState_internal_data_[] = {
    262144u, 0u, };
bool ConsistencyState_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* CapacityPool_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beegfs_2eproto);
  return file_level_enum_descriptors_beegfs_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t CapacityPool_internal_data_[] = {
    262144u, 0u, };
bool CapacityPool_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* NicType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beegfs_2eproto);
  return file_level_enum_descriptors_beegfs_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t NicType_internal_data_[] = {
    196608u, 0u, };
bool NicType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* QuotaIdType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beegfs_2eproto);
  return file_level_enum_descriptors_beegfs_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t QuotaIdType_internal_data_[] = {
    196608u, 0u, };
bool QuotaIdType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* QuotaType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_beegfs_2eproto);
  return file_level_enum_descriptors_beegfs_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t QuotaType_internal_data_[] = {
    196608u, 0u, };
bool QuotaType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class LegacyId::_Internal {
 public:
};

LegacyId::LegacyId(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:beegfs.LegacyId)
}
LegacyId::LegacyId(
    ::google::protobuf::Arena* arena, const LegacyId& from)
    : LegacyId(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LegacyId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LegacyId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_id_),
           0,
           offsetof(Impl_, node_type_) -
               offsetof(Impl_, num_id_) +
               sizeof(Impl_::node_type_));
}
LegacyId::~LegacyId() {
  // @@protoc_insertion_point(destructor:beegfs.LegacyId)
  SharedDtor(*this);
}
inline void LegacyId::SharedDtor(MessageLite& self) {
  LegacyId& this_ = static_cast<LegacyId&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LegacyId::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LegacyId(arena);
}
constexpr auto LegacyId::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LegacyId),
                                            alignof(LegacyId));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LegacyId::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LegacyId_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LegacyId::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LegacyId>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LegacyId::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LegacyId>(), &LegacyId::ByteSizeLong,
            &LegacyId::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LegacyId, _impl_._cached_size_),
        false,
    },
    &LegacyId::kDescriptorMethods,
    &descriptor_table_beegfs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LegacyId::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> LegacyId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::beegfs::LegacyId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .beegfs.NodeType node_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LegacyId, _impl_.node_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LegacyId, _impl_.node_type_)}},
    // uint32 num_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LegacyId, _impl_.num_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LegacyId, _impl_.num_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 num_id = 1;
    {PROTOBUF_FIELD_OFFSET(LegacyId, _impl_.num_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .beegfs.NodeType node_type = 2;
    {PROTOBUF_FIELD_OFFSET(LegacyId, _impl_.node_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LegacyId::Clear() {
// @@protoc_insertion_point(message_clear_start:beegfs.LegacyId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.num_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.node_type_) -
      reinterpret_cast<char*>(&_impl_.num_id_)) + sizeof(_impl_.node_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LegacyId::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LegacyId& this_ = static_cast<const LegacyId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LegacyId::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LegacyId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:beegfs.LegacyId)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 num_id = 1;
          if (this_._internal_num_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_num_id(), target);
          }

          // .beegfs.NodeType node_type = 2;
          if (this_._internal_node_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_node_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:beegfs.LegacyId)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LegacyId::ByteSizeLong(const MessageLite& base) {
          const LegacyId& this_ = static_cast<const LegacyId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LegacyId::ByteSizeLong() const {
          const LegacyId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:beegfs.LegacyId)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint32 num_id = 1;
            if (this_._internal_num_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_num_id());
            }
            // .beegfs.NodeType node_type = 2;
            if (this_._internal_node_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_node_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LegacyId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LegacyId*>(&to_msg);
  auto& from = static_cast<const LegacyId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:beegfs.LegacyId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num_id() != 0) {
    _this->_impl_.num_id_ = from._impl_.num_id_;
  }
  if (from._internal_node_type() != 0) {
    _this->_impl_.node_type_ = from._impl_.node_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LegacyId::CopyFrom(const LegacyId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:beegfs.LegacyId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LegacyId::InternalSwap(LegacyId* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LegacyId, _impl_.node_type_)
      + sizeof(LegacyId::_impl_.node_type_)
      - PROTOBUF_FIELD_OFFSET(LegacyId, _impl_.num_id_)>(
          reinterpret_cast<char*>(&_impl_.num_id_),
          reinterpret_cast<char*>(&other->_impl_.num_id_));
}

::google::protobuf::Metadata LegacyId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EntityIdSet::_Internal {
 public:
  using HasBits =
      decltype(std::declval<EntityIdSet>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_._has_bits_);
};

EntityIdSet::EntityIdSet(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:beegfs.EntityIdSet)
}
inline PROTOBUF_NDEBUG_INLINE EntityIdSet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::beegfs::EntityIdSet& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        alias_(arena, from.alias_) {}

EntityIdSet::EntityIdSet(
    ::google::protobuf::Arena* arena,
    const EntityIdSet& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntityIdSet* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.legacy_id_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::beegfs::LegacyId>(
                              arena, *from._impl_.legacy_id_)
                        : nullptr;
  _impl_.uid_ = from._impl_.uid_;

  // @@protoc_insertion_point(copy_constructor:beegfs.EntityIdSet)
}
inline PROTOBUF_NDEBUG_INLINE EntityIdSet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        alias_(arena) {}

inline void EntityIdSet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, legacy_id_),
           0,
           offsetof(Impl_, uid_) -
               offsetof(Impl_, legacy_id_) +
               sizeof(Impl_::uid_));
}
EntityIdSet::~EntityIdSet() {
  // @@protoc_insertion_point(destructor:beegfs.EntityIdSet)
  SharedDtor(*this);
}
inline void EntityIdSet::SharedDtor(MessageLite& self) {
  EntityIdSet& this_ = static_cast<EntityIdSet&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.alias_.Destroy();
  delete this_._impl_.legacy_id_;
  this_._impl_.~Impl_();
}

inline void* EntityIdSet::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EntityIdSet(arena);
}
constexpr auto EntityIdSet::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EntityIdSet),
                                            alignof(EntityIdSet));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EntityIdSet::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EntityIdSet_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EntityIdSet::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EntityIdSet>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EntityIdSet::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EntityIdSet>(), &EntityIdSet::ByteSizeLong,
            &EntityIdSet::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_._cached_size_),
        false,
    },
    &EntityIdSet::kDescriptorMethods,
    &descriptor_table_beegfs_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EntityIdSet::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 32, 2> EntityIdSet::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::beegfs::EntityIdSet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int64 uid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EntityIdSet, _impl_.uid_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_.uid_)}},
    // optional string alias = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_.alias_)}},
    // optional .beegfs.LegacyId legacy_id = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_.legacy_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int64 uid = 1;
    {PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_.uid_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional string alias = 2;
    {PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_.alias_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .beegfs.LegacyId legacy_id = 3;
    {PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_.legacy_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::beegfs::LegacyId>()},
  }}, {{
    "\22\0\5\0\0\0\0\0"
    "beegfs.EntityIdSet"
    "alias"
  }},
};

PROTOBUF_NOINLINE void EntityIdSet::Clear() {
// @@protoc_insertion_point(message_clear_start:beegfs.EntityIdSet)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.alias_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.legacy_id_ != nullptr);
      _impl_.legacy_id_->Clear();
    }
  }
  _impl_.uid_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EntityIdSet::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EntityIdSet& this_ = static_cast<const EntityIdSet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EntityIdSet::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EntityIdSet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:beegfs.EntityIdSet)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int64 uid = 1;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_uid(), target);
          }

          // optional string alias = 2;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_alias();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "beegfs.EntityIdSet.alias");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional .beegfs.LegacyId legacy_id = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.legacy_id_, this_._impl_.legacy_id_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:beegfs.EntityIdSet)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EntityIdSet::ByteSizeLong(const MessageLite& base) {
          const EntityIdSet& this_ = static_cast<const EntityIdSet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EntityIdSet::ByteSizeLong() const {
          const EntityIdSet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:beegfs.EntityIdSet)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // optional string alias = 2;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_alias());
            }
            // optional .beegfs.LegacyId legacy_id = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.legacy_id_);
            }
            // optional int64 uid = 1;
            if (cached_has_bits & 0x00000004u) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_uid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EntityIdSet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntityIdSet*>(&to_msg);
  auto& from = static_cast<const EntityIdSet&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:beegfs.EntityIdSet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_alias(from._internal_alias());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.legacy_id_ != nullptr);
      if (_this->_impl_.legacy_id_ == nullptr) {
        _this->_impl_.legacy_id_ =
            ::google::protobuf::Message::CopyConstruct<::beegfs::LegacyId>(arena, *from._impl_.legacy_id_);
      } else {
        _this->_impl_.legacy_id_->MergeFrom(*from._impl_.legacy_id_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.uid_ = from._impl_.uid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityIdSet::CopyFrom(const EntityIdSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:beegfs.EntityIdSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntityIdSet::InternalSwap(EntityIdSet* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.alias_, &other->_impl_.alias_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_.uid_)
      + sizeof(EntityIdSet::_impl_.uid_)
      - PROTOBUF_FIELD_OFFSET(EntityIdSet, _impl_.legacy_id_)>(
          reinterpret_cast<char*>(&_impl_.legacy_id_),
          reinterpret_cast<char*>(&other->_impl_.legacy_id_));
}

::google::protobuf::Metadata EntityIdSet::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace beegfs
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_beegfs_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
